<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[PHP高效编程 — API]]></title>
      <url>http://zak7.com/2016/07/30/php-master-api/</url>
      <content type="html"><![CDATA[<p style="background-color:#b0f4f3;padding:15px">在本章中我们要研究以API为基础设计系统架构的可能性。<br></p>

<a id="more"></a><!-- 空一行，上下间距更小 -->
<p><link rel="stylesheet" type="text/css" href="http://115.28.217.112/github/extend/like/css/style.css"><link rel="stylesheet" type="text/css" href="http://115.28.217.112/github/extend/calendar/calendar.css"><div id="container"><div class="feed" id="feed2"><div class="likeCount" id="likeCount2" name="likeCount">—</div><div class="likeIt" id="likeIt2">Click heart</div><div class="heart" id="like2" rel="like"></div><form name="countForm"><input name="countNumber" type="hidden" id="countNumber" value="---"></form></div></div><div style="clear:both;content:''"></div></p>
<script src="http://115.28.217.112/github/extend/like/js/jquery.min.js" type="text/javascript"></script><script type="text/javascript">
$(document).ready(function(){
var t;
var timeOnce;
var n=5;
countCallback();
function countCallback() {
        var j = $("form").serializeArray();//序列化name/value
        $.ajax({
            type: 'GET',  //这里用GET
            url: 'http://115.28.217.112/github/extend/like/likecount.php',
            dataType: 'jsonp',  //类型
            data: j,
            jsonp: 'callback', //jsonp回调参数，必需
            async: false,
            success: function(result) {//返回的json数据
                //alert(result.message); //回调输出
                result = result || {};
                if (result.msg=='newcount'&&n>0){
                    $("#likeCount2").html(result.number);
                    $("#countNumber").val(result.number);
                }

            },
            timeout: 3000
        })
}

    $('body').on("click",'.heart',function(){
        var A=$(this).attr("id");
        var B=A.split("like");
        var messageID=B[1];
        //var C=parseInt($("#likeCount"+messageID).html());
        $(this).css("background-position","")
        var D=$(this).attr("rel");
        if(n==1){
            n=0;
            countCallback();
            $("#likeIt"+messageID).html("I love YOU !");
            $("#likeCount"+messageID).html("1314");
            surprise();
                function surprise() 
                { 
                    $("#like"+messageID).addClass("heartAnimation").attr("rel","like");
                    $("#like"+messageID).css("background-position","right");
                    setTimeout(test1,600);
                function test1() 
                { 
                    $("#like"+messageID).removeClass("heartAnimation").attr("rel","like");
                    $("#like"+messageID).css("background-position","right");
                }
                    setTimeout(surprise,800);
                } 
        }else if(n>1){
            if(timeOnce==1){
            }else{
                if(D === 'like') { 
                    n=n-1;
                    //$("#likeCount"+messageID).html(C+1);
                //...
                    countCallback();
                //...
                    //$("#countNumber").val(C+1);
                    if(n==4)$("#likeIt"+messageID).html("I");
                    if(n==3)$("#likeIt"+messageID).html("I love");
                    if(n==2)$("#likeIt"+messageID).html("I love Y");
                    if(n==1)$("#likeIt"+messageID).html("I love YO");
                    $(this).addClass("heartAnimation").attr("rel","like");
                    timeOnce=1;
                    t=setTimeout(test,600);
                    function test() 
                    { 
                        timeOnce=0;
                        clearTimeout(t);
                        $("#like"+messageID).removeClass("heartAnimation").attr("rel","like");
                        $("#like"+messageID).css("background-position","right");
                    } 
                }
                else{
                    $("#likeCount"+messageID).html(C-1);
                    $(this).removeClass("heartAnimation").attr("rel","like");
                    $(this).css("background-position","left");
                }

            }
        }
    });


});
</script>

<h2 id="面向服务的架构"><a href="#面向服务的架构" class="headerlink" title="面向服务的架构"></a>面向服务的架构</h2><blockquote>
<p>简述： <strong>SOA (Service-Oriented Architecture, 面向服务的架构)</strong>是在各种PHP应用程序中日益得到普及的方法。它是一个服务层的系统，提供系统需要的所有功能，但这个服务提供的是应用层，并未链接到表现层。</p>
</blockquote>
<h2 id="数据格式-JSON和XML"><a href="#数据格式-JSON和XML" class="headerlink" title="数据格式:JSON和XML"></a>数据格式:JSON和XML</h2><p>主要讲解JSON和XML。其概念已经在先前的微信开发知识中提及，内容非常简短。<strong>请配合阅读。</strong></p>
<blockquote>
<p><a href="http://zak7.com/2016/07/05/wechat-msg-encapsulation/">微信消息的封装：XML或JSON</a></p>
</blockquote>
<h3 id="使用JSON"><a href="#使用JSON" class="headerlink" title="使用JSON"></a>使用JSON</h3><p>在PHP中，我们用<code>json_encode()</code>函数编写JSON，用<code>json_decode()</code>将它读取回来。<br><strong><span style="color:#ffffff; background-color:#3366ff">&nbsp;注意:&nbsp;</span></strong>&nbsp;因为我们想通过<code>json_decode()</code>获得一个关联数组而不是一个对象，因此我们需要传入<code>true</code>作为<code>json_decode()</code>的第二个参数。</p>
<ol>
<li>js中json的使用<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">json_obj=<span class="built_in">eval</span>(<span class="string">'('</span>+json+<span class="string">')'</span>);</span><br><span class="line">json.item;<span class="comment">//然后可直接通过属性名获取值</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="使用XML"><a href="#使用XML" class="headerlink" title="使用XML"></a>使用XML</h3><p>在PHP中，我们有很多方式使用XML，其中最重要的是DOM扩展和SimpleXML扩展。你可以调用单一的函数在两种格式之间切换使用，因此，当开始使用一种方式，而后为了一个特殊的操作而使用另一种方式是没有意义的。<br>以SimpleXML为例。</p>
<h4 id="构建XML"><a href="#构建XML" class="headerlink" title="构建XML"></a>构建XML</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$simplexml = <span class="keyword">new</span> SimpleXMLElement</span><br><span class="line">	(<span class="string">'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;concerts /&gt;'</span>);</span><br><span class="line">$concert1 = $simplexml-&gt;addChild(<span class="string">'concert'</span>);</span><br><span class="line">$concert1-&gt;addChild(<span class="string">"title"</span>,<span class="string">"The Magic Flute"</span>);</span><br><span class="line">$concert1-&gt;addChild(<span class="string">"time"</span>,<span class="number">1329636600</span>);</span><br><span class="line"></span><br><span class="line">$concert2 = $simplexml-&gt;addChild(<span class="string">'concert'</span>);</span><br><span class="line">$concert2-&gt;addChild(<span class="string">"title"</span>,<span class="string">"Mozart's Requiem"</span>);</span><br><span class="line">$concert2-&gt;addChild(<span class="string">"time"</span>,<span class="number">1330636400</span>);</span><br><span class="line">header(<span class="string">'content-type:text/xml'</span>) ;</span><br><span class="line"><span class="keyword">echo</span> $simplexml-&gt;asXML();</span><br></pre></td></tr></table></figure>
<p><strong>上例输出结果：</strong><br><img src="http://115.28.217.112/github/php/API/1.PNG"><br><strong>上例中利用</strong><code>simplexml_load_string($xml);</code><strong>输出后的结果为：</strong></p>
<pre><code>SimpleXMLElement Object ( 
    [concert] =&gt; Array ( 
    [0] =&gt; SimpleXMLElement Object ( 
        [title] =&gt; The Magic Flute 
        [time] =&gt; 1329636600 ) 
    [1] =&gt; SimpleXMLElement Object ( 
        [title] =&gt; Mozart&apos;s Requiem 
        [time] =&gt; 1330636400 ) 
    ) 
) 
</code></pre><h4 id="读取XML"><a href="#读取XML" class="headerlink" title="读取XML"></a>读取XML</h4><p>SimpleXML最大的特色是可以遍历XML数据，并且访问单个元素。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$xml='&lt;concerts&gt;</span><br><span class="line"> &lt;concert&gt;</span><br><span class="line">  &lt;title&gt;The Magic Flute&lt;/title&gt; </span><br><span class="line">  &lt;time&gt;1329636600&lt;/time&gt; </span><br><span class="line"> &lt;/concert&gt;</span><br><span class="line"> &lt;concert&gt;</span><br><span class="line">  &lt;title&gt;Mozart\'s Requiem&lt;/title&gt; </span><br><span class="line">  &lt;time&gt;1330636400&lt;/time&gt; </span><br><span class="line"> &lt;/concert&gt;</span><br><span class="line">&lt;/concerts&gt;';</span><br><span class="line">$concert_list=simplexml_load_string($xml);</span><br><span class="line">echo "&lt;table&gt;";</span><br><span class="line">foreach($concert_list as $concert)&#123;</span><br><span class="line">	echo "&lt;tr&gt;";</span><br><span class="line">	echo "&lt;td&gt;".$concert-&gt;title."&lt;/td&gt;";</span><br><span class="line">	echo "&lt;td&gt;".date('g:i jS M',(string)$concert-&gt;time)."&lt;/td&gt;";</span><br><span class="line">	echo "&lt;/tr&gt;";</span><br><span class="line">&#125;</span><br><span class="line">echo "&lt;/table&gt;";</span><br><span class="line">echo "Featured concert: ".$concert_list-&gt;concert[1]-&gt;title;</span><br></pre></td></tr></table></figure></p>
<p><strong>上例输出结果：</strong></p>
<pre><code>The Magic Flute 7:30 19th Feb 
Mozart&apos;s Requiem 9:13 1st Mar 
Featured concertMozart&apos;s Requiem
</code></pre><blockquote>
<p>如果我们再循环里通过<code>var_dump()</code>检查每一个<code>$concert</code>值，你会发现它们实际上是<code>SimpleXMLElement</code>对象，而不是简单的数组。当我们输出<code>$concert-&gt;title</code>时，<code>SimpleXML</code>知道如何将<code>$concert-&gt;title</code>表示为一个字符串，因此，如预期的输出对象的值。这也是为什么在<code>date()</code>函数中，要将第二个参数类型转换为字符串。</p>
</blockquote>
<h4 id="递归创建XML"><a href="#递归创建XML" class="headerlink" title="递归创建XML"></a>递归创建XML</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">//SimpleXmlElement - 递归创建xml</span><br><span class="line">$arr = array(</span><br><span class="line">    'name' =&gt; '张三' ,</span><br><span class="line">    'age' =&gt; '23' , </span><br><span class="line">    'job' =&gt; array(</span><br><span class="line">        'title' =&gt; '项目经理' ,</span><br><span class="line">        'salary' =&gt; '88888' ,</span><br><span class="line">        'team' =&gt; array(</span><br><span class="line">            'one' =&gt; 'team1' ,</span><br><span class="line">            'two' =&gt; 'team2' ,</span><br><span class="line">            'subteam' =&gt; array(</span><br><span class="line">                'AAA','BBBB','CCC','DDDD'</span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line">function arr2xml($arr, $node = null)&#123;</span><br><span class="line">    if ($node === null)&#123;</span><br><span class="line">        $simxml = new simpleXmlElement('&lt;?xml </span><br><span class="line">		version="1.0" encoding="UTF-8"?&gt;&lt;root&gt;&lt;/root&gt;') ;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $simxml = $node ;</span><br><span class="line">    &#125;</span><br><span class="line">    foreach ($arr as $k =&gt; $v) &#123;</span><br><span class="line">        if (is_array($v))&#123;</span><br><span class="line">            arr2xml($v,$simxml-&gt;addChild($k));</span><br><span class="line">        &#125;else if (is_numeric($k))&#123;</span><br><span class="line">            $simxml-&gt;addChild('item',$v) ;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $simxml-&gt;addChild($k,$v) ;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    return $simxml-&gt;savexml() ;</span><br><span class="line">&#125;</span><br><span class="line">header('content-type:text/xml') ;</span><br><span class="line">echo arr2xml($arr) ;</span><br></pre></td></tr></table></figure>
<p><strong>上例输出结果：</strong><br><img src="http://115.28.217.112/github/php/API/2.PNG" alt=""></p>
<h2 id="HTTP-超文本传输协议"><a href="#HTTP-超文本传输协议" class="headerlink" title="HTTP:超文本传输协议"></a>HTTP:超文本传输协议</h2><p>如果你想了解缓存，不同文件类型的传递，特别是我们使用Web服务时如何使用其它数据格式，那么以HTTP为基础的Web服务会让你受益匪浅。关注本教程示例中突出的HTTP特性，忽略则风险自负。</p>
<h3 id="先说说HTTPs请求"><a href="#先说说HTTPs请求" class="headerlink" title="先说说HTTPs请求"></a>先说说HTTPs请求</h3><blockquote>
<p>以下示例为：利用Bit.ly提供的API，请求URL缩短器，返回短链BitURL。<br>注意链接开头为https表明我们需要发送HTTPs请求。与HTTP请求做对比。</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用curl请求HTTPS !</span></span><br><span class="line">$url=<span class="string">'https://api-ssl.bitly.com/v3/shorten'</span>.</span><br><span class="line"><span class="string">'?access_token=08de1a3b41a8280b37f00e3af740ffde5672f789'</span></span><br><span class="line">.<span class="string">'&amp;longUrl=http%3A%2F%2Fbaidu.com%2F&amp;format=json'</span>;</span><br><span class="line">$ch = curl_init();<span class="comment">//初始化一个curl会话</span></span><br><span class="line">curl_setopt($ch,CURLOPT_URL, $url);</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER,<span class="number">1</span>);<span class="comment">//设置返回结果但不输出内容</span></span><br><span class="line"><span class="comment">//当请求https的数据时，会要求证书，这时候，加上下面这两个参数，规避ssl的证书检查</span></span><br><span class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">false</span>);<span class="comment">//这个是重点。</span></span><br><span class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">false</span>);</span><br><span class="line">$output=curl_exec($ch); </span><br><span class="line">curl_close($ch);<span class="comment">//关闭一个curl会话并且释放所有资源。</span></span><br><span class="line"><span class="comment">//$output = str_replace('百度', 'PHPit', $output); //字符串替换</span></span><br><span class="line">preg_match(<span class="string">"/&#123;.*&#125;/"</span>, $output,$r);<span class="comment">//匹配获取结果中的json数据，并保存在$r中</span></span><br><span class="line">print_r(json_decode($r[<span class="number">0</span>]));</span><br></pre></td></tr></table></figure>
<ol>
<li><strong>curl_exec</strong><br>curl_exec函数成功时返回 TRUE， 或者在失败时返回 FALSE。<br>然而，如果 CURLOPT_RETURNTRANSFER选项被设置<br>函数执行成功时会返回执行的结果，失败时返回 FALSE 。</li>
<li><strong>curl_setopt</strong>&nbsp;<a href=""><span style="color:#ffffff; background-color:#3366ff">&nbsp;详情&nbsp;</span></a><br>curl_setopt函数是php中一个重要的函数<br>它可以模仿用户的一些行为<br>如模仿用户登录，注册等等一些用户可操作的行为</li>
</ol>
<h3 id="cURL扩展-发送HTTP请求"><a href="#cURL扩展-发送HTTP请求" class="headerlink" title="(cURL扩展)发送HTTP请求"></a>(cURL扩展)发送HTTP请求</h3><p>用PHP发送HTTP请求，需要用到PHP的cURL扩展。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ch=curl_init(<span class="string">'http://www.baidu.com'</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>);</span><br><span class="line">$result=curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line"><span class="comment">//结果替换字符串输出</span></span><br><span class="line">$result=str_replace(<span class="string">'百度'</span>,<span class="string">'PHPit'</span>,$result);</span><br><span class="line"><span class="keyword">echo</span> $result;</span><br></pre></td></tr></table></figure></p>
<h3 id="PHP-pecl-http扩展"><a href="#PHP-pecl-http扩展" class="headerlink" title="PHP pecl_http扩展"></a>PHP pecl_http扩展</h3><p>略</p>
<h3 id="PHP流"><a href="#PHP流" class="headerlink" title="PHP流"></a>PHP流</h3><p>需要在php.ini文件中启用allow_url_fopen。则可以这么做：<br><code>$fp = fopen(&#39;http://example.com&#39;);</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$url=<span class="string">'请求的URL链接'</span>;</span><br><span class="line">$result=file_get_contents($url);</span><br><span class="line">print_r(json_decode($result));</span><br></pre></td></tr></table></figure></p>
<h3 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h3><table>
<thead>
<tr>
<th>状态码</th>
<th>信息</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>1xx</strong></td>
<td><strong>Information</strong></td>
<td></td>
</tr>
<tr>
<td><strong>2xx</strong></td>
<td><strong>Success</strong></td>
<td></td>
</tr>
<tr>
<td>200</td>
<td>OK</td>
<td>一切都好</td>
</tr>
<tr>
<td>201</td>
<td>Created</td>
<td>已生成一个资源</td>
</tr>
<tr>
<td>204</td>
<td>No Content</td>
<td>这个请求已被处理，但没有需要返回的内容</td>
</tr>
<tr>
<td><strong>3xx</strong></td>
<td><strong>Redirect</strong></td>
<td></td>
</tr>
<tr>
<td>301</td>
<td>Moved</td>
<td>永久重定向，客户端应该更新它们的链接</td>
</tr>
<tr>
<td>302</td>
<td>Found</td>
<td>通常代表一个重写规则或类似的结果，这里表示你请求的内容在其他地方找到</td>
</tr>
<tr>
<td>304</td>
<td>Not Modified</td>
<td>？这关系到缓存而且通常用空的正文告诉客户端使用它们的缓存版本</td>
</tr>
<tr>
<td>307</td>
<td>Temporary Redirect</td>
<td>这个内容已迁移，但不是永久的，因此不需要更新链接</td>
</tr>
<tr>
<td><strong>4xx</strong></td>
<td><strong>Failure</strong></td>
<td></td>
</tr>
<tr>
<td>400</td>
<td>Bad Request</td>
<td>通用的来自服务器的不知道消息</td>
</tr>
<tr>
<td>401</td>
<td>Not Authorized</td>
<td>你需要提供一些凭证来访问</td>
</tr>
<tr>
<td>403</td>
<td>Forbidden</td>
<td>你提供了凭证，但没有权限访问</td>
</tr>
<tr>
<td>404</td>
<td>Not Found</td>
<td>在这个URL中什么都没有</td>
</tr>
<tr>
<td>406</td>
<td>Not Acceptable</td>
<td>服务器无法提供符合这个请求文件头的内容</td>
</tr>
<tr>
<td><strong>5xx</strong></td>
<td><strong>Server Error</strong></td>
<td></td>
</tr>
<tr>
<td>500</td>
<td>Internal Server Error</td>
<td>对于PHP应用程序而言，PHP出现了某些错误，并且没有提供给Apache关于这些错误的任何信息</td>
</tr>
<tr>
<td>503</td>
<td>Server Unavailable</td>
<td>通常用API显示的一个临时错误信息</td>
</tr>
</tbody>
</table>
<h3 id="HTTP文件头"><a href="#HTTP文件头" class="headerlink" title="HTTP文件头"></a>HTTP文件头</h3><ol>
<li><p><strong>HTTP文件头</strong><br>我们可以通过超全局变量$_SERVER得到请求中的信息，包括accept文件头、host、path、GET参数等。仅仅使用header()函数就可以任意返回文件头到客户端。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Get the headers from $_SERVER</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Accept:'</span>.$_SERVER[<span class="string">'HTTP_ACCEPT'</span>].<span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Verb:'</span>.$_SERVER[<span class="string">'REQUEST_METHOD'</span>].<span class="string">'\n'</span>;</span><br><span class="line"><span class="comment">//send headers to the client</span></span><br><span class="line">header(<span class="string">'Content-type:text/html;charset=utf8'</span>);</span><br><span class="line">header(<span class="string">'HTTP/1.1 404 Not Found'</span>);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>文件头必须首先发给客户端。比如，我们需要以某一方式通过脚本实现当一个用户没有登录时发送一个登录页面给他。我们可以使用如下语句重定向一个用户。<br><code>header(&#39;Location: login.php&#39;);</code><br>然而，如果你返回任何内容之后调用这个函数，你将会看到一个错误。我们可以使用<strong>输出缓存（output buffering）</strong>对内容排队并线发送文件头。</p>
<ul>
<li>在你的PHP脚本中可以使用<code>ob_start()</code>来启用输出缓存，或用php.ini设置output_buffering为默认打开，当脚本结束或当调用<code>ob_flush()</code>函数，PHP才会将内容发送到客户端。</li>
</ul>
</blockquote>
</li>
<li><strong>常用的HTTP文件头</strong></li>
</ol>
<table>
<thead>
<tr>
<th>文件头</th>
<th>作用范围</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>Accept</td>
<td>Request</td>
<td>说明客户端希望在响应中使用怎样的格式</td>
</tr>
<tr>
<td>Content-Type</td>
<td>Response</td>
<td>描述响应的格式</td>
</tr>
<tr>
<td>Accept-Encoding</td>
<td>Request</td>
<td>指明客户端支持怎样的编码</td>
</tr>
<tr>
<td>Content-Encoding</td>
<td>Response</td>
<td>描述响应的编码</td>
</tr>
<tr>
<td>Accept-Language</td>
<td>Request</td>
<td>按优先顺序排列语言清单</td>
</tr>
<tr>
<td>Content-Language</td>
<td>Response</td>
<td>描述响应正文中使用的语言</td>
</tr>
<tr>
<td>Content-Length</td>
<td>Response</td>
<td>响应正文的大小</td>
</tr>
<tr>
<td>Set-Cookie</td>
<td>Response</td>
<td>发送Cookie到响应中，供以后的请求使用</td>
</tr>
<tr>
<td>Cookie</td>
<td>Request</td>
<td>Cookie数据来自于先前对请求的响应中</td>
</tr>
<tr>
<td>Expires</td>
<td>Response</td>
<td>说明到何时之前该内容有效</td>
</tr>
<tr>
<td>Authorization</td>
<td>Request</td>
<td>为保护资源而提供的访问凭证</td>
</tr>
</tbody>
</table>
<p><strong>例如，有文件头如下：</strong><br>    <code>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</code><br>在这里我们看到一系列被逗号分隔的值，其中还包含分号和一个q值。一个没有q值的格式是首选格式，如果服务器不能提供这些格式，那么降低要求，选q=0.9的。<code>*/*</code>表示服务器不管有什么样的格式都应该发送，客户端收到结果后将尽可能处理它们。</p>
<h3 id="HTTP动词"><a href="#HTTP动词" class="headerlink" title="HTTP动词"></a>HTTP动词</h3><p>当我们在编写Web表单时可以在GET方法和POST方法之间做一个选择。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"form.php"</span> method=<span class="string">"get"</span>&gt;</span><br><span class="line">	Name: &lt;input type=<span class="string">"text"</span> name=<span class="string">"name"</span>/&gt;</span><br><span class="line">	&lt;input type=<span class="string">"submit"</span> value=<span class="string">"Save"</span>/&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p>
<p>GET与POST方法的区别在于：提交的表单数据和相应的Content-Type不在URL中，而在请求的正文中。</p>
<h2 id="理解并选择服务类型"><a href="#理解并选择服务类型" class="headerlink" title="理解并选择服务类型"></a>理解并选择服务类型</h2><h3 id="PHP和SOAP"><a href="#PHP和SOAP" class="headerlink" title="PHP和SOAP"></a>PHP和SOAP</h3><blockquote>
<p>SOAP 曾经表示简单对象访问协议（Simple Object Access Protocol），但由于SOAP并不简单，其使用率已下降。然而，SOAP是严格定义的XML-RPC的一个特定子集。它是一个冗长的XML格式，包括PHP很多程序都建有内置的类库可以轻松处理SOAP。我们通常使用<strong>WSDL（Web Service Description Language，Web服务描述语言）</strong>文档描述SOAP服务，这是用来描述Web服务的一组定义。</p>
</blockquote>
<p><strong>下面，我们将建立一个服务并使用SOAP扩展。</strong><br>首先，为这个公开的服务创建一些功能：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">server</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getDisplayName</span><span class="params">($first_name,$last_name)</span></span>&#123;</span><br><span class="line">		$name=<span class="string">''</span>;</span><br><span class="line">		$name.=strtoupper(substr($first_name,<span class="number">0</span>,<span class="number">1</span>));</span><br><span class="line">		<span class="comment">//ucfirst把字符串的首字母变为大写</span></span><br><span class="line">		$name.=<span class="string">' '</span>.ucfirst($last_name);</span><br><span class="line">		<span class="keyword">return</span> $name;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">countWords</span><span class="params">($paragraph)</span></span>&#123;</span><br><span class="line">		$words=preg_split(<span class="string">'/[.,!?;]+/'</span>,$paragraph);</span><br><span class="line">		<span class="keyword">return</span> count($words);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>然后，为了让这个SOAP服务起作用，我们要使用下面的代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require_once</span>(<span class="string">'server_class.php'</span>);</span><br><span class="line">$options=<span class="keyword">array</span>(<span class="string">'uri'</span>=&gt;<span class="string">'http://localhost/'</span>);</span><br><span class="line">$server=<span class="keyword">new</span> SoapServer(<span class="keyword">NULL</span>,$options);</span><br><span class="line">$server-&gt;setClass(<span class="string">'server'</span>);</span><br><span class="line">$server-&gt;handle();</span><br></pre></td></tr></table></figure></p>
<p>现在，我们可以在客户端用简单的代码使用这个服务了。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SoapClientNew</span> <span class="keyword">extends</span> <span class="title">SoapClient</span>  </span><br><span class="line"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__doRequest</span><span class="params">($request, $location, $action, $version, $one_way = <span class="number">0</span>)</span>  </span><br><span class="line">    </span>&#123;  </span><br><span class="line">        $request = <span class="keyword">parent</span>::__doRequest($request, $location, $action, $version, $one_way);  </span><br><span class="line">        </span><br><span class="line">        $start = strpos($request, <span class="string">'&lt;?xml'</span>);<span class="comment">//根据实际情况做处理。。。，如果是<span class="meta">&lt;?</span>xml开头，改成<span class="meta">&lt;?</span>xml</span></span><br><span class="line">        $end = strrpos($request, <span class="string">'&gt;'</span>);  </span><br><span class="line">        <span class="keyword">return</span> substr($request, $start, $end-$start+<span class="number">1</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">$options=<span class="keyword">array</span>(<span class="string">'location'</span>=&gt;<span class="string">'http://localhost/server.php'</span>,<span class="string">'uri'</span>=&gt;<span class="string">'http://localhost/'</span>,<span class="string">'trace'</span>=&gt;<span class="number">1</span>);</span><br><span class="line">$client=<span class="keyword">new</span> SoapClientNew(<span class="keyword">NULL</span>,$options);</span><br><span class="line"><span class="comment">//两种调用方式，直接调用方法，和用__soapCall间接调用</span></span><br><span class="line"><span class="keyword">echo</span> $client-&gt;__soapCall(<span class="string">"getDisplayName"</span>, <span class="keyword">array</span>(<span class="string">'jack'</span>, <span class="string">'bob'</span>));</span><br><span class="line"><span class="keyword">echo</span> $client-&gt;getDisplayName(<span class="string">'jack'</span>,<span class="string">'bob'</span>);</span><br><span class="line">var_dump($client-&gt;__getLastRequest());</span><br><span class="line">var_dump($client-&gt;__getLastResponse());</span><br><span class="line">&#125;<span class="keyword">catch</span>(SoapFault $e)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $e-&gt;getMessage();</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $e-&gt;getMessage();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这里<code>SoapClientNew</code>继承<code>SoapClient</code>并覆盖了父类的定义。<br>否则一直会有<code>looks like we got no XML document</code>这个错误，具体原因还是不大理解，先留着。</p>
<h3 id="使用WSDL描述SOAP服务"><a href="#使用WSDL描述SOAP服务" class="headerlink" title="使用WSDL描述SOAP服务"></a>使用WSDL描述SOAP服务</h3><p>前面的SOAP使用的是一个非WSDL模式，使用带有SOAP服务的WSDL是一个更常见和更简单的方式。<br>首先，新建文件<code>server10.php</code>，并写入功能代码。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">server10</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getDisplayName</span><span class="params">($first_name,$last_name)</span></span>&#123;</span><br><span class="line">		$name=<span class="string">''</span>;</span><br><span class="line">		$name.=strtoupper(substr($first_name,<span class="number">0</span>,<span class="number">1</span>));</span><br><span class="line">		<span class="comment">//ucfirst把字符串的首字母变为大写</span></span><br><span class="line">		$name.=<span class="string">' '</span>.ucfirst($last_name);</span><br><span class="line">		<span class="keyword">return</span> $name;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">countWords</span><span class="params">($paragraph)</span></span>&#123;</span><br><span class="line">		$words=preg_split(<span class="string">'/[.,!?;]+/'</span>,$paragraph);</span><br><span class="line">		<span class="keyword">return</span> count($words);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>然后,下载<a href="http://115.28.217.112/github/php/API/SoapDiscovery.class.zip" target="_blank" rel="external"><span style="color:#ffffff; background-color:#3366ff">&nbsp;SoapDiscovery.class.php&nbsp;</span></a>文件，利用<code>SoapDiscovery.class.php</code>文件的公用方法<code>getWSDL</code>，生成WSDL文件。<br>新建<code>creat_wsdl.php</code>，用于创建WSDL文件。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">"server10.php"</span>); </span><br><span class="line"><span class="keyword">include</span>(<span class="string">"SoapDiscovery.class.php"</span>);</span><br><span class="line">$disco = <span class="keyword">new</span> SoapDiscovery(<span class="string">'server10'</span>, <span class="string">'soap'</span>); </span><br><span class="line"><span class="comment">//第一个参数是类名（生成的wsdl文件就是以它来命名的），即Service类</span></span><br><span class="line"><span class="comment">//第二个参数是服务的名字（这个可以随便写）。 </span></span><br><span class="line">$disco-&gt;getWSDL();</span><br></pre></td></tr></table></figure></p>
<p>生成WSDL文件<code>server10.wsdl</code>后，修改<code>server10.php</code>。后续添加如下代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$server = <span class="keyword">new</span> SoapServer(<span class="string">'server10.wsdl'</span>, <span class="keyword">array</span>(<span class="string">'soap_version'</span> =&gt; SOAP_1_2));</span><br><span class="line">$server-&gt;setClass(<span class="string">"server10"</span>); <span class="comment">//注册Service类的所有方法  </span></span><br><span class="line">$server-&gt;handle(); <span class="comment">//处理请求</span></span><br></pre></td></tr></table></figure></p>
<p>最后，就是客户端代码。新建<code>client.php</code>，代码如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SoapClientNew</span> <span class="keyword">extends</span> <span class="title">SoapClient</span>  </span><br><span class="line"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__doRequest</span><span class="params">($request, $location, $action, $version, $one_way = <span class="number">0</span>)</span>  </span><br><span class="line">    </span>&#123;  </span><br><span class="line">        $request = <span class="keyword">parent</span>::__doRequest($request, $location, $action, $version, $one_way);  </span><br><span class="line">        </span><br><span class="line">        $start = strpos($request, <span class="string">'&lt;?xml'</span>);</span><br><span class="line"><span class="comment">//根据实际情况做处理。。。，如果是<span class="meta">&lt;?</span>xml开头，改成<span class="meta">&lt;?</span>xml</span></span><br><span class="line">        $end = strrpos($request, <span class="string">'&gt;'</span>);  </span><br><span class="line">        <span class="keyword">return</span> substr($request, $start, $end-$start+<span class="number">1</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line">ini_set(<span class="string">'soap.wsdl_cache_enabled'</span>, <span class="string">"0"</span>); <span class="comment">//关闭wsdl缓存    </span></span><br><span class="line">$soap = <span class="keyword">new</span> SoapClientNew(<span class="string">'http://localhost/server10.php?wsdl'</span>);</span><br><span class="line"><span class="keyword">echo</span> $soap-&gt;getDisplayName(<span class="string">'sd'</span>,<span class="string">'hghg'</span>);</span><br></pre></td></tr></table></figure></p>
<h2 id="调试HTTP"><a href="#调试HTTP" class="headerlink" title="调试HTTP"></a>调试HTTP</h2><h3 id="使用日志收集信息"><a href="#使用日志收集信息" class="headerlink" title="使用日志收集信息"></a>使用日志收集信息</h3><p>开启<code>error_log()</code>功能，避免利用<code>echo</code>或<code>print_r</code>查错带来重复乏味操作。</p>
<ul>
<li>编辑php.ini，将log_error设置为on。<code>log_errors = On</code></li>
<li>windows环境下，还需设置error_log的路径及文件名。<code>error_log=&quot;c:/wamp64/logs/php_error.log&quot;</code></li>
</ul>
<ol>
<li><p><strong><code>error_log</code>范例：</strong></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果无法连接到数据库，发送通知到服务器日志</span></span><br><span class="line"><span class="keyword">if</span> (!Ora_Logon($username, $password)) &#123;</span><br><span class="line">    error_log(<span class="string">"Oracle database not available!"</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 如果用尽了 FOO，通过邮件通知管理员</span></span><br><span class="line"><span class="keyword">if</span> (!($foo = allocate_new_foo())) &#123;</span><br><span class="line">    error_log(<span class="string">"Big trouble, we're all out of FOOs!"</span>, <span class="number">1</span>,</span><br><span class="line">               <span class="string">"operator@example.com"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用 error_log() 的另一种方式:</span></span><br><span class="line">error_log(<span class="string">"You messed up!"</span>, <span class="number">3</span>, <span class="string">"/var/tmp/my-errors.log"</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>日志类示例</strong></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">log</span> </span>&#123; </span><br><span class="line">  <span class="keyword">const</span> USER_ERROR_DIR = <span class="string">'error_log/Site_User_errors.log'</span>; </span><br><span class="line">  <span class="keyword">const</span> GENERAL_ERROR_DIR = <span class="string">'error_log/Site_General_errors.log'</span>; </span><br><span class="line">  <span class="comment">/* </span><br><span class="line">   User Errors... </span><br><span class="line">  */</span> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user</span><span class="params">($msg,$username)</span> </span><br><span class="line">    </span>&#123; </span><br><span class="line">    $date = date(<span class="string">'d.m.Y h:i:s'</span>); </span><br><span class="line">    $log = $msg.<span class="string">"   |  Date:  "</span>.$date.<span class="string">"  |  User:  "</span>.$username.<span class="string">"\n"</span>; </span><br><span class="line">    error_log($log, <span class="number">3</span>, <span class="keyword">self</span>::USER_ERROR_DIR); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">/* </span><br><span class="line">   General Errors... </span><br><span class="line">  */</span> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">general</span><span class="params">($msg)</span> </span><br><span class="line">    </span>&#123; </span><br><span class="line">    $date = date(<span class="string">'d.m.Y h:i:s'</span>); </span><br><span class="line">    $log = $msg.<span class="string">"   |  Date:  "</span>.$date.<span class="string">"\n"</span>; </span><br><span class="line">    error_log($msg.<span class="string">"   |  Tarih:  "</span>.$date, <span class="number">3</span>, <span class="keyword">self</span>::GENERAL_ERROR_DIR); </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">$log = <span class="keyword">new</span> log(); </span><br><span class="line">$log-&gt;user($msg,$username); <span class="comment">//use for user errors </span></span><br><span class="line"><span class="comment">//$log-&gt;general($msg); //use for general errors</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="检查HTTP流量"><a href="#检查HTTP流量" class="headerlink" title="检查HTTP流量"></a>检查HTTP流量</h3><p>主要工具：Wireshark和Charles Proxy。<br>略。</p>
<h2 id="RPC服务"><a href="#RPC服务" class="headerlink" title="RPC服务"></a>RPC服务</h2><p><strong>建立一个RPC服务。</strong><br>首先，我们将继续使用SOAP示例中 的类。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//servicefunctions.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">servicefunctions</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getDisplayName</span><span class="params">($first_name,$last_name)</span></span>&#123;</span><br><span class="line">		$name=<span class="string">''</span>;</span><br><span class="line">		$name.=strtoupper(substr($first_name,<span class="number">0</span>,<span class="number">1</span>));</span><br><span class="line">		<span class="comment">//ucfirst把字符串的首字母变为大写</span></span><br><span class="line">		$name.=<span class="string">' '</span>.ucfirst($last_name);</span><br><span class="line">		<span class="keyword">return</span> $name;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">countWords</span><span class="params">($paragraph)</span></span>&#123;</span><br><span class="line">		$words=preg_split(<span class="string">'/[.,!?;]+/'</span>,$paragraph);</span><br><span class="line">		<span class="keyword">return</span> count($words);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>现在假设用户想要一个JSON格式的响应。如下是针对此服务的例子<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'servicefunctions.php'</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'method'</span>]))&#123;</span><br><span class="line">	<span class="keyword">switch</span>($_GET[<span class="string">'method'</span>])&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'countWords'</span>:</span><br><span class="line">			$response=servicefunctions::countWords($_GET[<span class="string">'words'</span>]);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">'getDisplayName'</span>:</span><br><span class="line">			$response=servicefunctions::getDisplayName($_GET[<span class="string">'first_name'</span>],$_GET[<span class="string">'last_name'</span>]);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			$response=<span class="string">"Unknow Method"</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	$response=<span class="string">"Unknow Method"</span>;</span><br><span class="line">&#125;</span><br><span class="line">header(<span class="string">'Content-Type:application/json'</span>);</span><br><span class="line"><span class="keyword">echo</span> json_encode($response);</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>代码中用$_GET变量作为函数参数，在实际应用中非常不可取。<br>这里仅为了让栗子变得简单一些。</p>
</blockquote>
<h2 id="再讲讲SimpleXML和XML"><a href="#再讲讲SimpleXML和XML" class="headerlink" title="再讲讲SimpleXML和XML"></a>再讲讲SimpleXML和XML</h2><h3 id="对应关系举例"><a href="#对应关系举例" class="headerlink" title="对应关系举例"></a>对应关系举例</h3><p><strong>有数组如下：</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'张三'</span> ,</span><br><span class="line">    <span class="string">'age'</span> =&gt; <span class="string">'23'</span> , </span><br><span class="line">    <span class="string">'job'</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'title'</span> =&gt; <span class="string">'项目经理'</span> ,</span><br><span class="line">        <span class="string">'salary'</span> =&gt; <span class="string">'88888'</span> ,</span><br><span class="line">        <span class="string">'team'</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'one'</span> =&gt; <span class="string">'team1'</span> ,</span><br><span class="line">            <span class="string">'two'</span> =&gt; <span class="string">'team2'</span> ,</span><br><span class="line">            <span class="string">'subteam'</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">'AAA'</span>,<span class="string">'BBBB'</span>,<span class="string">'CCC'</span>,<span class="string">'DDDD'</span></span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<p><strong>对应的SimpleXMLElement如下：</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">SimpleXMLElement Object ( </span><br><span class="line">[name] =&gt; 张三 </span><br><span class="line">[age] =&gt; <span class="number">23</span> </span><br><span class="line">[job] =&gt; </span><br><span class="line">	SimpleXMLElement Object ( </span><br><span class="line">	[title] =&gt; 项目经理 </span><br><span class="line">	[salary] =&gt; <span class="number">88888</span> </span><br><span class="line">	[team] =&gt; </span><br><span class="line">		SimpleXMLElement Object ( </span><br><span class="line">		[one] =&gt; team1 </span><br><span class="line">		[two] =&gt; team2 </span><br><span class="line">		[subteam] =&gt; </span><br><span class="line">			SimpleXMLElement Object ( </span><br><span class="line">			[item] =&gt; </span><br><span class="line">				<span class="keyword">Array</span> (</span><br><span class="line">				 [<span class="number">0</span>] =&gt; AAA </span><br><span class="line">				 [<span class="number">1</span>] =&gt; BBBB </span><br><span class="line">				 [<span class="number">2</span>] =&gt; CCC </span><br><span class="line">				 [<span class="number">3</span>] =&gt; DDDD ) ) ) ) </span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<p><strong>对应的XML如下：</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">age</span>&gt;</span>23<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">job</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>项目经理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">salary</span>&gt;</span>88888<span class="tag">&lt;/<span class="name">salary</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">team</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">one</span>&gt;</span>team1<span class="tag">&lt;/<span class="name">one</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">two</span>&gt;</span>team2<span class="tag">&lt;/<span class="name">two</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">subteam</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">item</span>&gt;</span>AAA<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">item</span>&gt;</span>BBBB<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">item</span>&gt;</span>CCC<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">item</span>&gt;</span>DDDD<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">subteam</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">team</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">job</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="如何处理它们"><a href="#如何处理它们" class="headerlink" title="如何处理它们"></a>如何处理它们</h3><ol>
<li><strong>SimpleXMLElement转化为XML</strong><pre><code>header(&apos;content-type:text/xml&apos;) ;
echo $simpleXML-&gt;savexml();
</code></pre></li>
<li><strong>XML转化为SimpleXMLElement</strong><pre><code>//方法一
$simplexml = simplexml_load_string($xml);
//方法二，可以继续添加元素
$simplexml = new SimpleXMLElement($xml);
</code></pre></li>
<li><strong>读取SimpleXML元素</strong><pre><code>//此处视实际情况而定，代码仅为参考
foreach($simplexml-&gt;job-&gt;team-&gt;subteam-&gt;item as $item){
    var_dump($item);
}
</code></pre></li>
</ol>
<h2 id="Ajax和Web服务"><a href="#Ajax和Web服务" class="headerlink" title="Ajax和Web服务"></a>Ajax和Web服务</h2><blockquote>
<p>本节有跨域请求，以及用JSON建成现有的MVC系统并利用其路由等相关知识，略。<br>以后实际应用遇到，再来补充</p>
</blockquote>
<h3 id="点赞实例"><a href="#点赞实例" class="headerlink" title="点赞实例"></a>点赞实例</h3><p>Ajax会让网页的交互体验更佳，可以不重载页面的情况下局部动态填入数据。<br>文章开头的<strong>点赞小工具</strong>就是利用了Ajax制作。<br><strong>其中的Ajax代码如下：</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"jquery.min.js"</span> type=<span class="string">"text/javascript"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">countCallback();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">countCallback</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> j = $(<span class="string">"form"</span>).serializeArray();<span class="comment">//序列化name/value</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">'GET'</span>,  <span class="comment">//这里用GET</span></span><br><span class="line">            url: <span class="string">'likecount.php'</span>,</span><br><span class="line">            dataType: <span class="string">'jsonp'</span>,  <span class="comment">//类型</span></span><br><span class="line">            data: j,</span><br><span class="line">            jsonp: <span class="string">'callback'</span>, <span class="comment">//jsonp回调参数，必需</span></span><br><span class="line">            <span class="keyword">async</span>: <span class="literal">false</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;<span class="comment">//返回的json数据</span></span><br><span class="line">                <span class="comment">//alert(result.message); //回调输出</span></span><br><span class="line">                result = result || &#123;&#125;;</span><br><span class="line">                <span class="keyword">if</span> (result.msg==<span class="string">'newcount'</span>&amp;&amp;n&gt;<span class="number">0</span>)&#123;</span><br><span class="line">				$(<span class="string">"#likeCount2"</span>).html(result.number);</span><br><span class="line">				$(<span class="string">"#countNumber"</span>).val(result.number);</span><br><span class="line">                &#125;</span><br><span class="line">                 </span><br><span class="line">            &#125;,</span><br><span class="line">            timeout: <span class="number">3000</span></span><br><span class="line">        &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>响应的服务端的代码如下：</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">	<span class="comment">//jsonp</span></span><br><span class="line">$callback = <span class="keyword">isset</span>($_GET[<span class="string">'callback'</span>]) ? trim($_GET[<span class="string">'callback'</span>]) : <span class="string">''</span>; </span><br><span class="line">	<span class="comment">//jsonp回调参数，必需</span></span><br><span class="line">$countNumber=$_GET[<span class="string">'countNumber'</span>];</span><br><span class="line"><span class="keyword">if</span>(is_numeric($countNumber))&#123;</span><br><span class="line">	$likecount[<span class="string">"msg"</span>]=<span class="string">"newcount"</span>;</span><br><span class="line">	$likecount[<span class="string">"number"</span>]=$countNumber+<span class="number">1</span>;</span><br><span class="line">	file_put_contents(<span class="string">'likecount'</span>, $likecount[<span class="string">"number"</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	$likecount[<span class="string">"msg"</span>]=<span class="string">"newcount"</span>;</span><br><span class="line">	<span class="keyword">if</span>(file_exists(<span class="string">"likecount"</span>)) </span><br><span class="line">		$likecount[<span class="string">"number"</span>]=file_get_contents(<span class="string">'likecount'</span>);</span><br><span class="line">	<span class="keyword">else</span> $likecount[<span class="string">"number"</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">$tmp= json_encode($likecount); <span class="comment">//json 数据</span></span><br><span class="line"><span class="keyword">echo</span> $callback . <span class="string">'('</span> . $tmp .<span class="string">')'</span>;  <span class="comment">//返回格式，必需</span></span><br><span class="line">cexit();</span><br></pre></td></tr></table></figure></p>
<h3 id="日历实例"><a href="#日历实例" class="headerlink" title="日历实例"></a>日历实例</h3><h4 id="日历实例预览"><a href="#日历实例预览" class="headerlink" title="日历实例预览"></a>日历实例预览</h4><iframe src="http://115.28.217.112/github/extend/calendar/calendar_table.php" frameborder="0" width="100%" height="380px" scrolling="no"></iframe>

<h4 id="日历源码下载"><a href="#日历源码下载" class="headerlink" title="日历源码下载"></a>日历源码下载</h4><blockquote>
<p><a href="http://115.28.217.112/github/extend/calendar/calendar.zip" target="_blank" rel="external"><strong><span style="color:#ffffff; background-color:#3366ff">&nbsp;日历源码下载&nbsp;</span></strong></a></p>
</blockquote>
<h4 id="日历源码摘录"><a href="#日历源码摘录" class="headerlink" title="日历源码摘录"></a>日历源码摘录</h4><p><strong>ajax代码如下</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">  $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// For all anchors inside our table cells, add an onclick event</span></span><br><span class="line">    $(<span class="string">'#calendar td a'</span>).click(</span><br><span class="line">      <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123; </span><br><span class="line">        <span class="comment">// Stop the link from triggering</span></span><br><span class="line">        event.preventDefault();</span><br><span class="line">        <span class="comment">// Stop the body click from triggering</span></span><br><span class="line">        event.stopPropagation();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Remove existing tooltips:</span></span><br><span class="line">        $(<span class="string">'#calendar td div'</span>).remove();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Create a simple container for our data</span></span><br><span class="line">        <span class="keyword">var</span> tooltip = </span><br><span class="line">		$(<span class="string">'&lt;div/&gt;'</span>).css(<span class="string">"position"</span>, <span class="string">"absolute"</span>).addClass(<span class="string">'tooltip'</span>);</span><br><span class="line">	<span class="keyword">var</span> msgbox=$(<span class="keyword">this</span>).parent();<span class="comment">//先获取父级元素，否则在ajax中无效</span></span><br><span class="line">        <span class="comment">// Perform the AJAX request to the anchors link</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">          url: <span class="keyword">this</span>.href,</span><br><span class="line">		  type: <span class="string">'GET'</span>,  <span class="comment">//这里用GET</span></span><br><span class="line">          dataType: <span class="string">'jsonp'</span>,  <span class="comment">//类型</span></span><br><span class="line">          jsonp: <span class="string">'callback'</span>, <span class="comment">//jsonp回调参数，必需</span></span><br><span class="line">          <span class="keyword">async</span>: <span class="literal">false</span>,</span><br><span class="line">          success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">			   <span class="comment">//json_obj=eval('('+data+')');</span></span><br><span class="line">            <span class="comment">// On success, add the data inside our tooltip</span></span><br><span class="line">			<span class="keyword">var</span> dateNum=data.date;<span class="comment">//js转化时间戳</span></span><br><span class="line">			<span class="keyword">var</span> d=<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">parseInt</span>(dateNum)*<span class="number">1000</span>);</span><br><span class="line">			<span class="keyword">var</span> dateStr =formatDate(d); </span><br><span class="line">            tooltip.append(<span class="string">"&lt;p&gt;&lt;b&gt;Event:&lt;/b&gt; "</span> + data.title </span><br><span class="line">			+ <span class="string">"&lt;br /&gt; &lt;b&gt;Date:&lt;/b&gt; "</span> +dateStr+ <span class="string">"&lt;/p&gt;"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Add the tooltip to the table cell</span></span><br><span class="line">            msgbox.append(tooltip);</span><br><span class="line">			<span class="comment">//$('#likeCount2').append(tooltip);</span></span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Add an onclick to the body to remove existing tooltips </span></span><br><span class="line">	<span class="comment">//so the user can move on by clicking anywhere</span></span><br><span class="line">    $(<span class="string">'body'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      $(<span class="string">'#calendar td div'</span>).remove();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatDate</span>(<span class="params">now</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> year=now.getFullYear();</span><br><span class="line"><span class="keyword">var</span> month=now.getMonth()+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> date=now.getDate();</span><br><span class="line"><span class="keyword">var</span> hour=now.getHours();</span><br><span class="line"><span class="keyword">var</span> minute=now.getMinutes();</span><br><span class="line"><span class="keyword">var</span> second=now.getSeconds();</span><br><span class="line"><span class="keyword">return</span> year+<span class="string">"-"</span>+month+<span class="string">"-"</span>+date+<span class="string">" "</span>+hour+<span class="string">":"</span>+minute+<span class="string">":"</span>+second;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>服务端代码如下：</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EventsController</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="keyword">protected</span> $events_file = <span class="string">'events-list.txt'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">GETAction</span><span class="params">($request)</span> </span>&#123;</span><br><span class="line">    $events = <span class="keyword">$this</span>-&gt;readEvents();</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($request-&gt;url_elements[<span class="number">2</span>]) </span><br><span class="line">	&amp;&amp; is_numeric($request-&gt;url_elements[<span class="number">2</span>])) &#123;</span><br><span class="line">      <span class="keyword">return</span> $events[$request-&gt;url_elements[<span class="number">2</span>]];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> $events;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">POSTAction</span><span class="params">($request)</span> </span>&#123;<span class="comment">//后续追加</span></span><br><span class="line">    <span class="comment">// error checking and filtering input MUST go here</span></span><br><span class="line">    $events = <span class="keyword">$this</span>-&gt;readEvents();</span><br><span class="line">    $event = <span class="keyword">array</span>();</span><br><span class="line">    $event[<span class="string">'title'</span>] = $request-&gt;parameters[<span class="string">'title'</span>];</span><br><span class="line">    $event[<span class="string">'date'</span>] = $request-&gt;parameters[<span class="string">'date'</span>];</span><br><span class="line">    $event[<span class="string">'capacity'</span>] = $request-&gt;parameters[<span class="string">'capacity'</span>];</span><br><span class="line"></span><br><span class="line">    $events[] = $event;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;writeEvents($events);</span><br><span class="line">    <span class="comment">//$id = max(array_keys($events));</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">PUTAction</span><span class="params">($request)</span> </span>&#123;<span class="comment">//指定修改</span></span><br><span class="line">    <span class="comment">// error checking and filtering input MUST go here</span></span><br><span class="line">    $events = <span class="keyword">$this</span>-&gt;readEvents();</span><br><span class="line">    $event = <span class="keyword">array</span>();</span><br><span class="line">    $event[<span class="string">'title'</span>] = $request-&gt;parameters[<span class="string">'title'</span>];</span><br><span class="line">    $event[<span class="string">'date'</span>] = $request-&gt;parameters[<span class="string">'date'</span>];</span><br><span class="line">    $event[<span class="string">'capacity'</span>] = $request-&gt;parameters[<span class="string">'capacity'</span>];</span><br><span class="line">    $id = $request-&gt;url_elements[<span class="number">2</span>];</span><br><span class="line">    $events[$id] = $event;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;writeEvents($events);;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">DELETEAction</span><span class="params">($request)</span> </span>&#123;<span class="comment">//删除</span></span><br><span class="line">    $events = <span class="keyword">$this</span>-&gt;readEvents();</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($request-&gt;url_elements[<span class="number">2</span>]) </span><br><span class="line">	&amp;&amp; is_numeric($request-&gt;url_elements[<span class="number">2</span>])) &#123;</span><br><span class="line">      <span class="keyword">unset</span>($events[$request-&gt;url_elements[<span class="number">2</span>]]);</span><br><span class="line">      <span class="keyword">$this</span>-&gt;writeEvents($events);</span><br><span class="line">      <span class="comment">//header('HTTP/1.1 204 No Content');</span></span><br><span class="line">      <span class="comment">//header('Location: /events');</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">readEvents</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $events = unserialize(file_get_contents(<span class="keyword">$this</span>-&gt;events_file));</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($events)) &#123;</span><br><span class="line">      <span class="comment">// invent some event data</span></span><br><span class="line">      $events[] = <span class="keyword">array</span>(<span class="string">'title'</span> =&gt; <span class="string">'Summer Concert'</span>,</span><br><span class="line">        <span class="string">'date'</span> =&gt; date(<span class="string">'U'</span>, mktime(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">2012</span>)),</span><br><span class="line">        <span class="string">'capacity'</span> =&gt; <span class="string">'150'</span>);</span><br><span class="line">      $events[] = <span class="keyword">array</span>(<span class="string">'title'</span> =&gt; <span class="string">'Valentine Dinner'</span>,</span><br><span class="line">        <span class="string">'date'</span> =&gt; date(<span class="string">'U'</span>, mktime(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">14</span>,<span class="number">2012</span>)),</span><br><span class="line">        <span class="string">'capacity'</span> =&gt; <span class="string">'48'</span>);</span><br><span class="line">      <span class="keyword">$this</span>-&gt;writeEvents($events);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $events;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">writeEvents</span><span class="params">($events)</span> </span>&#123;</span><br><span class="line">    file_put_contents(<span class="keyword">$this</span>-&gt;events_file, serialize($events)); </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">event</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> $parameters=<span class="keyword">array</span>();</span><br><span class="line">	<span class="keyword">public</span> $url_elements=<span class="keyword">array</span>();</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($title,$date,$capacity,$id)</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;parameters[<span class="string">'title'</span>]=$title;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;parameters[<span class="string">'date'</span>]=$date;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;parameters[<span class="string">'capacity'</span>]=$capacity;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;url_elements[<span class="number">2</span>]=$id;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$callback = <span class="keyword">isset</span>($_GET[<span class="string">'callback'</span>]) ? trim($_GET[<span class="string">'callback'</span>]) : <span class="string">''</span>; </span><br><span class="line">$a=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'event_number'</span>]))&#123;</span><br><span class="line">	$id=$_GET[<span class="string">'event_number'</span>];</span><br><span class="line">	$request=<span class="keyword">new</span> event(<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="string">'0'</span>,$id);</span><br><span class="line">	$Eventreturn=<span class="keyword">new</span> EventsController();</span><br><span class="line">	$tmp=$Eventreturn-&gt;GETAction($request);</span><br><span class="line">	<span class="comment">//print_r($tmp);</span></span><br><span class="line">	$Eventmsg= json_encode($tmp);</span><br><span class="line">	<span class="keyword">echo</span> $callback . <span class="string">'('</span> .$Eventmsg .<span class="string">')'</span>;</span><br><span class="line">	<span class="comment">//echo $callback . '(' . $Eventmsg .')';  //返回格式，必需</span></span><br><span class="line">	<span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($a==<span class="number">1</span>)&#123;</span><br><span class="line">	$date=date(<span class="string">'U'</span>,time());</span><br><span class="line">	$request=<span class="keyword">new</span> event(<span class="string">'fruit'</span>,$date,<span class="string">'333'</span>,<span class="number">31</span>);</span><br><span class="line">	$Eventreturn=<span class="keyword">new</span> EventsController();</span><br><span class="line">	$Eventreturn-&gt;PUTAction($request);</span><br><span class="line">	print_r($Eventreturn-&gt;GETAction($request));</span><br><span class="line">&#125;</span><br><span class="line">	<span class="comment">//$Eventreturn-&gt;POSTAction($request);</span></span><br><span class="line">	<span class="comment">//$Eventreturn-&gt;PUTAction($request);</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[PHP高效编程 — 数据库]]></title>
      <url>http://zak7.com/2016/07/26/php-master2/</url>
      <content type="html"><![CDATA[<div style="padding:150px 20px 0px 0px;background-image:url(http://115.28.217.112/github/php/master2.gif); background-position:20% 40%;background-repeat:no-repeat;min-height:100px; max-width:550px;text-align:center; margin:0 auto;"><div class="demo" style="background-color: rgba(0,0,0,0.5);min-width:150px;margin:30px 0 0 40%"><p style="color:#ffffff;">PHP高效编程<br>有关数据库的知识。</p></div></div>

<a id="more"></a><!-- 空一行，上下间距更小 -->
<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=3930626&auto=0&height=66"></iframe></p>
<h2 id="PHP数据库对象"><a href="#PHP数据库对象" class="headerlink" title="PHP数据库对象"></a>PHP数据库对象</h2><p><strong>当前数据库表结构</strong></p>
<table>
<thead>
<tr>
<th>categories</th>
<th>recipes</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>id : </strong>int(11)<br><strong>name : </strong>varchar(255)</td>
<td><strong>id : </strong>int(11)<br><strong>name : </strong>varchar(400)<br> <strong>description : </strong>text <br><strong>category_id : </strong>int(11)<br><strong>chef : </strong>varchar(255)<br><strong>created : </strong>datetime</td>
</tr>
</tbody>
</table>
<blockquote>
<p>如果之前你使用过PHP和MySQL，你可能用过mysql或mysqli类库连接到数据库，如使用mysql_connect()函数。多年来，这是连接到MySQL数据库的标准方式，这种方法的缺点是：每个的扩展都与其它稍有不同，因此使得代码在数据库平台之间的转移变得复杂。<strong>本章将专注讲解更加先进的PDO扩展。</strong></p>
</blockquote>
<h3 id="使用PDO连接到数据库"><a href="#使用PDO连接到数据库" class="headerlink" title="使用PDO连接到数据库"></a>使用PDO连接到数据库</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">$db_conn = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=localhost;dbname=recipes'</span>,<span class="string">'root'</span>,<span class="string">''</span>);</span><br><span class="line"><span class="comment">//后两项是数据库用户名和密码，请根据自身情况更改</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (PDOException $e) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"cannot connected to database."</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>需要使用PDO连接数据库，需要实例化一个新的PDO对象并传递一个DSN（Data Source Name）。如果PHP可以连接到数据库，将会有一个新的PDO对象保存在$db_conn对象中，如果PDO对象创建失败，将抛出一个PDOException异常。</p>
<h3 id="从表中选择数据"><a href="#从表中选择数据" class="headerlink" title="从表中选择数据"></a>从表中选择数据</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$db_conn = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=localhost;dbname=recipes'</span>,<span class="string">'root'</span>,<span class="string">''</span>);</span><br><span class="line"><span class="comment">//perform query</span></span><br><span class="line">$stmt = $db_conn-&gt;query(<span class="string">'SELECT name,chef FROM recipes'</span>);</span><br><span class="line"><span class="comment">//display result</span></span><br><span class="line"><span class="keyword">while</span>($row = $stmt-&gt;fetch())&#123;</span><br><span class="line">	<span class="keyword">echo</span> $row[<span class="string">'name'</span>].<span class="string">' by '</span>.$row[<span class="string">'chef'</span>].<span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="数据提取模式"><a href="#数据提取模式" class="headerlink" title="数据提取模式"></a>数据提取模式</h3><p>创建了PDO对象后，就可以检索数据了。当用PDO选择数据时，要创建一个PDOStatement对象。基本的查询可以使用<code>PDO::query()</code>。下例利用了<code>PDOStatement::fetch()</code>方法。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">$db_conn = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=localhost;dbname=recipes'</span>,<span class="string">'root'</span>,<span class="string">''</span>);</span><br><span class="line"><span class="comment">//后两项是数据库用户名和密码，请根据自身情况更改</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (PDOException $e) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"cannot connected to database."</span>;</span><br><span class="line">&#125;</span><br><span class="line">$stmt=$db_conn-&gt;query(<span class="string">'select name,chef from recipes'</span>);</span><br><span class="line">$result=$stmt-&gt;fetch(PDO::FETCH_NUM);</span><br><span class="line">print_r($result);</span><br></pre></td></tr></table></figure></p>
<ul>
<li><strong>PDO::FETCH_ASSOC</strong> 使用列名为键返回数组</li>
<li><strong>PDO::FETCH_NUM</strong> 返回数组，这次为数字键</li>
<li><strong>PDO::FETCH_BOTH（默认）</strong> 每个值出现两次，一个使用其列名，一个使用数字索引</li>
<li><strong>PDO::FETCH_CLASS</strong> 返回一个已命名的类的对象。？？用的不多，测试不成功，读者如有使用测试可告知</li>
</ul>
<h3 id="参数和预处理语句"><a href="#参数和预处理语句" class="headerlink" title="参数和预处理语句"></a>参数和预处理语句</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$db_conn = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=localhost;dbname=recipes'</span>,<span class="string">'root'</span>,<span class="string">''</span>);</span><br><span class="line">$sql = <span class="string">'SELECT name, description, chef FROM recipes WHERE id=:recipe_id'</span>;</span><br><span class="line">$stmt = $db_conn-&gt;prepare($sql);</span><br><span class="line"><span class="comment">//perform query</span></span><br><span class="line">$stmt-&gt;execute(<span class="keyword">array</span>(<span class="string">"recipe_id"</span>=&gt;<span class="number">1</span>));</span><br><span class="line">$recipe = $stmt-&gt;fetch();</span><br></pre></td></tr></table></figure>
<p>在<code>:recipe_id</code>前面的冒号表示这是一个占位符，在实际的运行中会用真正的值进行替换。注意，execute中的占位符可以写<code>：</code>也可以省略。<br>也可以用？符号为变量保留一个位置作为没有命名的占位符。如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">'SELECT name,description,chef FROM recipes WHERE chef=?</span><br><span class="line"> AND category_id =?'</span>;</span><br><span class="line">$stmt = $db_conn-&gt;prepare($sql);</span><br><span class="line">$stmt-&gt;execute(<span class="keyword">array</span>(<span class="string">"Lorna"</span>,<span class="number">3</span>));</span><br><span class="line">$recipe=$stmt-&gt;fetch(PDO::FETCH_NUM);</span><br></pre></td></tr></table></figure></p>
<p>当使用数据库时，必须溢出已经发送到数据库的值（删除不需要的字符）。例如<code>mysql_escape_string()</code>这样的MySQL功能。当使用预处理语句时，为占位符传入的值已经溢出，因为MySQL知道这些都是可能溢出的值。</p>
<h3 id="绑定值和预处理语句的变量"><a href="#绑定值和预处理语句的变量" class="headerlink" title="绑定值和预处理语句的变量"></a>绑定值和预处理语句的变量</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$db_conn = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=localhost;dbname=recipes'</span>,<span class="string">'root'</span>,<span class="string">''</span>);</span><br><span class="line">$sql = <span class="string">'SELECT name,description </span><br><span class="line">		FROM recipes </span><br><span class="line">		WHERE chef=:chef AND category_id = :category_id'</span>;</span><br><span class="line">$stmt=$db_conn-&gt;prepare($sql);</span><br><span class="line">$stmt-&gt;bindValue(<span class="string">':chef'</span>,<span class="string">'lorna'</span>);</span><br><span class="line"><span class="comment">//starters</span></span><br><span class="line">$stmt-&gt;bindValue(<span class="string">':category_id'</span>,<span class="string">'1'</span>);</span><br><span class="line">$stmt-&gt;execute();</span><br><span class="line">$starter =$stmt-&gt;fetch();</span><br><span class="line"><span class="comment">//pudding</span></span><br><span class="line">$stmt-&gt;bindValue(<span class="string">':category_id'</span>,<span class="string">'3'</span>);</span><br><span class="line">$stmt-&gt;execute();</span><br><span class="line">$pudding=$stmt-&gt;fetch();</span><br></pre></td></tr></table></figure>
<p>我们还可以将参数与变量绑定，利用<code>PDOStatement::bindParam()</code>，如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$db_conn =<span class="keyword">new</span> PDO(...);</span><br><span class="line">$sql=<span class="string">'SELECT ... WHERE recipes.chef=:chef AND </span><br><span class="line">categories.name = :category_name'</span>;</span><br><span class="line">$stmt=$db_conn-&gt;prepare($sql);</span><br><span class="line">$stmt-&gt;bindValue(<span class="string">':chef'</span>,<span class="string">'lorna'</span>);</span><br><span class="line">$stmt-&gt;bindParam(<span class="string">':category_name'</span>,$category);</span><br><span class="line"></span><br><span class="line">$category=<span class="string">'starter'</span>;</span><br><span class="line">$stmt-&gt;execute();</span><br><span class="line">$starters = $stmt-&gt;fetchALL();</span><br><span class="line"><span class="comment">//fetchALL()一次检索所有行</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><strong>预处理语句是极为有用的。这种方式不仅能够提高代码的性能，而且可以毫无疑问地溢出占位符</strong></p>
</blockquote>
<h3 id="插入一行并获取ID"><a href="#插入一行并获取ID" class="headerlink" title="插入一行并获取ID"></a>插入一行并获取ID</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$db_conn =<span class="keyword">new</span> PDO(...);</span><br><span class="line">$sql = <span class="string">'INSERT INTO recipes (name,description,chef,created)</span><br><span class="line"> VALUES (:name,:description,:chef,NOW())'</span>;</span><br><span class="line">$stmt=$db_conn-&gt;prepare($sql);</span><br><span class="line">$stmt-&gt;execute(<span class="keyword">array</span>(</span><br><span class="line"><span class="string">':chef'</span>=&gt;<span class="string">'w ris'</span>,</span><br><span class="line"><span class="string">':description'</span>=&gt;<span class="string">'balalabala'</span>,</span><br><span class="line"><span class="string">':chef'</span>=&gt;<span class="string">'lorna'</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"New insert id: "</span>.$db_conn-&gt;lastInsertId();</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p><strong>注意<code>lastInsertId()</code>是PDO对象而不是PDOStatement对象。</strong></p>
<h3 id="有多少行被插入、更新或删除"><a href="#有多少行被插入、更新或删除" class="headerlink" title="有多少行被插入、更新或删除"></a>有多少行被插入、更新或删除</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$db_conn =<span class="keyword">new</span> PDO(...);</span><br><span class="line">$sql=<span class="string">'UPDATE recipes SET category_id=:id WHERE category_id is NULL'</span>;</span><br><span class="line">$stmt=$db_conn-&gt;prepare($sql);</span><br><span class="line">$stmt-&gt;execute(<span class="keyword">array</span>(<span class="string">':id'</span>=&gt;<span class="number">2</span>));</span><br><span class="line"><span class="keyword">echo</span> $stmt-&gt;rowCount().<span class="string">'rows updated'</span>;</span><br></pre></td></tr></table></figure>
<p><strong>注意<code>rowCount()</code>是PDOStatement对象的一个方法。可检查插入、更新或删除了多少行。</strong></p>
<h2 id="处理PDO中的错误"><a href="#处理PDO中的错误" class="headerlink" title="处理PDO中的错误"></a>处理PDO中的错误</h2><ol>
<li><p>处理预处理时的问题<br>当我们调用PDO::prepare()方法时，这个函数会返回一个PDOStatement对象。如果预处理失败，该函数会返回<code>false</code>或抛出一个PDOStatement对象。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$db_conn=<span class="keyword">new</span> PDO();</span><br><span class="line">$sql = <span class="string">'SELECT name ... WHERE id=:recipe_id'</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">	$stmt=$db_conn-&gt;prepare($sql);</span><br><span class="line">	<span class="keyword">if</span>($stmt)&#123;</span><br><span class="line">		$stmt-&gt;execute(<span class="keyword">array</span>(<span class="string">'recipe_id'</span>=&gt;<span class="number">1</span>));</span><br><span class="line">		$recipe = $stmt-&gt;fetch();</span><br><span class="line">	&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (PDOException $e)&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"A database problem occurred: "</span>.$e-&gt;getMessage();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>处理执行时的问题</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$db_conn=<span class="keyword">new</span> PDO();</span><br><span class="line">$sql = <span class="string">'SELECT name ... WHERE id=:recipe_id'</span>;</span><br><span class="line">$stmt=$db_conn-&gt;prepare($sql);</span><br><span class="line"><span class="keyword">if</span>($stmt)&#123;</span><br><span class="line">	$result=$stmt-&gt;execute(<span class="keyword">array</span>(<span class="string">'recipe_id'</span>=&gt;<span class="number">1</span>));</span><br><span class="line">	<span class="keyword">if</span>($result)&#123;</span><br><span class="line">		$recipe = $stmt-&gt;fetch();</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		$error = $stmt-&gt;errorInfo();</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"Query failed: "</span>.$;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="高级PDO特征"><a href="#高级PDO特征" class="headerlink" title="高级PDO特征"></a>高级PDO特征</h2><p>在数据库术语中<strong>事务（transaction）</strong>是一组必须执行的语句的集合。这组语句要么必须全部顺利完成，要么一个也不运行。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">	$db_conn=<span class="keyword">new</span> PDO(<span class="string">'mysql:host=localhost;dbname=recipes'</span>,<span class="string">'root'</span>,<span class="string">''</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (PDOException $e)&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"could not connect to database"</span>;</span><br><span class="line">	<span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">	<span class="comment">//start the transaction</span></span><br><span class="line">	$db_conn-&gt;beginTransaction();</span><br><span class="line">	$db_conn-&gt;exec(<span class="string">'UPDATE ...'</span>);</span><br><span class="line">	$db_conn-&gt;exec(<span class="string">'UPDATE ...'</span>);</span><br><span class="line">	$db_conn-&gt;commit();</span><br><span class="line">&#125; <span class="keyword">catch</span> (PDOException $e) &#123;</span><br><span class="line">	$db_conn-&gt;rollBack();</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"something wrong: "</span>.$e-&gt;getMessage();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><code>exec()</code>的返回值若不是<strong>受影响的行数</strong>，就是查询失败时的false。</p>
</blockquote>
<h2 id="设计数据库"><a href="#设计数据库" class="headerlink" title="设计数据库"></a>设计数据库</h2><h3 id="MySQL解析"><a href="#MySQL解析" class="headerlink" title="MySQL解析"></a>MySQL解析</h3><p>请读者自行运行分析，这里就不贴代码结果了。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$db_conn = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=localhost;dbname=recipes'</span>,<span class="string">'root'</span>,<span class="string">''</span>);</span><br><span class="line">$sql = <span class="string">'EXPLAIN SELECT name,description,created </span><br><span class="line">		FROM recipes </span><br><span class="line">		WHERE name="Chicken Casserole";</span><br><span class="line">$r=$db_conn-&gt;query($sql);</span><br><span class="line">print_r($r-&gt;fetch(PDO::FETCH_ASSOC));</span></span><br></pre></td></tr></table></figure></p>
<p>分析上例结果，表明我们的查询不得不搜索所有的5行，以便找到正确的一行。可已添加一个索引来提高性能。<br>    ALERT TABLE recipes ADD INDEX idx_name(name);<br>新运行的EXPLAIN结果，表明我们正在使用<strong>新索引</strong>，而且只需要搜索一行便可以找到所要找的那一行。</p>
<h3 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h3><pre><code>ALTER TABLE 表名 ADD FOREIGN KEY (字段名) REFERENCES 表名(字段名)
</code></pre><blockquote>
<p>请注意并非所有的数据库都支持外键。MySQL支持外键，但只支持<code>InnoDB</code>表类型。使用MyISAM表类型，你可以创建一个外键，但是它会被忽略。</p>
</blockquote>
<h3 id="处理多对多关系"><a href="#处理多对多关系" class="headerlink" title="处理多对多关系"></a>处理多对多关系</h3><p>完善先前的数据库表：我们再添加一个表用于保存每个食谱所需的配料。配料表与食谱表显然是多对多的关系，因此我们需要额外创建一个有链接的表（用于链接到配料表和食谱表）。如下：<br><img src="http://115.28.217.112/github/php/phpmaster2.JPG" class="full-image" alt="alt" title="数据库框架图"></p>
<h3 id="内部连接"><a href="#内部连接" class="headerlink" title="内部连接"></a>内部连接</h3><p>要加入一个连接表，需要从recipes表开始，加入一个链接到recipe_ingredients表，然后将它们和ingredients表连接。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT recipes.name,ingredients.item</span><br><span class="line">FROM recipes</span><br><span class="line">INNER JOIN recipe_ingredients</span><br><span class="line"> ON recipes.id=recipe_ingredients.recipe_id</span><br><span class="line">INNER JOIN ingredients</span><br><span class="line"> ON recipe_ingredients.ingredient_id=ingredients.id;</span><br></pre></td></tr></table></figure></p>
<p>这是一个<strong>内部连接</strong>的例子，这表明在这个查询中我们只能看到所有表中有匹配行的数据。</p>
<h3 id="外部连接"><a href="#外部连接" class="headerlink" title="外部连接"></a>外部连接</h3><p><strong>外部连接</strong>使我们能从一个表中检索所有行，还有其它表中与之匹配的行。如果没有匹配的数据，MySQL将对这些列返回NULL值。<br>举个栗子。我们要显示所有的食谱，而不仅仅是带有配料的食谱。<br>由于<code>recipes</code>表首先出现，因此我们将使用<code>LEFT JOIN</code>来表明需要显示左表中的所有行。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT recipes.name,ingredients.item</span><br><span class="line">FROM recipes</span><br><span class="line">LEFT JOIN recipe_ingredients</span><br><span class="line"> ON recipes.id=recipe_ingredients.recipe_id</span><br><span class="line">LEFT JOIN ingredients</span><br><span class="line"> ON recipe_ingredients.ingredient_id=ingredients.id;</span><br></pre></td></tr></table></figure></p>
<h3 id="聚合函数和Group-By"><a href="#聚合函数和Group-By" class="headerlink" title="聚合函数和Group By"></a>聚合函数和Group By</h3><ul>
<li>对记录计数（COUNT）</li>
<li>得到最大或最小的一个特定列的值（MAX或MIN）</li>
<li>计算某一列的总和（SUM）</li>
<li>计算某一列的平均值（AVG）</li>
<li>GROUP BY算法，对一个数据集中成群的行计数。</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT recipes.name,COUNT(ingredients.id)</span><br><span class="line">FROM recipes</span><br><span class="line">LEFT JOIN recipe_ingredients</span><br><span class="line"> ON recipes.id=recipe_ingredients.recipe_id</span><br><span class="line">LEFT JOIN ingredients</span><br><span class="line"> ON recipe_ingredients.ingredient_id=ingredients.id</span><br><span class="line">GROUP BY recipes.id;</span><br></pre></td></tr></table></figure>
<h3 id="规格化数据"><a href="#规格化数据" class="headerlink" title="规格化数据"></a>规格化数据</h3><ul>
<li>按实体来拆分它们，并将拆分后的部分各自组成自己的表</li>
<li>避免在一个列中有相同的值</li>
<li>在一个地方记录数据，并将其与其他数据连接</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[PHP高效编程 — 面向对象]]></title>
      <url>http://zak7.com/2016/07/23/php-master/</url>
      <content type="html"><![CDATA[<p style="background-color:#b0f4f3;padding:15px">本教程将以《PHP Master：Write Cutting-Edge Code》一书为基础，整理有关PHP高效编程的知识。本文整理了PHP面向对象编程的相关知识。<br></p>

<a id="more"></a><!-- 空一行，上下间距更小 -->
<h2 id="PHP面向对象编程（OOP）"><a href="#PHP面向对象编程（OOP）" class="headerlink" title="PHP面向对象编程（OOP）"></a>PHP面向对象编程（OOP）</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># courier.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Courier</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> $name;</span><br><span class="line">	<span class="keyword">public</span> $home_country;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name)</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;name =$name;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ship</span><span class="params">($parcel)</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getCourierByCountry</span><span class="params">($country)</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> $courier_list;	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//自动加载方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__autoload</span><span class="params">($classname)</span></span>&#123;</span><br><span class="line">	<span class="keyword">include</span> strtolower($classname).<span class="string">'.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//require 'courier.php';</span></span><br><span class="line">$mono = <span class="keyword">new</span> Courier(<span class="string">'ty ze'</span>);</span><br><span class="line">var_dump($mono);</span><br><span class="line"><span class="comment">//调用静态方法</span></span><br><span class="line">$spanish_courier = Courier::getCourierByCountry(<span class="string">'Spain'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="PHP命名空间"><a href="#PHP命名空间" class="headerlink" title="PHP命名空间"></a>PHP命名空间</h2><p><strong>命名空间一个最明确的目的就是解决重名问题。</strong><br>PHP的命名空间(namespace)是PHP 5.3中加入最重要的一个新特性，故想测试学习，请先将PHP升级到5.3以上版本。<br>参考链接：</p>
<blockquote>
<p><a href="http://www.jb51.net/article/36389.htm" target="_blank" rel="external">PHP命名空间(Namespace)的使用详解</a><br><a href="http://www.jb51.net/article/53853.htm" target="_blank" rel="external">PHP命名空间(namespace)的使用基础及示例</a></p>
</blockquote>
<h3 id="空间名称术语"><a href="#空间名称术语" class="headerlink" title="空间名称术语"></a>空间名称术语</h3><ol>
<li><p><strong>非限定名称</strong>，或不包含前缀的类名称，例如 $comment = new Comment();。如果当前命名空间是Blog\Article，Comment将被解析为Blog\Article\Comment。如果使用Comment的代码不包含在任何命名空间中的代码（全局空间中），则Comment会被解析为Comment。</p>
</li>
<li><p><strong>限定名称</strong>，或包含前缀的名称，例如 $comment = new Article\Comment();。如果当前的命名空间是Blog，则Comment会被解析为Blog\Article\Comment。如果使用Comment的代码不包含在任何命名空间中的代码（全局空间中），则Comment会被解析为Comment。</p>
</li>
<li><p><strong>完全限定名称</strong>，或包含了全局前缀操作符的名称，例如 $comment = new \Article\Comment();。在这种情况下，Comment总是被解析为代码中的文字名(literal name)Article\Comment。</p>
</li>
</ol>
<h3 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h3><p>代码集成了几个命名空间的常见用法，阅读若有困难，请读者根据<a href="#PHP命名空间">参考链接</a>中的教程学习。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace Article&#123; //要么使用&#123;&#125;要么使用;不能混合使用。</span><br><span class="line">const PATH = '/article';</span><br><span class="line">function getCommentTotal() &#123;</span><br><span class="line">    return 100;</span><br><span class="line">&#125;</span><br><span class="line">class Comment &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">namespace MessageBoard\share&#123;</span><br><span class="line">const PATH = 'MessageBoard\share';</span><br><span class="line">function getCommentTotal() &#123;</span><br><span class="line">    return 200;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">namespace MessageBoard&#123;</span><br><span class="line">const PATH = '/message_board';</span><br><span class="line">function getCommentTotal() &#123;</span><br><span class="line">    return 300;</span><br><span class="line">&#125;</span><br><span class="line">class Comment &#123; &#125;</span><br><span class="line">//调用当前空间的常量、函数和类</span><br><span class="line">echo PATH.'&lt;br/&gt;'; ///message_board</span><br><span class="line">echo getCommentTotal().'&lt;br/&gt;'; //300</span><br><span class="line">$comment = new Comment();//调用\MessageBoard空间的类</span><br><span class="line"></span><br><span class="line">//调用Article空间的常量、函数和类</span><br><span class="line">echo \Article\PATH.'&lt;br/&gt;'; ///article</span><br><span class="line">echo \Article\getCommentTotal().'&lt;br/&gt;'; //100</span><br><span class="line">$article_comment = new \Article\Comment();//调用\Article空间的类</span><br><span class="line">var_dump($article_comment);</span><br><span class="line"></span><br><span class="line">echo share\PATH.'&lt;br/&gt;';//MessageBoard\share</span><br><span class="line">&#125;</span><br><span class="line">//导入一个命名空间</span><br><span class="line">namespace BBS&#123;</span><br><span class="line">use MessageBoard\share;//导入命名空间后可使用限定名称调用元素</span><br><span class="line">echo share\PATH.'&lt;br/&gt;';//MessageBoard\share</span><br><span class="line">use MessageBoard\share as Sha;//使用别名代替空间名</span><br><span class="line">echo Sha\PATH.'&lt;br/&gt;';//MessageBoard\share</span><br><span class="line">use MessageBoard\Comment;//导入类后可使用非限定名称调用元素,类也可以使用别名</span><br><span class="line">$article_comment = new Comment();</span><br><span class="line">var_dump($article_comment);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="魔法常量NAMESPACE"><a href="#魔法常量NAMESPACE" class="headerlink" title="魔法常量NAMESPACE"></a>魔法常量<strong>NAMESPACE</strong></h3><blockquote>
<p>PHP提供了namespace关键字和<strong>NAMESPACE</strong>魔法常量动态的访问元素</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Blog</span>\<span class="title">Article</span>;</span><br><span class="line"><span class="keyword">const</span> PATH = <span class="string">'/Blog/article'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Comment</span> </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//namespace关键字表示当前空间</span></span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">namespace</span>\<span class="title">PATH</span>; <span class="comment">///Blog/article</span></span><br><span class="line">$comment = <span class="keyword">new</span> <span class="keyword">namespace</span>\<span class="title">Comment</span>();</span><br><span class="line"><span class="comment">//魔法常量__NAMESPACE__的值是当前空间名称</span></span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">__NAMESPACE__</span>; <span class="comment">//Blog\Article</span></span><br><span class="line"><span class="comment">//可以组合成字符串并调用</span></span><br><span class="line">$comment_class_name = <span class="keyword">__NAMESPACE__</span> . <span class="string">'\Comment'</span>;</span><br><span class="line">$comment = <span class="keyword">new</span> $comment_class_name();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="空间字符串形式调用"><a href="#空间字符串形式调用" class="headerlink" title="空间字符串形式调用"></a>空间字符串形式调用</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Blog</span>;</span><br><span class="line"><span class="comment">//导入Common类</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">Blog</span>\<span class="title">Article</span>\<span class="title">Common</span>;</span><br><span class="line">$common_class_name = <span class="string">'Blog\Article\Common'</span>;</span><br><span class="line">$common = <span class="keyword">new</span> $common_class_name();<span class="comment">//正确</span></span><br><span class="line">var_dump($common);</span><br><span class="line"><span class="comment">//我想使用非限定名称调用Blog\Article\Common</span></span><br><span class="line">$common_class_name = <span class="string">'Common'</span>;</span><br><span class="line"><span class="comment">//实际会被当作非限定名称，也就表示当前空间的Common类，但我当前类没有创建Common类</span></span><br><span class="line">$common = <span class="keyword">new</span> $common_class_name(); <span class="comment">//发生致命错误：Common类不存在</span></span><br><span class="line"><span class="comment">//我想使用限定名称调用Blog\Article\Common</span></span><br><span class="line">$common_class_name = <span class="string">'Article\Common'</span>;</span><br><span class="line"><span class="comment">//实际会被当作完全限定名称，也就表示Article空间下的Common类，但我下面只定义了Blog\Article空间而不是Article空间</span></span><br><span class="line">$common = <span class="keyword">new</span> $common_class_name(); <span class="comment">//发生致命错误：Article\Common类不存在</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Blog</span>\<span class="title">Article</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Common</span> </span>&#123; &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="对象的继承"><a href="#对象的继承" class="headerlink" title="对象的继承"></a>对象的继承</h2><p>extends关键词。略。</p>
<h2 id="对象和函数"><a href="#对象和函数" class="headerlink" title="对象和函数"></a>对象和函数</h2><blockquote>
<p>例子：为&nbsp;<span style="color:#ffffff; background-color:#3366ff">&nbsp;Courier&nbsp;</span>&nbsp;创建子类，分别为&nbsp;<span style="color:#ffffff; background-color:#3366ff">&nbsp;MonotypeDelivery&nbsp;</span>&nbsp;和&nbsp;<span style="color:#ffffff; background-color:#3366ff">&nbsp;PigeonPost&nbsp;</span>&nbsp;</p>
</blockquote>
<h3 id="多态性"><a href="#多态性" class="headerlink" title="多态性"></a>多态性</h3><p>我们可以将父类对象作为子类、孙子类的类型提示。这种同时识别多个对象的能力称为多态性（polymorphism）。<br><strong>instanceOf操作符检查对象的类型。</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">* 输出结果： </span><br><span class="line">* Local Avian Delivery Ltd is a Courier</span><br><span class="line">* Local Avian Delivery Ltd is a PigeonPost</span><br><span class="line">*/</span></span><br><span class="line">$courier = <span class="keyword">new</span> PigeonPost(<span class="string">'Local Avian Delivery Ltd'</span>);</span><br><span class="line"><span class="keyword">if</span>($courier <span class="keyword">instanceOf</span> Courier)&#123;</span><br><span class="line">	<span class="keyword">echo</span> $courier-&gt;name.<span class="string">"is a Courier"</span>;	</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($courier <span class="keyword">instanceOf</span> PigeonPost)&#123;</span><br><span class="line">	<span class="keyword">echo</span> $courier-&gt;name.<span class="string">"is a PigeonPost"</span>;	</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($courier <span class="keyword">instanceOf</span> MonotypeDelivery)&#123;</span><br><span class="line">	<span class="keyword">echo</span> $courier-&gt;name.<span class="string">"is a MonotypeDelivery"</span>;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="对象和引用"><a href="#对象和引用" class="headerlink" title="对象和引用"></a>对象和引用</h3><p>对象和简单变量的表现大相径庭。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出：Parcels needs to ship to Brazil and Brazil</span></span><br><span class="line">$box1 = <span class="keyword">new</span> Parcel();</span><br><span class="line">$box1-&gt;destinationCountry = <span class="string">'Denmark'</span>;</span><br><span class="line"></span><br><span class="line">$box2 = <span class="keyword">new</span> Parcel();</span><br><span class="line">$box1-&gt;desyinationCountry = <span class="string">'Brazil'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Parcels needs to ship to:'</span></span><br><span class="line">	.$box1-&gt;destinationCountry.<span class="string">' and '</span></span><br><span class="line">	.$box2-&gt;destinationCountry;</span><br></pre></td></tr></table></figure></p>
<p>由上，当$box1赋值给$box2时，并没有复制$box1的内容。相反，PHP将$box2指向了同一个对象。可称之为<strong>引用（reference）</strong>。<br><code>==</code>操作符,判断是否具有相同的类和属性。<br><code>if($box1 == $box2) echo &#39;equivalent&#39;;</code><br><code>===</code>操作符,进一步区分是否引用同一个原始对象。<br><code>if($box1 === $box2) echo &#39;exact same object&#39;;</code><br>这对我们判断某个对象是否链接到另一个对象有很大的帮助。</p>
<h3 id="作为函数参数传递的对象"><a href="#作为函数参数传递的对象" class="headerlink" title="作为函数参数传递的对象"></a>作为函数参数传递的对象</h3><p>对象总是通过<strong>引用传递</strong>。对象会提供一个指向自己的引用，而不是复制自己一个副本。这意味着如果一个函数对传入的对象进行操作时，没有必要从函数返回。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$courier = <span class="keyword">new</span> PigeonPost(<span class="string">'Avian Delivery Ltd'</span>);</span><br><span class="line"></span><br><span class="line">$other_courier = $courier;</span><br><span class="line">$other_courier-&gt;name = <span class="string">'Pigeon Post'</span>;</span><br><span class="line"><span class="keyword">echo</span> $courier-&gt;name; <span class="comment">//输出：Pigeon Post</span></span><br></pre></td></tr></table></figure></p>
<p>如果需要为一个已存在的对象复制一个单独的副本，可以使用clone关键词。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$courier = <span class="keyword">new</span> PigeonPost(<span class="string">'Avian Delivery Ltd'</span>);</span><br><span class="line"></span><br><span class="line">$other_courier = <span class="keyword">clone</span> $courier;</span><br><span class="line">$other_courier-&gt;name = <span class="string">'Pigeon Post'</span>;</span><br><span class="line"><span class="keyword">echo</span> $courier-&gt;name; <span class="comment">//输出：Avian Delivery Ltd</span></span><br></pre></td></tr></table></figure></p>
<h3 id="流畅的接口"><a href="#流畅的接口" class="headerlink" title="流畅的接口"></a>流畅的接口</h3><p>如果从一个方法中返回$this，可以在应用程序内建立一个<strong>流畅的接口（fluent interface）</strong>，可让你将方法链接在一起。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parcel</span></span>&#123;</span><br><span class="line">	<span class="keyword">protected</span> $weight;</span><br><span class="line">	<span class="keyword">protected</span> $destinationCountry;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setWeight</span><span class="params">($weight)</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;weight = $weight;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">$this</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setCountry</span><span class="params">($country)</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;destinationCountry = $country;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">$this</span>;			</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$myparcel =<span class="keyword">new</span> Parcel;</span><br><span class="line">$myparcel-&gt;setWeight(<span class="number">50</span>)-&gt;setCountry(<span class="string">'peru'</span>);</span><br></pre></td></tr></table></figure></p>
<h2 id="public-private和protected"><a href="#public-private和protected" class="headerlink" title="public,private和protected"></a>public,private和protected</h2><p>public和private略。</p>
<h3 id="protected"><a href="#protected" class="headerlink" title="protected"></a>protected</h3><p>例如：在Courier类中有一个私有的方法<code>getShippingRateCountry()</code>,由<code>calcullateShipping()</code>方法调用。在Courier类中这个方法工作正常，事实上，在Courier的子类中它也同样正常工作。<br>然而，如果子类需要以自己的方式重新实现<code>calculateShipping()</code>方法时，将无法使用<code>getShippingRateCountry()</code>方法。<br>使用<code>protected</code>意味着在该类的外部不能调用这种方法，但它的子类被看作“内部”。</p>
<h3 id="getter和setter控制可见性"><a href="#getter和setter控制可见性" class="headerlink" title="getter和setter控制可见性"></a>getter和setter控制可见性</h3><p>另一种管理可见性的方法，将所有属性都标记为<code>protected</code>,并且只允许getter和setter方法来访问它们。如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Courier</span></span>&#123;</span><br><span class="line">	<span class="keyword">protected</span> $name;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> $name;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">setName</span><span class="params">($value)</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;name = $value;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>可以连接这些方法到日志以查看更新了哪些信息，或添加一些访问逻辑。</p>
<h3 id="使用神奇的-95-95-get和-95-95-set方法"><a href="#使用神奇的-95-95-get和-95-95-set方法" class="headerlink" title="使用神奇的&#95;&#95;get和&#95;&#95;set方法"></a>使用神奇的&#95;&#95;get和&#95;&#95;set方法</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Courier</span></span>&#123;</span><br><span class="line">	<span class="keyword">protected</span> $data = <span class="keyword">array</span>();</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($property)</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">$this</span>-&gt;data[$property];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span><span class="params">($property,$value)</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;data[$property] = $value;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$courier = <span class="keyword">new</span> Courier();</span><br><span class="line">$courier-&gt;name = <span class="string">'Avian Carrier'</span>;</span><br><span class="line"><span class="keyword">echo</span> $courier-&gt;name;</span><br></pre></td></tr></table></figure>
<p><strong>利用神奇的&#95;&#95;get和&#95;&#95;set方法，来访问一个不存在的属性。</strong><br>从这个角度来说，我们无法看出$name属性不存在，但对象表现出它仿佛存在。神奇的<strong>get()和</strong>set()方法允许我们改变幕后发生的事情。在这里可以添加任何需要的逻辑，让不同名称的属性有不同的表现、检查值或者你想要的任何东西。</p>
<h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p><strong>接口</strong>是描述对象能力的一种方式。接口指定方法的名称以及参数。但不包含任何功能代码（不包含具体的实现）。使用接口展示了一个合约，表明实现这个接口的类能够做什么。</p>
<h3 id="SPL-Countable-接口示例"><a href="#SPL-Countable-接口示例" class="headerlink" title="SPL Countable 接口示例"></a>SPL Countable 接口示例</h3><p>例如：Countable实现单一的功能：count()方法。若要在代码中使用这个接口，代码如下。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Courier</span> <span class="keyword">implements</span> <span class="title">Countable</span></span>&#123;</span><br><span class="line">	<span class="keyword">protected</span> $count = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ship</span><span class="params">(Parcel $parcel)</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;count++;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">count</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">$this</span>-&gt;count;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$courier = <span class="keyword">new</span> Courier();</span><br><span class="line">$courier-&gt;ship(<span class="keyword">new</span> Parcel());</span><br><span class="line">$courier-&gt;ship(<span class="keyword">new</span> Parcel());</span><br><span class="line">$courier-&gt;ship(<span class="keyword">new</span> Parcel());</span><br><span class="line"><span class="keyword">echo</span> count($courier);<span class="comment">//输出：3</span></span><br></pre></td></tr></table></figure></p>
<h3 id="声明和使用接口"><a href="#声明和使用接口" class="headerlink" title="声明和使用接口"></a>声明和使用接口</h3><p>要声明一个接口，只需要使用<code>interface</code>关键字为借口命名。如果要在类中使用这个接口，只需要用<code>implements</code>关键字。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Trackable</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getTrackInfo</span><span class="params">($parcelID)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MonotypeDelivery</span> <span class="keyword">extends</span> <span class="title">Courier</span> <span class="keyword">implements</span> <span class="title">Trackable</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ship</span><span class="params">($parcel)</span></span>&#123;</span><br><span class="line">		$parcelID=<span class="number">42</span>;</span><br><span class="line">		<span class="keyword">return</span> $paecelID;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getTackInfo</span><span class="params">($parcelID)</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span>(<span class="keyword">array</span>(<span class="string">"status"</span>=&gt;<span class="string">"in transit"</span>));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="识别对象和接口"><a href="#识别对象和接口" class="headerlink" title="识别对象和接口"></a>识别对象和接口</h3><p><code>instanceOf</code>运算符识别对象和接口。<br>例子：<code>MonotypeDelivery</code>类从<code>Courier</code>类继承并实现<code>Trackable</code>接口。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">* 输出结果： </span><br><span class="line">* I'm a Courier</span><br><span class="line">* I'm a MonotypeDelivery</span><br><span class="line">* I'm a Trackable</span><br><span class="line">*/</span></span><br><span class="line">$courier = <span class="keyword">new</span> MonotypeDelivery();</span><br><span class="line"><span class="keyword">if</span>($courier <span class="keyword">instanceOf</span> Courier)&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"I'm a Courier"</span>;	</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($courier <span class="keyword">instanceOf</span> PigeonPost)&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"I'm a PigeonPost"</span>;	</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($courier <span class="keyword">instanceOf</span> MonotypeDelivery)&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"I'm a MonotypeDelivery"</span>;	</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($courier <span class="keyword">instanceOf</span> Trackable)&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"I'm a Trackable"</span>;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><p><strong>异常（exception）</strong>是一个处理错误的面向对象方法。异常也是对象，而且<code>Exception</code>是PHP的一个内置类。<br><span style="color:#ffffff; background-color:#3366ff">&nbsp;如果抛出了异常，就必须捕获它。&nbsp;</span></p>
<h3 id="处理异常"><a href="#处理异常" class="headerlink" title="处理异常"></a>处理异常</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">	$db = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=nonsense'</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"connected to database"</span>;</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"Oops!"</span>.$e-&gt;getMessage();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>其它语言有<code>try/catch/finally</code>结构；PHP没有附加的<code>finally</code>子句。</p>
</blockquote>
<h3 id="抛出异常"><a href="#抛出异常" class="headerlink" title="抛出异常"></a>抛出异常</h3><p>上节提到了由PHP内置函数抛出的异常，我们自己也可抛出异常。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//something has gone wrong</span></span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> Exeption(<span class="string">'Meaningful error message string'</span>);</span><br></pre></td></tr></table></figure></p>
<h3 id="捕捉特定类型的异常"><a href="#捕捉特定类型的异常" class="headerlink" title="捕捉特定类型的异常"></a>捕捉特定类型的异常</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HeavyParcelException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Courier</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ship</span><span class="params">(Parcel $parcel)</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="keyword">empty</span>($parcel-&gt;address))&#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'Address not Specified'</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>($parcel-&gt;weight &gt; <span class="number">5</span>)&#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'courier limit'</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$myCourier = <span class="keyword">new</span> Courier();</span><br><span class="line">$parcel = <span class="keyword">new</span> Parcel();</span><br><span class="line">$parcel-&gt;weight = rand(<span class="number">1</span>,<span class="number">7</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">	$myCourier-&gt;ship($parcel);</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"parcel shipped"</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (HeavyParcelException $e)&#123;</span><br><span class="line">	<span class="keyword">echo</span> $e-&gt;getMessage();</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e)&#123;</span><br><span class="line">	<span class="keyword">echo</span> $e-&gt;getMessage();</span><br><span class="line">	<span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="重新抛出异常"><a href="#重新抛出异常" class="headerlink" title="重新抛出异常"></a>重新抛出异常</h3><p>可以在一个 “<code>catch</code>“ 代码块中再次抛出异常。即，为了让用户更容易使用，您可以再次抛出带有对用户比较友好的消息的异常：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">customException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span><br><span class="line"> </span>&#123;</span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">errorMessage</span><span class="params">()</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">  <span class="comment">//error message</span></span><br><span class="line">  $errorMsg = <span class="keyword">$this</span>-&gt;getMessage().<span class="string">' is not a valid E-Mail address.'</span>;</span><br><span class="line">  <span class="keyword">return</span> $errorMsg;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">$email = <span class="string">"someone@example.com"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="comment">//check for "example" in mail address</span></span><br><span class="line">  <span class="keyword">if</span>(strpos($email, <span class="string">"example"</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line">   &#123;</span><br><span class="line">   <span class="comment">//throw exception if email is not valid</span></span><br><span class="line">   <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>($email);</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="comment">//re-throw exception</span></span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> customException($email);</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">catch</span> (customException $e)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="comment">//display custom message</span></span><br><span class="line"> <span class="keyword">echo</span> $e-&gt;errorMessage();</span><br><span class="line"> &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="顶级异常处理程序"><a href="#顶级异常处理程序" class="headerlink" title="顶级异常处理程序"></a>顶级异常处理程序</h3><p>顶级异常处理程序（Top Level Exception Handler）。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">set_exception_handler(<span class="string">"My_expection"</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">My_expection</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"这里是顶级异常处理器"</span>;</span><br><span class="line">	error_log(<span class="string">'Unhandled Exception: '</span>.$e-&gt;getMessage().<span class="string">' in file '</span>.$e-&gt;getfile.<span class="string">' on line '</span>.$e-&gt;getLine());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">nohello(<span class="string">"hello"</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)&#123;</span><br><span class="line"><span class="keyword">throw</span> $e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nohello</span><span class="params">($nohello)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>($nohello == <span class="string">"hello"</span>)&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"不能输入hello"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"输入成功"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>例子中，显示了一个异常处理函数<code>My_expection()</code>，然后它调用<code>set_exception_handler()</code>方法注册这个函数来处理未捕获的异常。<br>只有当程序中没有函数来处理异常才有顶级异常处理器来处理异常，如果没有定义顶级异常处理器，则由系统默认的异常处理器来处理异常。</p>
<h2 id="更多神奇方法"><a href="#更多神奇方法" class="headerlink" title="更多神奇方法"></a>更多神奇方法</h2><h3 id="95-95-call-方法"><a href="#95-95-call-方法" class="headerlink" title="&#95;&#95;call()方法"></a>&#95;&#95;call()方法</h3><p>使用<code>__get()</code>和<code>__set()</code>方法方法处理不是真实存在的属性，<code>__call()</code>方法可以调用一个没有在类中声明的方法。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Courier</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> $name;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name)</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;name=$name;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ship</span><span class="params">($parcel)</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name,$params)</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>($name==<span class="string">'sendParcel'</span>)&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">$this</span>-&gt;send($params[<span class="number">0</span>]);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			error_log(<span class="string">'Failed call to '</span>.$name.<span class="string">' in Courier class '</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>当使用<code>__call()</code>方法代替声明一个方法时，会让IDE自动生成方法名的功能失效。当检查一个类中是否存在一个函数时，该方法将无法显示，在调试时很难追踪错误所在。但就类中的“<strong>伪装</strong>”方法而论，你会有很多收获。</p>
</blockquote>
<h3 id="使用-95-95-toString-方法输出对象"><a href="#使用-95-95-toString-方法输出对象" class="headerlink" title="使用&#95;&#95;toString()方法输出对象"></a>使用&#95;&#95;toString()方法输出对象</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Courier</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> $name;</span><br><span class="line">	<span class="keyword">public</span> $home_country;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name,$home_country)</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;home_country = $home_country;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">$this</span>-&gt;name.<span class="string">'('</span>.<span class="keyword">$this</span>-&gt;home_country.<span class="string">')'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$mycourier = <span class="keyword">new</span> Courier(<span class="string">'A ser'</span>,<span class="string">'China'</span>);</span><br><span class="line"><span class="keyword">echo</span> $mycourier;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>当一个对象经常以同一种格式输出时，这是一个非常方便的技巧。</p>
</blockquote>
<h3 id="序列化对象"><a href="#序列化对象" class="headerlink" title="序列化对象"></a>序列化对象</h3><blockquote>
<p>在PHP中，<strong>序列化（serialize）</strong>数据就是将数据转换成一个基于文本的格式，以便存储。<br>对于数组和对象特别有用，因为数组和对象不能直接写入数据库的数据列中，在没有文本表述的情况下也不能在系统之间发送数据和对象。<br>可以序列化一个对象，也可以<strong>反序列化（unserialize）</strong></p>
</blockquote>
<p>示例如下（三个文件进行了合并）：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// classa.inc:</span></span><br><span class="line">  </span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">      <span class="keyword">public</span> $one = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">      <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_one</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;one;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// page1.php:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//include("classa.inc");</span></span><br><span class="line">  </span><br><span class="line">  $a = <span class="keyword">new</span> A;</span><br><span class="line">  $s = serialize($a);</span><br><span class="line">  <span class="comment">// 把变量$s保存起来以便文件page2.php能够读到</span></span><br><span class="line">  file_put_contents(<span class="string">'store'</span>, $s);</span><br><span class="line"></span><br><span class="line"><span class="comment">// page2.php:</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 要正确了解序列化，必须包含下面一个文件</span></span><br><span class="line">  <span class="comment">//include("classa.inc");</span></span><br><span class="line"></span><br><span class="line">  $s = file_get_contents(<span class="string">'store'</span>);</span><br><span class="line">  $a = unserialize($s);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 现在可以使用对象$a里面的函数 show_one()</span></span><br><span class="line">  $a-&gt;show_one();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><code>file_put_contents()</code> 函数把一个字符串写入文件中。<br>与依次调用 <code>fopen()</code>，<code>fwrite()</code> 以及 <code>fclose()</code> 功能一样。</p>
<p><code>file_put_contents(file,data,mode,context)</code><br>上述函数的参数mode：可选，FILE_USE_INCLUDE_PATH，FILE_APPEND，LOCK_EX（锁定文件）</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python网络编程(1)-start]]></title>
      <url>http://zak7.com/2016/07/19/python1/</url>
      <content type="html"><![CDATA[<p style="background-color:#f2f4b0;padding:15px">开始学习Python。我选取了《Python网络编程攻略》一书，没有理由，完全是随机选择。推荐同学自行寻找入门书籍，以一个小项目为目标，实践中见招拆招。<br></p>

<a id="more"></a><!-- 空一行，上下间距更小 -->
<h2 id="套接字、IPv4和简单的客户端-服务端编程"><a href="#套接字、IPv4和简单的客户端-服务端编程" class="headerlink" title="套接字、IPv4和简单的客户端/服务端编程"></a>套接字、IPv4和简单的客户端/服务端编程</h2><ol>
<li><p><strong>获取主机IP地址</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入核心网络库</span></span><br><span class="line"><span class="comment"># 调用两个工具函数gethostname()和gethostbyname(host_name)</span></span><br><span class="line">import socket</span><br><span class="line">def <span class="built_in">print</span>_machine_info():</span><br><span class="line">	host_name = socket.gethostname()</span><br><span class="line">	ip_address = socket.gethostbyname(host_name)</span><br><span class="line">	<span class="built_in">print</span> <span class="string">"Host name: %s"</span> %host_name</span><br><span class="line">	<span class="built_in">print</span> <span class="string">"IP address:%s"</span> %ip_address</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">	<span class="built_in">print</span>_machine_info()</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>获取远程主机IP地址</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import socket</span><br><span class="line">def <span class="built_in">print</span>_remote_machine_info():</span><br><span class="line">	remote_host = <span class="string">'www.pytgo1231231231.org'</span></span><br><span class="line">	try:</span><br><span class="line">		<span class="built_in">print</span> <span class="string">"IP address:%s"</span> %socket.gethostbyname(remote_host)</span><br><span class="line">	except socket.error, err_msg:</span><br><span class="line">		<span class="built_in">print</span> <span class="string">"%s: %s"</span> %(remote_host,err_msg)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">	<span class="built_in">print</span>_remote_machine_info()</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>IPv4地址格式转换</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 利用\换行不断句。</span></span><br><span class="line"><span class="comment"># 调用了binascii模块中的hexlify函数，以十六进制形式表示二进制数据</span></span><br><span class="line">import socket</span><br><span class="line">from binascii import hexlify</span><br><span class="line">def convert_ip4_address():</span><br><span class="line">	<span class="keyword">for</span> ip_addr <span class="keyword">in</span> [<span class="string">'127.0.0.1'</span>,<span class="string">'192.168.0.1'</span>]:</span><br><span class="line">		packet_ip_addr = socket.inet_aton(ip_addr)</span><br><span class="line">		unpacket_ip_addr = socket.inet_ntoa(packet_ip_addr)</span><br><span class="line">		<span class="built_in">print</span> <span class="string">"IP Adsress: %s=&gt; Packet: %s, Unpacket: %s"</span>\</span><br><span class="line">			%(ip_addr, hexlify(packet_ip_addr),unpacket_ip_addr)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">	convert_ip4_address()</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>通过指定端口和协议找到服务名</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import socket</span><br><span class="line">def find_service_name():</span><br><span class="line">	protocolname = <span class="string">'tcp'</span></span><br><span class="line">	<span class="keyword">for</span> port <span class="keyword">in</span> [80, 25]:</span><br><span class="line">		<span class="built_in">print</span> <span class="string">"Port: %s =&gt; service name: %s"</span> %(port, socket.getservbyport(port,protocolname))</span><br><span class="line">	<span class="built_in">print</span> <span class="string">"Port: %s =&gt; service name: %s"</span> %(53, socket.getservbyport(53,protocolname))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">	find_service_name()</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>主机字节序和网络字节序之间相互转换</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ntohl函数名中，n表示网络；h表示主机；l表示长整型；s表示短整型，即16位</span></span><br><span class="line">import socket</span><br><span class="line">def convert_<span class="built_in">integer</span>():</span><br><span class="line">	data = 1234</span><br><span class="line">	<span class="built_in">print</span> <span class="string">"Original: %s =&gt; host byte order: %s, Network byte order: %s"</span>\</span><br><span class="line">		%(data,socket.ntohl(data),socket.htonl(data))</span><br><span class="line">	<span class="built_in">print</span> <span class="string">"Original: %s =&gt; host byte order: %s, Network byte order: %s"</span>\</span><br><span class="line">		%(data,socket.ntohs(data),socket.htons(data))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">	convert_<span class="built_in">integer</span>()</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>设定并获取默认套接字超时时间</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#首先创建了一个套接字。</span></span><br><span class="line"><span class="comment">#套接字构造方法的第一个参数是地址族，第二个参数是套接字类型。</span></span><br><span class="line"><span class="comment">#调用gettimeout()方法获取套接字超时时间</span></span><br><span class="line"><span class="comment">#调用settimeout()方法修改套接字超时时间 秒数或None（禁用套接字操作的超时检测）</span></span><br><span class="line">import socket</span><br><span class="line">def <span class="built_in">test</span>_socket_timeout():</span><br><span class="line">	s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">	<span class="built_in">print</span> <span class="string">"Default socket timeout: %s"</span> %s.gettimeout()</span><br><span class="line">	s.settimeout(100)</span><br><span class="line">	<span class="built_in">print</span> <span class="string">"Current socket timeout: %s"</span> %s.gettimeout()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">	<span class="built_in">test</span>_socket_timeout()</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>重用套接字地址</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line">def reuse_socket_addr():</span><br><span class="line">	sock = socket.socket( socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">	old_state = sock.getsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR)</span><br><span class="line">	<span class="built_in">print</span> <span class="string">"Old sock state: %s"</span> %old_state</span><br><span class="line">	</span><br><span class="line">	sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR,1)</span><br><span class="line">	new_state = sock.getsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR)</span><br><span class="line">	<span class="built_in">print</span> <span class="string">"New sock state: %s"</span> %new_state</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">local</span>_port = 8282</span><br><span class="line">	</span><br><span class="line">	srv = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">	srv.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR,1)</span><br><span class="line">	srv.bind((<span class="string">''</span>,<span class="built_in">local</span>_port))</span><br><span class="line">	srv.listen(1)</span><br><span class="line">	<span class="built_in">print</span> <span class="string">"Listening on port: %s"</span> %<span class="built_in">local</span>_port</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span> True:</span><br><span class="line">		try:</span><br><span class="line">			connection, addr = srv.accept()</span><br><span class="line">			<span class="built_in">print</span> <span class="string">"Connented by %s:%s"</span> %(addr[0],addr[1])</span><br><span class="line">		except KeyboardInterrupt:</span><br><span class="line">			<span class="built_in">break</span></span><br><span class="line">		except socket.error, msg:</span><br><span class="line">			<span class="built_in">print</span> <span class="string">"%s"</span> %(msg,)</span><br><span class="line">			</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">	reuse_socket_addr()</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>回显客户端/服务器应用</strong></p>
<blockquote>
<p>服务器端</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line">import argparse</span><br><span class="line"></span><br><span class="line">host = <span class="string">'localhost'</span></span><br><span class="line">data_payload = 2048</span><br><span class="line">backlog = 5</span><br><span class="line"> </span><br><span class="line">def <span class="built_in">echo</span>_server(port):</span><br><span class="line">	sock = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">	sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR,1)</span><br><span class="line">	server_address = (host,port)</span><br><span class="line">	<span class="built_in">print</span> <span class="string">"Starting up echo server on %s port %s"</span> % server_address </span><br><span class="line">	sock.bind(server_address)</span><br><span class="line">	sock.listen(backlog)</span><br><span class="line">	<span class="keyword">while</span> True:</span><br><span class="line">		<span class="built_in">print</span> <span class="string">"Waiting to receive message from client"</span></span><br><span class="line">		client,address = sock.accept()</span><br><span class="line">		data = client.recv(data_payload)</span><br><span class="line">		<span class="keyword">if</span> data:</span><br><span class="line">			<span class="built_in">print</span> <span class="string">"Data: %s"</span> %data</span><br><span class="line">			client.send(data)</span><br><span class="line">			<span class="built_in">print</span> <span class="string">"sent %s bytes back to %s"</span> % (data,address)</span><br><span class="line">		client.close()</span><br><span class="line">			</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">	parser = argparse.ArgumentParser(description = <span class="string">'Socket Server Example'</span>)</span><br><span class="line">	parser.add_argument(<span class="string">'--port'</span>,action=<span class="string">"store"</span>,dest=<span class="string">"port"</span>,<span class="built_in">type</span>=int,required=True)</span><br><span class="line">	given_args=parser.parse_args()</span><br><span class="line">	port = given_args.port</span><br><span class="line">	<span class="built_in">echo</span>_server(port)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>客户端</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line">import argparse</span><br><span class="line"></span><br><span class="line">host = <span class="string">'localhost'</span></span><br><span class="line"> </span><br><span class="line">def <span class="built_in">echo</span>_client(port):</span><br><span class="line">	sock = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">	server_address = (host,port)</span><br><span class="line">	<span class="built_in">print</span> <span class="string">"Connecting to %s port %s"</span> % server_address </span><br><span class="line">	sock.connect(server_address)</span><br><span class="line">	try:</span><br><span class="line">		message = <span class="string">"Test message. This will be echoed"</span></span><br><span class="line">		<span class="built_in">print</span> <span class="string">"Sending %s"</span> % message</span><br><span class="line">		sock.sendall(message)</span><br><span class="line">		amount_received = 0</span><br><span class="line">		amount_expected = len(message)</span><br><span class="line">		<span class="keyword">while</span> amount_received &lt; amount_expected:</span><br><span class="line">			data = sock.recv(16)</span><br><span class="line">			amount_received +=len(data)</span><br><span class="line">			<span class="built_in">print</span> <span class="string">"Receive: %s"</span> % data</span><br><span class="line">	except socket.errno, e:</span><br><span class="line">		<span class="built_in">print</span> <span class="string">"socket.errno: %s"</span> %str(e)</span><br><span class="line">	except Exception, e:</span><br><span class="line">		<span class="built_in">print</span> <span class="string">"Other exception: %s"</span> %str(e)</span><br><span class="line">	finally:</span><br><span class="line">		<span class="built_in">print</span> <span class="string">"Closing connection to the server"</span></span><br><span class="line">		sock.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">	parser = argparse.ArgumentParser(description = <span class="string">'Socket Server Example'</span>)</span><br><span class="line">	parser.add_argument(<span class="string">'--port'</span>,action=<span class="string">"store"</span>,dest=<span class="string">"port"</span>,<span class="built_in">type</span>=int,required=True)</span><br><span class="line">	given_args=parser.parse_args()</span><br><span class="line">	port = given_args.port</span><br><span class="line">	<span class="built_in">echo</span>_client(port)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="使用多路复用套接字I-O提升性能"><a href="#使用多路复用套接字I-O提升性能" class="headerlink" title="使用多路复用套接字I/O提升性能"></a>使用多路复用套接字I/O提升性能</h2><p>1. </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[PHP回顾]]></title>
      <url>http://zak7.com/2016/07/18/php-review/</url>
      <content type="html"><![CDATA[<p style="background-color:#f2f4b0;padding:15px">写本文的目的主要是为了自己可以“有章可循”，避免陷入不断遗忘而复习的怪圈。<br>在本文中，我将网站开发中经常用到的<strong> PHP基本语法知识 </strong>做记录，算是回顾性质的。我也建议读者在学习开发语言时做阶段性记录，共勉。<br></p>

<a id="more"></a><!-- 空一行，上下间距更小 -->
<blockquote>
<p>由于本文是我个人学习的阶段性记录，包含HTML等相关知识，读者如果没有PHP或HTML基础的话，可能并不适合阅读。</p>
</blockquote>
<h2 id="网页传值"><a href="#网页传值" class="headerlink" title="网页传值"></a>网页传值</h2><h3 id="表单POST传值"><a href="#表单POST传值" class="headerlink" title="表单POST传值"></a>表单POST传值</h3><ol>
<li><p>page1.php</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"page2.php"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">	&lt;input type=<span class="string">"text"</span> name=<span class="string">"abc"</span>/&gt;</span><br><span class="line">	&lt;input type=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"提交"</span>/&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>page2.php</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$uu=$_POST[<span class="string">'abc'</span>];</span><br><span class="line">	<span class="keyword">echo</span> $uu;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>以下是一个form中有两个submit的情况（可能有多种方法，我只取我常用的一个）：</p>
<ol>
<li><p>page1.php</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"page2.php"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span> name=<span class="string">"modify"</span> value=<span class="string">"修改"</span>/&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span> name=<span class="string">"delete"</span> value=<span class="string">"删除"</span>/&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>page2.php</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">'REQUEST_METHOD'</span>]==<span class="string">'POST'</span>)&#123;</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'modify'</span>])) &#123; <span class="keyword">echo</span> <span class="string">"修改"</span>;&#125;</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'delete'</span>])) &#123; <span class="keyword">echo</span> <span class="string">"删除"</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="超链接GET传值"><a href="#超链接GET传值" class="headerlink" title="超链接GET传值"></a>超链接GET传值</h3><ol>
<li><p>page1.php</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$var=<span class="string">'I love you'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;a href=<span class="string">"page2.php?a=hello&amp;b=&lt;?php echo $var;?&gt;"</span>&gt;提交&lt;/a&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>page2.php</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">echo</span> $_GET[<span class="string">'a'</span>].<span class="string">'&lt;br/&gt;'</span>.$_GET[<span class="string">'b'</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="登录注销-Cookie和Session"><a href="#登录注销-Cookie和Session" class="headerlink" title="登录注销 Cookie和Session"></a>登录注销 Cookie和Session</h2><p>本段实例提供下载，实例非常不错，可结合实例学习。</p>
<h3 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录</span></span><br><span class="line">session_start();<span class="comment">//在此句之前不能有任何输出</span></span><br><span class="line"><span class="comment">//判断当前会话变量是否注册</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">"session_name"</span>]))&#123;&#125;</span><br><span class="line"><span class="comment">//删除会话变量</span></span><br><span class="line">$_SESSION[<span class="string">'session_name'</span>] = <span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">unset</span>($_SESSION[<span class="string">'session_name'</span>]);</span><br><span class="line"><span class="comment">//注册会话变量</span></span><br><span class="line">$_SESSION[<span class="string">'session_name'</span>]=<span class="string">"abc"</span>:</span><br><span class="line"><span class="comment">//登录成功后跳转</span></span><br><span class="line">header(<span class="string">"Location: home.php"</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注销</span></span><br><span class="line"><span class="comment">//删除会话变量</span></span><br><span class="line">$_SESSION[<span class="string">'session_name'</span>] = <span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">unset</span>($_SESSION[<span class="string">'session_name'</span>]);</span><br><span class="line"><span class="comment">//注销成功后跳转</span></span><br><span class="line">header(<span class="string">"Location: home.php"</span>);</span><br></pre></td></tr></table></figure>
<h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录</span></span><br><span class="line"><span class="comment">//判断当前会话变量是否注册</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_COOKIE[<span class="string">"cookie_name"</span>]))&#123;&#125;</span><br><span class="line"><span class="comment">//注册cookie。保存8个小时</span></span><br><span class="line"> setcookie(<span class="string">"cookie_name"</span>,<span class="string">"abc"</span>,(time()+<span class="number">28800</span>),<span class="string">"/"</span>);</span><br><span class="line"><span class="comment">//登录成功后跳转</span></span><br><span class="line">header(<span class="string">"Location: home.php"</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注销</span></span><br><span class="line"><span class="comment">//删除cookie</span></span><br><span class="line">setcookie(<span class="string">"cookie_name"</span>,$_COOKIE[<span class="string">"cookie_name"</span>],(time()<span class="number">-28800</span>),<span class="string">"/"</span>);</span><br><span class="line"><span class="comment">//注销成功后跳转</span></span><br><span class="line">header(<span class="string">"Location: home.php"</span>);</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong><a href="http://115.28.217.112/github/php/login_logout.zip" target="_blank" rel="external"><span style="color:red;">登录注销实例下载</span></a></strong><br>本实例中，仅使用了session无cookie，读者可自行添加。<br>该实例修改模板得来，非常不错。逻辑易懂，模块清晰。</p>
</blockquote>
<h2 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h2><h3 id="字符串分割"><a href="#字符串分割" class="headerlink" title="字符串分割"></a>字符串分割</h3><ol>
<li><p><strong>分割指定位置的字符串 </strong><code>substr(string,start,length)</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//输出：world</span></span><br><span class="line"><span class="keyword">echo</span> substr(<span class="string">"Hello world"</span>,<span class="number">6</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>以指定元素为分隔符分割 </strong><code>explode(separator,string,limit)</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出：abcd</span></span><br><span class="line">$str = <span class="string">"a,b,c,d"</span>;</span><br><span class="line">$substr = explode(<span class="string">','</span>,$str);</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;count($substr);$i++)&#123;</span><br><span class="line">	<span class="keyword">echo</span> $substr[$i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="字符串联结"><a href="#字符串联结" class="headerlink" title="字符串联结"></a>字符串联结</h3><ol>
<li><strong>以指定元素为分隔符联结 </strong><code>implode(separator,array)</code><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$allow_types = <span class="keyword">array</span>(<span class="string">"jpg"</span>,<span class="string">"gif"</span>);</span><br><span class="line"><span class="keyword">echo</span> implode($allow_types,<span class="string">","</span>);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="字符串创建"><a href="#字符串创建" class="headerlink" title="字符串创建"></a>字符串创建</h3><ol>
<li><p><strong>简单，常用 </strong><code>$errors[] = &quot;q&quot;; $errors[] = 1;</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出：Array([0] =&gt; q [1] =&gt; 1)</span></span><br><span class="line">$errors[] = <span class="string">"q"</span>;</span><br><span class="line">$errors[] = <span class="number">1</span>;</span><br><span class="line">print_r($errors);</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>array_push(array,value1,value2...)</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出：Array([0] =&gt; Dog [1] =&gt; cat [2] =&gt; bird)</span></span><br><span class="line">$a = <span class="keyword">array</span>(<span class="string">"Dog"</span>);</span><br><span class="line">array_push($a,<span class="string">"cat"</span>,<span class="string">"bird"</span>);</span><br><span class="line">print_r($a);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="字符串提取"><a href="#字符串提取" class="headerlink" title="字符串提取"></a>字符串提取</h3><ol>
<li><p><strong>数组循环输出 </strong><code>foreach($msgs as $msg)</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 输出：</span><br><span class="line"> *	1</span><br><span class="line"> *	hello</span><br><span class="line"> */</span></span><br><span class="line">$msgs=<span class="keyword">array</span>(<span class="number">0</span>=&gt;<span class="number">1</span>,<span class="number">1</span>=&gt;<span class="string">'hello'</span>);</span><br><span class="line"><span class="keyword">foreach</span>($msgs <span class="keyword">as</span> $msg)&#123;</span><br><span class="line">	<span class="keyword">echo</span> $msg.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>正则匹配提取 </strong><code>preg_match_all()</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出：Array([0]=&gt;Array([0]=&gt;1 [1]=7))</span></span><br><span class="line">preg_match_all(<span class="string">"/[0-9]+/"</span>,<span class="string">"1d2"</span>,$a);</span><br><span class="line">print_r($a);</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>提取指定字符串 </strong><code>strstr(string,search,before_search)</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 输出：</span><br><span class="line"> *	a234</span><br><span class="line"> *	123</span><br><span class="line"> */</span></span><br><span class="line">$str=<span class="string">"123a234"</span>;</span><br><span class="line"><span class="keyword">echo</span> strstr($str,<span class="string">"a"</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> strstr($str,<span class="string">"a"</span>,<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="字符串修改"><a href="#字符串修改" class="headerlink" title="字符串修改"></a>字符串修改</h3><ol>
<li><p><strong>替换数组或字符串指定子字符串 </strong><code>str_replace(find,replace,string,count)</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 输出：</span><br><span class="line"> * Array ( [0] =&gt; blue [1] =&gt; pink [2] =&gt; green [3] =&gt; yellow ) </span><br><span class="line"> * 替换数：1</span><br><span class="line"> */</span></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">"blue"</span>,<span class="string">"red"</span>,<span class="string">"green"</span>,<span class="string">"yellow"</span>);</span><br><span class="line">print_r(str_replace(<span class="string">"red"</span>,<span class="string">"pink"</span>,$arr,$i));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"替换数：$i"</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>去掉数组中的重复项 </strong><code>array_unique(array)</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/* 输出：</span><br><span class="line"> * Array ( [a] =&gt; red [b] =&gt; green )</span><br><span class="line"> */</span></span><br><span class="line">$a=<span class="keyword">array</span>(<span class="string">"a"</span>=&gt;<span class="string">"red"</span>,<span class="string">"b"</span>=&gt;<span class="string">"green"</span>,<span class="string">"c"</span>=&gt;<span class="string">"red"</span>);</span><br><span class="line">print_r(array_unique($a));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>字符串匹配替换 去掉数字中的逗号</strong><code>str_replace(&quot;,&quot;, &quot;&quot;, $money)</code><br><span style="color:#ffffff; background-color:#3366ff">str_replace()比preg_replace()更快。</span></p>
</li>
<li><p><strong>正则匹配替换 </strong><code>preg_replace($patterns, $replacements, $string [, int $limit = -1 [, int &amp;$count ]] )</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/* 输出：</span><br><span class="line"> * April1,2003</span><br><span class="line"> */</span></span><br><span class="line">$string = <span class="string">'April 15, 2003'</span>;</span><br><span class="line">$pattern = <span class="string">'/(\w+) (\d+), (\d+)/i'</span>;</span><br><span class="line">$replacement = <span class="string">'$&#123;1&#125;1,$3'</span>;</span><br><span class="line"><span class="keyword">echo</span> preg_replace($pattern, $replacement, $string);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
 <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/* 输出：</span><br><span class="line"> * The bear black slow jumped over the lazy dog.</span><br><span class="line"> */</span></span><br><span class="line">$string = <span class="string">'The quick brown fox jumped over the lazy dog.'</span>;</span><br><span class="line">$patterns = <span class="keyword">array</span>();</span><br><span class="line">$patterns[<span class="number">0</span>] = <span class="string">'/quick/'</span>;</span><br><span class="line">$patterns[<span class="number">1</span>] = <span class="string">'/brown/'</span>;</span><br><span class="line">$patterns[<span class="number">2</span>] = <span class="string">'/fox/'</span>;</span><br><span class="line">$replacements = <span class="keyword">array</span>();</span><br><span class="line">$replacements[<span class="number">2</span>] = <span class="string">'bear'</span>;</span><br><span class="line">$replacements[<span class="number">1</span>] = <span class="string">'black'</span>;</span><br><span class="line">$replacements[<span class="number">0</span>] = <span class="string">'slow'</span>;</span><br><span class="line"><span class="keyword">echo</span> preg_replace($patterns, $replacements, $string);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
 <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$str = <span class="string">'foo   o'</span>;</span><br><span class="line">$str = preg_replace(<span class="string">'/\s\s+/'</span>, <span class="string">' '</span>, $str);</span><br><span class="line"><span class="comment">// 将会改变为'foo o'</span></span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="数字操作"><a href="#数字操作" class="headerlink" title="数字操作"></a>数字操作</h2><h3 id="货币格式"><a href="#货币格式" class="headerlink" title="货币格式"></a>货币格式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">number_format(<span class="string">"5000"</span>);<span class="comment">//5,000</span></span><br><span class="line">number_format(<span class="string">"5000"</span>,<span class="number">2</span>);<span class="comment">//5,000.00</span></span><br><span class="line">number_format(<span class="string">"5000"</span>,<span class="number">2</span>,<span class="string">","</span>,<span class="string">"."</span>);<span class="comment">//5.000,00</span></span><br></pre></td></tr></table></figure>
<h3 id="数字取整"><a href="#数字取整" class="headerlink" title="数字取整"></a>数字取整</h3><pre><code>ceil() //4.3-&gt;5 9.9-&gt;10 进一取整
floor() //4.3-&gt;4 9.9-&gt;9 舍去取整
round(3.6,0) //3.6-&gt;4 0为精度 四舍五入
intval() //4.3-&gt;4 9.9-&gt;9 取整
</code></pre><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p></p><p style="background-color:#f2f4b0;padding:15px">正则表达式可以免去很多判断操作，使程序更简洁准确。掌握了解它很重要。<br></p><p></p>
<h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><ol>
<li><p><strong>正则表达式匹配 </strong><code>preg_match (pattern , subject, matches)</code><br>成功返回 1 ，否则返回 0 </p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 模式定界符后面的 "i" 表示不区分大小写字母的搜索</span></span><br><span class="line"><span class="comment">// 输出： A match was found.</span></span><br><span class="line"><span class="keyword">if</span> (preg_match (<span class="string">"/hi/i"</span>, <span class="string">"Welcome to hi-docs.com."</span>)) &#123; </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"A match was found."</span>; </span><br><span class="line"> &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"A match was not found."</span>; </span><br><span class="line"> &#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
 <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span><br><span class="line"> * 输出：Array ( </span><br><span class="line"> * [0] =&gt; &lt;a target="_blank" href="/php/preg_match.html"&gt;&lt;span class="hl"&gt;preg&lt;/span&gt;_match()&lt;/a&gt; </span><br><span class="line"> * [1] =&gt; /php/preg_match.html </span><br><span class="line"> * )</span><br><span class="line"> * </span><br><span class="line"> */</span></span><br><span class="line">$urls = <span class="string">'&lt;h3&gt;&lt;a target="_blank" href="/php/preg_match.html"&gt;&lt;span class="hl"&gt;preg&lt;/span&gt;_match()&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;[&lt;a href="/Php.html"&gt;PHP&lt;/a&gt;] 进行正则表达式匹配&lt;br/&gt;&lt;em&gt;适用版本：5&lt;/em&gt;&lt;/p&gt;&lt;/dd&gt;&lt;dd&gt;&lt;h3&gt;&lt;a target="_blank" href="/php/preg_match_all.html"&gt;&lt;span class="hl"&gt;preg&lt;/span&gt;_match_all()&lt;/a&gt;&lt;/h3&gt;'</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/&lt;a[^&gt;]*?href=\"([^&gt;]+?)\"[^&gt;]*?&gt;.+?&lt;\/a&gt;/i"</span>, $urls ,$match)) &#123; </span><br><span class="line">  print_r($match); </span><br><span class="line"> &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"不匹配."</span>; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
 <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$str = <span class="string">'preg_match正则匹配中文123'</span>;</span><br><span class="line"><span class="comment">// 正则表达式匹配中文(UTF8编码)</span></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[\x&#123;4e00&#125;-\x&#123;9fa5&#125;]+/u'</span>,$str))&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'匹配'</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'没有匹配'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 正则表达式匹配中文(GB2312,GBK编码)</span></span><br><span class="line">preg_match(<span class="string">"/^["</span>.chr(<span class="number">0xa1</span>).<span class="string">"-"</span>.chr(<span class="number">0xff</span>).<span class="string">"A-Za-z0-9_]+$/"</span>,$str);</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>正则匹配提取 </strong> <code>preg_match_all()</code><br>成功返回整个模式匹配的次数（可能为零）<br><span style="color:#ffffff; background-color:#3366ff">preg_match()只会返回一个结果，而preg_match_all()会将所有匹配的结果返回。</span><br><a href="http://localhost:4000/2016/07/18/php-review/#字符串提取" target="_blank" rel="external">preg_match_all()</a></p>
</li>
<li><strong>正则匹配替换  </strong> <code>preg_replace()</code><br><a href="http://localhost:4000/2016/07/18/php-review/#字符串修改" target="_blank" rel="external">preg_replace()</a></li>
<li><strong>正则匹配去除  </strong> <code>preg_split()</code></li>
</ol>
<h3 id="正则表达式简要"><a href="#正则表达式简要" class="headerlink" title="正则表达式简要"></a>正则表达式简要</h3><h4 id="正则匹配对照表"><a href="#正则匹配对照表" class="headerlink" title="正则匹配对照表"></a>正则匹配对照表</h4><blockquote>
<p><a href="http://www.chinaz.com/program/2008/1020/41452.shtml" target="_blank" rel="external">参考链接</a></p>
</blockquote>
<table>
<thead>
<tr>
<th>正则表达式</th>
<th>匹配字符串</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>/fo+/</td>
<td>“fool”, “fo”, 或 “football”</td>
<td>“+”元字符，f后面连续出现一个或多个字母o的字符串</td>
</tr>
<tr>
<td>/eg*/</td>
<td>“easy”, “ego”, 或 “egg”</td>
<td>“*”元字符，e后面连续出现零个或多个字母g的字符串</td>
</tr>
<tr>
<td>/wil?/</td>
<td>“Win”, 或 “Wilson”</td>
<td>“？”元字符，i后面连续出现零个或一个字母l的字符串</td>
</tr>
<tr>
<td>/jim{2,6}/</td>
<td>jimmy或jimmmmmy等字符串</td>
<td>m可以在匹配对象中连续出现2-6次</td>
</tr>
<tr>
<td>\s：匹配单个空格符(tab键和换行符)；<br>\S：匹配除单个空格符外的所有字符；<br>\d：匹配从0到9的数字；<br>\w：匹配字母，数字或下划线字符；<br>\W：匹配所有与\w不匹配的字符；<br>. ：匹配除换行符之外的所有字符。</td>
<td></td>
<td>\s和\S以及\w和\W互为逆运算</td>
</tr>
<tr>
<td>/^hell/</td>
<td>“hell”, “hello”或 “hellhound”</td>
<td>“^”定位符，目标字符串的开头</td>
</tr>
<tr>
<td>/ar$/</td>
<td>“car”, “bar”或 “ar”</td>
<td>“$”定位符，目标对象的结尾</td>
</tr>
<tr>
<td>/\bbom/</td>
<td>“bomb”, 或 “bom”</td>
<td>\b定位符，目标字符串的开头或结尾的两个边界之一</td>
</tr>
<tr>
<td>/man\b/</td>
<td>“human”, “woman”或 “man”</td>
<td>同上</td>
</tr>
<tr>
<td>\B</td>
<td>目标字符串的开头和结尾两个边界之内</td>
<td></td>
</tr>
<tr>
<td>/[A-Z]/</td>
<td>与A到Z范围内任何一个大写字母相匹配</td>
<td></td>
</tr>
<tr>
<td>/([a-z][A-Z][0-9])+/</td>
<td>“aB0”</td>
<td>“()”符号包含的内容必须同时出现在目标对象中。</td>
</tr>
<tr>
<td>/[ab]/</td>
<td>匹配单个的 a 或者 b</td>
<td>和 “/a│b/” 一样</td>
</tr>
<tr>
<td>/to&#166;too&#166;2/</td>
<td>“to”, “too”, 或 “2”</td>
<td></td>
</tr>
<tr>
<td>/[^A-C]/</td>
<td>除A，B，和C之外的任何字符相匹配</td>
<td>当“^”出现在 “[]”内时，被视做否定运算符；而当“^”位于“[]”之外，或没有“[]”时，被视做定位符</td>
</tr>
<tr>
<td>/Th*/</td>
<td>“Th*”而非“The”匹配</td>
<td>转义符“\”</td>
</tr>
</tbody>
</table>
<h4 id="正则【实例】对照表"><a href="#正则【实例】对照表" class="headerlink" title="正则【实例】对照表"></a>正则【实例】对照表</h4><table>
<thead>
<tr>
<th>正则表达式</th>
<th>匹配字符串</th>
</tr>
</thead>
<tbody>
<tr>
<td>/a(bc)*/</td>
<td>匹配 a 后面跟0个或者一个“bc”</td>
</tr>
<tr>
<td>/(b&#166;cd)ef/</td>
<td>匹配含有 “bef” 或者 “cdef”的字符串</td>
</tr>
<tr>
<td>/(a&#166;b)*c/</td>
<td>匹配含有这样多个（包括0个）a或b，后面跟一个c的字符串</td>
</tr>
<tr>
<td>/[\n.]/</td>
<td>匹配包括”\n”在内的所有单个字符</td>
</tr>
<tr>
<td>/^.{3}$/</td>
<td>三个任意字符</td>
</tr>
<tr>
<td>/^[a-zA-Z]/</td>
<td>匹配以大小写字母开头的字符串</td>
</tr>
<tr>
<td>/^[0-9]+(.[0-9]{1,2})?$/</td>
<td>匹配数字”10”和”10.2”等，不匹配”10.”</td>
</tr>
<tr>
<td><span style="color:#ffffff; background-color:#3366ff"><strong>&nbsp;货币格式&nbsp;</strong></span>&nbsp;/^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$/</td>
<td>匹配”10,121.20”</td>
</tr>
<tr>
<td><span style="color:#ffffff; background-color:#3366ff"><strong>&nbsp;邮箱&nbsp;</strong></span>&nbsp;/^[_a-z0-9-]+(.[_a-z0-9-]+)<em>@[a-z0-9-]+(.[a-z0-9-]+)</em>$/</td>
<td>匹配邮箱，如787878@qq.com</td>
</tr>
</tbody>
</table>
<h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><blockquote>
<p>不同版本的PHP，数据库的操作也不同（此教程中的是PHP 5.2.5）。<br>故只列出几个常用的命令，请读者根据版本，自行查找以备用。</p>
</blockquote>
<ol>
<li><p><strong>数据库连接</strong></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$db_host=<span class="string">"localhost"</span>;     <span class="comment">//服务器名</span></span><br><span class="line">$db_user=<span class="string">"root"</span>;         <span class="comment">//用户名</span></span><br><span class="line">$db_pass=<span class="string">""</span>;        <span class="comment">//密码</span></span><br><span class="line">$db_name=<span class="string">"XXX"</span>;        <span class="comment">//数据库名</span></span><br><span class="line">$link=mysql_connect($db_host,$db_user,$db_pass)<span class="keyword">or</span> <span class="keyword">die</span>(mysql_error());</span><br><span class="line">mysql_select_db($db_name,$link);</span><br><span class="line">mysql_query(<span class="string">"SET NAMES UTF8"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>数据库操作实例</strong></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"select from_table from mission_type where mission_type='$type'"</span>;</span><br><span class="line"><span class="comment">//数据库语句</span></span><br><span class="line">$r=mysql_query($sql);<span class="comment">//执行</span></span><br><span class="line">$row=mysql_fetch_array($r);<span class="comment">//获得结果</span></span><br></pre></td></tr></table></figure>
 <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 事务，所有数据库语句成功执行后，才会在数据库中生效</span></span><br><span class="line">mysql_query(<span class="string">"START TRANSACTION"</span>);</span><br><span class="line">$sql=<span class="string">"insert into resource(mission_id,mission_type,resource_type,resource_url) values($id,'$type','img','$file_dir')"</span>;</span><br><span class="line"><span class="keyword">if</span>(mysql_query($sql))&#123;</span><br><span class="line">	$sql=<span class="string">"update $table set resource_amount=resource_amount+1 where mission_type='$type' and mission_id=$id limit 1"</span>;</span><br><span class="line">	<span class="keyword">if</span>(mysql_query($sql))&#123;</span><br><span class="line">		mysql_query(<span class="string">"COMMIT"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
 <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//循环输出结果</span></span><br><span class="line">$sql=<span class="string">"select * from mission_type"</span>;</span><br><span class="line"><span class="comment">//数据库语句</span></span><br><span class="line">$r=mysql_query($sql);<span class="comment">//执行</span></span><br><span class="line"><span class="keyword">while</span>($row=mysql_fetch_array($result))&#123;</span><br><span class="line">	<span class="keyword">echo</span> $row[<span class="number">2</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
 <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断查询结果的条目数</span></span><br><span class="line">$sql=<span class="string">"select * from admin"</span>;</span><br><span class="line">$result=mysql_query($sql);<span class="comment">//执行</span></span><br><span class="line">   <span class="keyword">if</span>(@mysql_num_rows($result)!=<span class="number">0</span>)&#123;<span class="comment">//判断条目数</span></span><br><span class="line">       $row=mysql_fetch_array($result);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
 <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回最新的自增ID，这个有时候非常有用</span></span><br><span class="line">$id=mysql_insert_id();</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[微信消息的封装：XML或JSON]]></title>
      <url>http://zak7.com/2016/07/05/wechat-msg-encapsulation/</url>
      <content type="html"><![CDATA[<p style="background-color:#f4dab0;padding:15px">此教程将会为大家讲解微信公众号开发的基础知识 —— 微信消息的封装：XML或JSON。<br></p>

<a id="more"></a><!-- 空一行，上下间距更小 -->
<blockquote>
<p>此系列教程独立于“<a href="http://zak7.com/categories/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91/"><span style="color:#ffffff; background-color:#3366ff">微信公众平台的二次开发</span></a>”系列的教程。主要给大家讲解微信公众号开发过程中可能会接触到的一些<span style="color:#ffffff; background-color:#3366ff">基础理论知识</span>。本次讲解微信消息的封装：XML或JSON。</p>
</blockquote>
<h2 id="微信用XML封装消息"><a href="#微信用XML封装消息" class="headerlink" title="微信用XML封装消息"></a>微信用XML封装消息</h2><h3 id="XML语法简介"><a href="#XML语法简介" class="headerlink" title="XML语法简介"></a>XML语法简介</h3><ol>
<li><p><strong>XML元素命名规则</strong></p>
<blockquote>
<ul>
<li>可以含有字母、数字及其它字符</li>
<li>不能以数字或标点符号开始</li>
<li>不能以“xml”开始</li>
<li>不能包含空格</li>
<li>可以使用任何名称，没有保留的字词</li>
</ul>
</blockquote>
<p> 注：标签对大小写敏感。XML文档必须有根元素。<br>完整的XML文档，如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;employee&gt;</span><br><span class="line">	&lt;name&gt;</span><br><span class="line">		&lt;firstname&gt;Bob&lt;/firstname&gt;</span><br><span class="line">		&lt;lastname&gt;Chen&lt;/lastname&gt;</span><br><span class="line">	&lt;/name&gt;</span><br><span class="line">	&lt;sex&gt;man&lt;/sex&gt;</span><br><span class="line">&lt;/employee&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>XML的转义序列自符</strong></p>
<blockquote>
<ul>
<li><code>&amp;lt;</code>表示“&lt;”</li>
<li><code>&amp;gt;</code>表示“&gt;”</li>
<li><code>&amp;amp;</code>表示“&amp;”</li>
<li><code>&amp;apos;</code>表示“’”</li>
<li><code>&amp;quot;</code>表示“””<br>注：大小写敏感。转义序列以分号“;”结束。</li>
</ul>
</blockquote>
</li>
<li><p><strong>CDATA字段</strong><br>第2点中提到，对于一些特殊的字符，由于在XML中具有特殊的意义，因此需要转义。但是，对于某些文本（例如JavaScript代码），其中包含大量的“&lt;”或“&amp;”字符，逐个进行转义比较麻烦，易出错。故可以将该脚本代码段定义为CDATA区段。<br>CDATA区段中的所有内容都会被XML解析器忽略。<br>CDATA区段<span style="color:#ffffff; background-color:#3366ff">由“&lt;![CDATA[”开始，由“]]&gt;”结束</span>。举例如下(<strong>文本消息的XML数据包结构</strong>)：</p>
<blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">	&lt;ToUserName&gt;&lt;![CDATA[toUser]&gt;&lt;/ToUserName&gt;</span><br><span class="line">	&lt;FromUserName&gt;&lt;![CDATA[fromUser]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">	&lt;CreateTime&gt;&lt;![CDATA[123455]]&gt;&lt;/CreateTime&gt;</span><br><span class="line">	&lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;</span><br><span class="line">	&lt;Content&gt;&lt;![CDATA[this is a <span class="built_in">test</span>]]&gt;&lt;/Content&gt;</span><br><span class="line">	&lt;MsgId&gt;123546546&lt;/MsgId&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</blockquote>
<p> 在该XML数据包中，根元素为<code>&lt;xml&gt;</code>,根元素下包含6个子元素，其含义分别如下：</p>
<ul>
<li>ToUserName 开发者微信号</li>
<li>FromUserName 发送方帐号 （一个OpenID）</li>
<li>CreateTime 消息创建时间（整型）</li>
<li>MsgType text</li>
<li>Content 文本消息内容</li>
<li>MsgId 消息id，64为整数</li>
</ul>
</li>
</ol>
<h2 id="微信封装的另一种格式：JSON"><a href="#微信封装的另一种格式：JSON" class="headerlink" title="微信封装的另一种格式：JSON"></a>微信封装的另一种格式：JSON</h2><p>与XML相比，JSON比XML更小、更快，更易解析。</p>
<h3 id="JSON对象"><a href="#JSON对象" class="headerlink" title="JSON对象"></a>JSON对象</h3><p>对象在JS中表示用“{}”括起来的内容。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="string">"name"</span>:<span class="string">"王小明"</span>,</span><br><span class="line">	<span class="string">"sex"</span>:<span class="string">"男"</span>,</span><br><span class="line">	<span class="string">"mobile"</span>:<span class="string">"12312344"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="JSON数组"><a href="#JSON数组" class="headerlink" title="JSON数组"></a>JSON数组</h3><p>数组在JS中是用中括号“[]”括起来的内容。<br>例如：<br><code>[&quot;php&quot;,&quot;javascript&quot;,&quot;vb&quot;]</code><br>对象和数组可以相互嵌套。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="string">"name"</span>:<span class="string">"王小明"</span>,</span><br><span class="line">		<span class="string">"sex"</span>:<span class="string">"男"</span>,</span><br><span class="line">		<span class="string">"mobile"</span>:<span class="string">"12312344"</span></span><br><span class="line">	&#125;,</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="string">"name"</span>:<span class="string">"王小小"</span>,</span><br><span class="line">		<span class="string">"sex"</span>:<span class="string">"女"</span>,</span><br><span class="line">		<span class="string">"mobile"</span>:<span class="string">"167575675"</span></span><br><span class="line">	&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>你将会在<span style="color:#ffffff; background-color:#3366ff">自定义菜单</span>中运用到JSON数据格式的知识。可以前往实践一下，点击以下链接跳转：<br><a href="http://zak7.com/2016/07/03/wechat-menu/"><span style="color:#ffffff; background-color:#3366ff">微信公众平台的二次开发 — 自定义菜单</span></a>。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[微信公众平台的二次开发&ensp;—&ensp;自定义菜单]]></title>
      <url>http://zak7.com/2016/07/03/wechat-menu/</url>
      <content type="html"><![CDATA[<p style="background-color:#b0f4f3;padding:15px">有了自定义菜单，公众号看起来才像公众号嘛。而且可以给订阅者提供更好的交互体验。<br></p>

<a id="more"></a><!-- 空一行，上下间距更小 -->
<h2 id="你可能需要的链接"><a href="#你可能需要的链接" class="headerlink" title="你可能需要的链接"></a>你可能需要的链接</h2><blockquote>
<p><a href="http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login" target="_blank" rel="external">微信公众平台测试号登录页面</a><br><a href="http://t.cn/R5R2Owg" target="_blank" rel="external">新浪云应用http://www.sinacloud.com/</a></p>
</blockquote>
<h2 id="实现结果截图"><a href="#实现结果截图" class="headerlink" title="实现结果截图"></a>实现结果截图</h2><p><img src="http://115.28.217.112/github/wechat/wechat_menu/1.jpg" alt=""></p>
<h2 id="自定义菜单实现"><a href="#自定义菜单实现" class="headerlink" title="自定义菜单实现"></a>自定义菜单实现</h2><p>首先，微信公众号的菜单有多种方式可以设定。本教程提供的只是其中一种，有兴趣的读者可以在网上查找其余方法。</p>
<h3 id="新浪云部署"><a href="#新浪云部署" class="headerlink" title="新浪云部署"></a>新浪云部署</h3><ol>
<li>打开新浪云，进入<span style="color:#ffffff; background-color:#3366ff">控制台-云应用SAE</span>，点击<span style="color:#ffffff; background-color:#3366ff">进入控制台</span>。页面跳转后，选择先前你创建的应用(如果没有，新建一个应用即可，或阅读先前的教程-“<a href="http://zak7.com/categories/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91/">微信公众平台开发</a>”)。再依次点击<span style="color:#ffffff; background-color:#3366ff">应用（左侧）-代码管理</span>，进入代码管理页面。如下：<br><img src="http://115.28.217.112/github/wechat/wechat_menu/2.jpg" alt=""></li>
<li><p>点击“下载代码包”，下载本次教程的代码包。</p>
<blockquote>
<p><strong><a href="http://115.28.217.112/github/wechat/wechat_menu/index4.zip" target="_blank" rel="external"><span style="color:red;">&gt;&gt;&gt;下载代码包</span></a></strong><br>此代码包内已整合了先前教程的所有内容。</p>
</blockquote>
</li>
<li><p>回到新浪云“代码管理”界面，点击<span style="color:#ffffff; background-color:#3366ff">+创建版本</span>，填入版本号为4（可根据自己的情况选择版本号）。创建完毕后，点击相应版本（此处为版本4）的<span style="color:#ffffff; background-color:#3366ff">上传代码包</span>。</p>
</li>
</ol>
<h3 id="获取微信access-token"><a href="#获取微信access-token" class="headerlink" title="获取微信access_token"></a>获取微信access_token</h3><ol>
<li><p>继续上一节的步骤，点击版本4的<span style="color:#ffffff; background-color:#3366ff">编辑代码</span>,进入如下界面。<br><img src="http://115.28.217.112/github/wechat/wechat_menu/3.jpg" alt=""><br>左侧应该有5个文件，双击menu.php。可以看到下列代码：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$appid</span> = <span class="string">"你的微信公众号appID"</span>;</span><br><span class="line"><span class="variable">$appsecret</span> = <span class="string">"你的微信公众号appsecret"</span>;</span><br><span class="line">...</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开<span style="color:#ffffff; background-color:#3366ff">微信平台测试号</span>页面并登录，如下。在此页面中列出了你微信公众号的appID和appsecret。<br><img src="http://115.28.217.112/github/wechat/wechat_menu/4.jpg" alt=""></p>
</li>
<li><p>复制微信公众号的appID和appsecret，并在<span style="color:#ffffff; background-color:#3366ff">menu.php</span>中替换。保存！</p>
<blockquote>
<p>appID和appsecret用于获得微信的access_token，access_token字符串每隔1小时就会更改。</p>
</blockquote>
</li>
<li><p>在新浪云应用的“<span style="color:#ffffff; background-color:#3366ff">编辑代码</span>”页面，<span style="color:#ffffff; background-color:#3366ff">右击menu.php</span>弹出菜单，选择<span style="color:#ffffff; background-color:#3366ff">通过URL访问</span>。<br>若网页出现<br><code>string(27) &quot;{&quot;errcode&quot;:0,&quot;errmsg&quot;:&quot;ok&quot;}&quot;</code><br>则表明菜单已经设置完毕了。<strong>（菜单生效的有点慢，可能需要几分钟，请耐心等待）</strong><br>若网页出现其它信息，如<br><code>string(71) &quot;{&quot;errcode&quot;:40016,&quot;errmsg&quot;:&quot;invalid button size hint: [ngqUqa0109vr22]&quot;}&quot;</code><br>则表明菜单设置失败。本教程的代码是测试无错的，请检查appID和appsecret，或是否修改了代码造成了一些语法错误。</p>
</li>
</ol>
<h3 id="自定义菜单"><a href="#自定义菜单" class="headerlink" title="自定义菜单"></a>自定义菜单</h3><p><strong>writing</strong></p>
<h3 id="响应菜单点击事件"><a href="#响应菜单点击事件" class="headerlink" title="响应菜单点击事件"></a>响应菜单点击事件</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[微信公众平台的二次开发&ensp;—&ensp;人脸识别]]></title>
      <url>http://zak7.com/2016/07/01/wechat-face/</url>
      <content type="html"><![CDATA[<p style="background-color:#f2f4b0;padding:15px">本文为“微信公众平台二次开发”的高级教程，之所以放在前面，是因为它感觉上比较高端，可以培养学生的兴趣。<br></p>

<a id="more"></a><!-- 空一行，上下间距更小 -->
<blockquote>
<p>准备工作：<br>本文以先前的教程为基础，且假定读者已经实现教程中的例子。<br>若你未完成，请至上一篇教程“<a href="http://zak7.com/2016/06/30/wechat-msg/#more"><span style="color:#ffffff; background-color:#3366ff">消息类型</span></a>”进行学习，或到<a href="http://zak7.com/categories/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91/"><span style="color:#ffffff; background-color:#3366ff">微信公众平台</span></a>分类下阅读并学习先前文章。</p>
</blockquote>
<h2 id="你可能需要的链接"><a href="#你可能需要的链接" class="headerlink" title="你可能需要的链接"></a>你可能需要的链接</h2><blockquote>
<p><a href="http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login" target="_blank" rel="external">微信公众平台测试号登录页面</a><br><a href="http://t.cn/R5R2Owg" target="_blank" rel="external">新浪云应用http://www.sinacloud.com/</a><br><a href="http://115.28.217.112/github/wechat/wechat_face/0.jpg" target="_blank" rel="external">↓↓ 本教程测试公众号二维码 ↓↓</a><br><img src="http://115.28.217.112/github/wechat/wechat_face/0.jpg" width="150" height="150"></p>
</blockquote>
<h2 id="实验结果截图"><a href="#实验结果截图" class="headerlink" title="实验结果截图"></a>实验结果截图</h2><p><img src="http://115.28.217.112/github/wechat/wechat_face/1.png" alt=""></p>
<h2 id="注册face-账号"><a href="#注册face-账号" class="headerlink" title="注册face++账号"></a>注册face++账号</h2><ol>
<li>要实现人脸识别的功能，我们要借助face++提供的人脸识别功能接口。<br>首先，点击下列链接<br><a href="http://www.faceplusplus.com.cn/" target="_blank" rel="external">http://www.faceplusplus.com.cn/</a><br>跳转到face++官网。点击右上角“<span style="color:#ffffff; background-color:#3366ff">注册</span>”进行注册<br><img src="http://115.28.217.112/github/wechat/wechat_face/2.jpg" alt=""><br>激活账号后登录face++，点击<span style="color:#ffffff; background-color:#3366ff">创建应用</span>。出现下图页面：<br><img src="http://115.28.217.112/github/wechat/wechat_face/3.jpg" alt=""><br>请按照上图所示填写，填写完毕后，点击<span style="color:#ffffff; background-color:#3366ff">提交</span>。</li>
<li>上一步骤完成后，你将跳转到如下页面。这里列出了一些关键信息，其中API Key和API Secret是我们调用face++接口的认证信息：<br><img src="http://115.28.217.112/github/wechat/wechat_face/4.jpg" alt=""><br>你也可以从<span style="color:#ffffff; background-color:#3366ff">我的应用-管理</span>进入该页面。<br>至此，face++的部分已经完成。</li>
</ol>
<h2 id="部署代码实现人脸识别"><a href="#部署代码实现人脸识别" class="headerlink" title="部署代码实现人脸识别"></a>部署代码实现人脸识别</h2><ol>
<li>点击<span style="color:#ffffff; background-color:#3366ff">下载代码包</span><blockquote>
<p><strong><a href="http://115.28.217.112/github/wechat/wechat_face/index3.zip" target="_blank" rel="external"><span style="color:red;">&gt;&gt;&gt;下载代码包</span></a></strong></p>
</blockquote>
</li>
<li>打开新浪云应用<blockquote>
<p><a href="http://t.cn/R5R2Owg" target="_blank" rel="external">http://www.sinacloud.com/</a><br>依次点击“<span style="color:#ffffff; background-color:#3366ff">控制台-云应用SAE-你在先前课程创建的云应用</span>”，进入云应用管理界面，然后点击“<span style="color:#ffffff; background-color:#3366ff">应用-代码管理</span>”进入代码管理页面。</p>
</blockquote>
</li>
<li>点击右侧的<span style="color:#ffffff; background-color:#3366ff">+创建版本</span>。<br>成功创建新版本3后，点击版本3中的“上传代码包”，将本节下载的代码包上传。<br><img src="http://115.28.217.112/github/wechat/wechat_face/5.jpg" alt=""><br>并将版本3设置为默认版本，如上图所示。</li>
<li>此时测试你的微信公众号，发送图片，回复的应该仍为图片。<br>点击版本3中右侧的“<span style="color:#ffffff; background-color:#3366ff">编辑代码</span>”,进入代码编辑页面。<br><img src="http://115.28.217.112/github/wechat/wechat_face/6.jpg" alt=""></li>
<li>双击facepp_sdk.php文件。找到如下代码：<br><img src="http://115.28.217.112/github/wechat/wechat_face/7.jpg" alt=""><br>将变量$api_key和$api_secret的值设置为face++应用中的相应api key和api secret字符串。然后保存（crtl+s或点击右上角“全部保存”)</li>
<li>此时测试你的微信公众号，发送图片，将回复图片的分析结果。人脸识别功能实现!</li>
</ol>
<p style="background-color:#f2f4b0;padding:15px">等等，这也太简单了吧 =_=|| 。<br>以<strong>“先结果再步骤最后代码”</strong>的方式来编写教程，可以让读者快速实现功能。初学者更加容易获得成就感，同时也可以避免有一定基础的读者浪费时间在代码介绍上。<br><br><strong>我将在下一节为你讲解代码的实现。如果你只看到“writing”，或只看到代码段，说明我正在书写整理该教程，请耐心等待。</strong><br></p>

<h2 id="代码解析"><a href="#代码解析" class="headerlink" title="代码解析"></a>代码解析</h2><p><strong>writing</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[微信公众平台的二次开发&ensp;—&ensp;消息类型]]></title>
      <url>http://zak7.com/2016/07/01/wechat-msg/</url>
      <content type="html"><![CDATA[<p style="background-color:#f4dab0;padding:15px">在本文中，读者可以了解微信消息的多种格式，并实现接收和回复各种消息。可收藏供以后学习或开发。<br></p>

<a id="more"></a><!-- 空一行，上下间距更小 -->
<blockquote>
<p>准备工作：<br>本文以先前的入门教程为基础，且假定读者已经实现该教程。<br>若你未完成，请移步<a href="http://zak7.com/2016/06/30/wechat/#more"><span style="color:#ffffff; background-color:#3366ff">入门教程</span></a>进行学习。</p>
</blockquote>
<h2 id="实验结果截图"><a href="#实验结果截图" class="headerlink" title="实验结果截图"></a>实验结果截图</h2><p><img src="http://115.28.217.112/github/wechat/wechat_msg/1.jpg" alt=""><img src="http://115.28.217.112/github/wechat/wechat_msg/2.jpg" alt=""><img src="http://115.28.217.112/github/wechat/wechat_msg/3.jpg" alt=""></p>
<h2 id="多类型消息收发实现"><a href="#多类型消息收发实现" class="headerlink" title="多类型消息收发实现"></a>多类型消息收发实现</h2><ol>
<li><p>点击<span style="color:#ffffff; background-color:#3366ff">下载代码包</span></p>
<blockquote>
<p><strong><a href="http://115.28.217.112/github/wechat/wechat_msg/index2.zip" target="_blank" rel="external"><span style="color:red;">&gt;&gt;&gt;下载代码包</span></a></strong></p>
</blockquote>
</li>
<li><p>进入新浪云空间<a href="http://t.cn/R5R2Owg" target="_blank" rel="external">http://www.sinacloud.com/</a><br><img src="http://115.28.217.112/github/wechat/wechat_msg/4.jpg" alt=""><br>点击“控制台-云应用SAE”，点击入门教程建立的云应用名称，进入云应用管理界面。然后点击“应用（左侧）-代码管理”。</p>
</li>
<li><p>点击“上传代码”，将原先的代码覆盖即可。<br>如果你不想将过去的覆盖，也可以点击右侧的<span style="color:#ffffff; background-color:#3366ff">+创建版本</span>，新建一个版本号为“2”的新版本，在此版本中上传代码包。</p>
</li>
<li><p>取出手机，(≧ω≦) ，你会发现，你的微信公众号已经具备上面截图的所有功能了。关于代码，大家不用担心，我将在下一节给大家讲解。</p>
</li>
</ol>
<h2 id="消息类型详解"><a href="#消息类型详解" class="headerlink" title="消息类型详解"></a>消息类型详解</h2><h3 id="消息收发时的原理"><a href="#消息收发时的原理" class="headerlink" title="消息收发时的原理"></a>消息收发时的原理</h3><p>上一节实例完成后，当用户发送一个“hello”，系统回复了一个时间，这一原理的消息流程图如下所示。<br><img src="http://115.28.217.112/github/wechat/wechat_msg/5.png" class="full-image" alt="alt" title="微信消息收发流程图"><br>从上图可以看出，用户在发送一个“hello”后，<span style="color:#ffffff; background-color:#3366ff">微信服务器</span>将组装一个消息发送给<span style="color:#ffffff; background-color:#3366ff">我们的服务器</span>，<span style="color:#ffffff; background-color:#3366ff">我们的服务器</span>然后回复一个时间给<span style="color:#ffffff; background-color:#3366ff">公众账号</span>，<span style="color:#ffffff; background-color:#3366ff">公众账号</span>再回复给用户。<br>在这个收发过程中，发送方和接收方进行了调换(ToUserName和FromUserName值互换)，收发都是以xml格式在后台进行传输的。<br><strong>所以掌握各种消息类型的接收回复就是进行微信公众平台开发的基础！</strong><br>下面将讲解实例代码中出现的各类型消息的XML数据包格式。</p>
<h3 id="文本-表情-消息"><a href="#文本-表情-消息" class="headerlink" title="文本(表情)消息"></a>文本(表情)消息</h3><ol>
<li><p>接收文本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">	&lt;ToUserName&gt;&lt;![CDATA[a]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">	&lt;FromUserName&gt;&lt;![CDATA[b]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">	&lt;CreateTime&gt;1359028446&lt;/CreateTime&gt;</span><br><span class="line">	&lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;</span><br><span class="line">	&lt;Content&gt;&lt;![CDATA[测试文字]]&gt;&lt;/Content&gt;</span><br><span class="line">	&lt;MsgId&gt;5836982729904121631&lt;/MsgId&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>回复文本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">	&lt;ToUserName&gt;&lt;![CDATA[b]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">	&lt;FromUserName&gt;&lt;![CDATA[a]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">	&lt;CreateTime&gt;1359036631&lt;/CreateTime&gt;</span><br><span class="line">	&lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;</span><br><span class="line">	&lt;Content&gt;&lt;![CDATA[<span class="built_in">test</span> <span class="built_in">test</span>]&gt;&lt;/Content&gt;</span><br><span class="line">	&lt;FuncFlag&gt;0&lt;/FuncFlag&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="图片消息"><a href="#图片消息" class="headerlink" title="图片消息"></a>图片消息</h3><ol>
<li><p>接收图片</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">	&lt;ToUserName&gt;&lt;![CDATA[a]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">	&lt;FromUserName&gt;&lt;![CDATA[b]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">	&lt;CreateTime&gt;1359028479&lt;/CreateTime&gt;</span><br><span class="line">	&lt;MsgType&gt;&lt;![CDATA[image]]&gt;&lt;/MsgType&gt;</span><br><span class="line">	&lt;PicUrl&gt;&lt;![CDATA[http://mmb.../0]]&gt;&lt;/PicUrl&gt;</span><br><span class="line">	&lt;MsgId&gt;5836982871638042400&lt;/MsgId&gt;</span><br><span class="line">	&lt;MediaId&gt;&lt;![CDATA[abc]]&gt;&lt;/MediaId&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>回复图片</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">	&lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">	&lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">	&lt;CreateTime&gt;%s&lt;/CreateTime&gt;</span><br><span class="line">	&lt;MsgType&gt;&lt;![CDATA[image]]&gt;&lt;/MsgType&gt;</span><br><span class="line">	&lt;Image&gt;</span><br><span class="line">	&lt;MediaId&gt;&lt;![CDATA[%s]]&gt;&lt;/MediaId&gt;</span><br><span class="line">	&lt;/Image&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="音频消息"><a href="#音频消息" class="headerlink" title="音频消息"></a>音频消息</h3><ol>
<li><p>接收音频</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">    &lt;ToUserName&gt;&lt;![CDATA[a]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">    &lt;FromUserName&gt;&lt;![CDATA[b]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">    &lt;CreateTime&gt;1364883809&lt;/CreateTime&gt;</span><br><span class="line">    &lt;MsgType&gt;&lt;![CDATA[voice]]&gt;&lt;/MsgType&gt;</span><br><span class="line">    &lt;MediaId&gt;&lt;![CDATA[abc]]&gt;&lt;/MediaId&gt;</span><br><span class="line">    &lt;Format&gt;&lt;![CDATA[amr]]&gt;&lt;/Format&gt;</span><br><span class="line">    &lt;MsgId&gt;5862131322594912688&lt;/MsgId&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>回复音频</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">    &lt;ToUserName&gt;&lt;![CDATA[ollB4jqgdO_cRnVXk_wRnSywgtQ8]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">    &lt;FromUserName&gt;&lt;![CDATA[gh_b629c48b653e]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">    &lt;CreateTime&gt;1372310544&lt;/CreateTime&gt;</span><br><span class="line">    &lt;MsgType&gt;&lt;![CDATA[music]]&gt;&lt;/MsgType&gt;</span><br><span class="line">    &lt;Music&gt;</span><br><span class="line">        &lt;Title&gt;&lt;![CDATA[最炫民族风]]&gt;&lt;/Title&gt;</span><br><span class="line">        &lt;Description&gt;&lt;![CDATA[凤凰传奇]]&gt;&lt;/Description&gt;</span><br><span class="line">        &lt;MusicUrl&gt;&lt;![CDATA[http://zj189.cn/zj/download/music/zxmzf.mp3]]&gt;&lt;/MusicUrl&gt;</span><br><span class="line">        &lt;HQMusicUrl&gt;&lt;![CDATA[http://zj189.cn/zj/download/music/zxmzf.mp3]]&gt;&lt;/HQMusicUrl&gt;</span><br><span class="line">    &lt;/Music&gt;</span><br><span class="line">    &lt;FuncFlag&gt;0&lt;/FuncFlag&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="视频消息"><a href="#视频消息" class="headerlink" title="视频消息"></a>视频消息</h3><ol>
<li>接收视频<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">	&lt;ToUserName&gt;&lt;![CDATA[a]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">	&lt;FromUserName&gt;&lt;![CDATA[b]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">	&lt;CreateTime&gt;1359028186&lt;/CreateTime&gt;</span><br><span class="line">	&lt;MsgType&gt;&lt;![CDATA[video]]&gt;&lt;/MsgType&gt;</span><br><span class="line">	&lt;MediaId&gt;&lt;![abc]]&gt;&lt;/MediaId&gt;</span><br><span class="line">	&lt;ThumbMediaId&gt;&lt;![CDATA[scd]]&gt;&lt;/ThumbMediaId&gt;</span><br><span class="line">	&lt;MsgId&gt;5836981613212624665&lt;/MsgId&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="位置消息"><a href="#位置消息" class="headerlink" title="位置消息"></a>位置消息</h3><ol>
<li>接收位置<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">	&lt;ToUserName&gt;&lt;![CDATA[a]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">	&lt;FromUserName&gt;&lt;![CDATA[b]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">	&lt;CreateTime&gt;1359036619&lt;/CreateTime&gt;</span><br><span class="line">	&lt;MsgType&gt;&lt;![CDATA[location]]&gt;&lt;/MsgType&gt;</span><br><span class="line">	&lt;Location_X&gt;22.539968&lt;/Location_X&gt;</span><br><span class="line">	&lt;Location_Y&gt;113.954980&lt;/Location_Y&gt;</span><br><span class="line">	&lt;Scale&gt;16&lt;/Scale&gt;</span><br><span class="line">	&lt;Label&gt;&lt;![CDATA[地址]]&gt;&lt;/Label&gt;</span><br><span class="line">	&lt;MsgId&gt;5837017832671832047&lt;/MsgId&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="链接消息"><a href="#链接消息" class="headerlink" title="链接消息"></a>链接消息</h3><ol>
<li>接收链接<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">	&lt;ToUserName&gt;&lt;![CDATA[a]]&gt;&lt;/ToUserName&gt; </span><br><span class="line">	&lt;FromUserName&gt;&lt;![CDATA[b]]&gt;&lt;/FromUserName&gt; </span><br><span class="line">	&lt;CreateTime&gt;1359709372&lt;/CreateTime&gt; </span><br><span class="line">	&lt;MsgType&gt;&lt;![CDATA[link]]&gt;&lt;/MsgType&gt; </span><br><span class="line">	&lt;Title&gt;&lt;![CDATA[微信公众平台开发者的江湖]]&gt;&lt;/Title&gt; </span><br><span class="line">	&lt;Description&gt;&lt;![CDATA[链接描述..]]&gt;&lt;/Description&gt; </span><br><span class="line">	&lt;Url&gt;&lt;![CDATA[http://israel.duapp.com/web/photo.php]]&gt;&lt;/Url&gt; </span><br><span class="line">	&lt;MsgId&gt;5839907284805129867&lt;/MsgId&gt; </span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="图文消息"><a href="#图文消息" class="headerlink" title="图文消息"></a>图文消息</h3><ol>
<li><p>回复单图文</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">    &lt;ToUserName&gt;&lt;![CDATA[oIDrpjqASyTPnxRmpS9O_ruZGsfk]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">    &lt;FromUserName&gt;&lt;![CDATA[gh_680bdefc8c5d]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">    &lt;CreateTime&gt;1359011899&lt;/CreateTime&gt;</span><br><span class="line">    &lt;MsgType&gt;&lt;![CDATA[news]]&gt;&lt;/MsgType&gt;</span><br><span class="line">    &lt;Content&gt;&lt;![CDATA[]]&gt;&lt;/Content&gt;</span><br><span class="line">    &lt;ArticleCount&gt;1&lt;/ArticleCount&gt;</span><br><span class="line">    &lt;Articles&gt;</span><br><span class="line">        &lt;item&gt;</span><br><span class="line">            &lt;Title&gt;&lt;![CDATA[[单图文]]&gt;&lt;/Title&gt;</span><br><span class="line">            &lt;Description&gt;&lt;![CDATA[单图文描述]]&gt;</span><br><span class="line">    &lt;/Description&gt;</span><br><span class="line">            &lt;PicUrl&gt;&lt;![CDATA[http://www.fangbei.org/weixin/weather/icon/banner.jpg]]&gt;&lt;/PicUrl&gt;</span><br><span class="line">            &lt;Url&gt;&lt;![CDATA[]]&gt;&lt;/Url&gt;</span><br><span class="line">        &lt;/item&gt;</span><br><span class="line">    &lt;/Articles&gt;</span><br><span class="line">    &lt;FuncFlag&gt;0&lt;/FuncFlag&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>回复多图文</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">    &lt;ToUserName&gt;&lt;![CDATA[oIDrpjqASyTPnxRmpS9O_ruZGsfk]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">    &lt;FromUserName&gt;&lt;![CDATA[gh_680bdefc8c5d]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">    &lt;CreateTime&gt;1359011829&lt;/CreateTime&gt;</span><br><span class="line">    &lt;MsgType&gt;&lt;![CDATA[news]]&gt;&lt;/MsgType&gt;</span><br><span class="line">    &lt;Content&gt;&lt;![CDATA[]]&gt;&lt;/Content&gt;</span><br><span class="line">    &lt;ArticleCount&gt;3&lt;/ArticleCount&gt;</span><br><span class="line">    &lt;Articles&gt;</span><br><span class="line">        &lt;item&gt;</span><br><span class="line">            &lt;Title&gt;&lt;![CDATA[【深圳】天气实况 温度：3℃ 湿度：43﹪ 风速：西南风2级]]&gt;&lt;/Title&gt;</span><br><span class="line">            &lt;Description&gt;&lt;![CDATA[]]&gt;&lt;/Description&gt;</span><br><span class="line">&lt;PicUrl&gt;&lt;![CDATA[http://www.fangbei.org/weixin/weather/icon/banner.jpg]]&gt;&lt;/PicUrl&gt;</span><br><span class="line">            &lt;Url&gt;&lt;![CDATA[]]&gt;&lt;/Url&gt;</span><br><span class="line">        &lt;/item&gt;</span><br><span class="line">        &lt;item&gt;</span><br><span class="line">            &lt;Title&gt;&lt;![CDATA[06月24日 周四 2℃~-7℃ 晴 北风3-4级转东南风小于3级]]&gt;&lt;/Title&gt;</span><br><span class="line">            &lt;Description&gt;&lt;![CDATA[]]&gt;&lt;/Description&gt;</span><br><span class="line">            &lt;PicUrl&gt;&lt;![CDATA[http://www.fangbei.org/weixin/weather/icon/d00.gif]]&gt;&lt;/PicUrl&gt;</span><br><span class="line">            &lt;Url&gt;&lt;![CDATA[]]&gt;&lt;/Url&gt;</span><br><span class="line">        &lt;/item&gt;</span><br><span class="line">        &lt;item&gt;</span><br><span class="line">            &lt;Title&gt;&lt;![CDATA[06月25日 周五 -1℃~-8℃ 晴 东南风小于3级转东北风3-4级]]&gt;&lt;/Title&gt;</span><br><span class="line">            &lt;Description&gt;&lt;![CDATA[]]&gt;&lt;/Description&gt;</span><br><span class="line">    &lt;PicUrl&gt;&lt;![CDATA[http://www.fangbei.org/weixin/weather/icon/d00.gif]]&gt;&lt;/PicUrl&gt;</span><br><span class="line">            &lt;Url&gt;&lt;![CDATA[]]&gt;&lt;/Url&gt;</span><br><span class="line">        &lt;/item&gt;</span><br><span class="line">    &lt;/Articles&gt;</span><br><span class="line">    &lt;FuncFlag&gt;0&lt;/FuncFlag&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="事件消息"><a href="#事件消息" class="headerlink" title="事件消息"></a>事件消息</h3><ol>
<li><p>接收关注事件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">    &lt;ToUserName&gt;&lt;![CDATA[gh_b629c48b653e]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">    &lt;FromUserName&gt;&lt;![CDATA[ollB4jv7LA3tydjviJp5V9qTU_kA]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">    &lt;CreateTime&gt;1372307736&lt;/CreateTime&gt;</span><br><span class="line">    &lt;MsgType&gt;&lt;![CDATA[event]]&gt;&lt;/MsgType&gt;</span><br><span class="line">    &lt;Event&gt;&lt;![CDATA[subscribe]]&gt;&lt;/Event&gt;</span><br><span class="line">    &lt;EventKey&gt;&lt;![CDATA[]]&gt;&lt;/EventKey&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>取消关注事件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">    &lt;ToUserName&gt;&lt;![CDATA[gh_b629c48b653e]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">    &lt;FromUserName&gt;&lt;![CDATA[ollB4jqgdO_cRnVXk_wRnSywgtQ8]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">    &lt;CreateTime&gt;1372309890&lt;/CreateTime&gt;</span><br><span class="line">    &lt;MsgType&gt;&lt;![CDATA[event]]&gt;&lt;/MsgType&gt;</span><br><span class="line">    &lt;Event&gt;&lt;![CDATA[unsubscribe]]&gt;&lt;/Event&gt;</span><br><span class="line">    &lt;EventKey&gt;&lt;![CDATA[]]&gt;&lt;/EventKey&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>菜单点击事件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">    &lt;ToUserName&gt;&lt;![CDATA[gh_680bdefc8c5d]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">    &lt;FromUserName&gt;&lt;![CDATA[oIDrpjqASyTPnxRmpS9O_ruZGsfk]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">    &lt;CreateTime&gt;1377886191&lt;/CreateTime&gt;</span><br><span class="line">    &lt;MsgType&gt;&lt;![CDATA[event]]&gt;&lt;/MsgType&gt;</span><br><span class="line">    &lt;Event&gt;&lt;![CDATA[CLICK]]&gt;&lt;/Event&gt;</span><br><span class="line">    &lt;EventKey&gt;&lt;![CDATA[天气深圳]]&gt;&lt;/EventKey&gt;</span><br><span class="line">&lt;/xml&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>再次和读者说一下，微信开发比较简单，而<span style="color:#ffffff; background-color:#fb7d3f">掌握消息格式是基础</span>。读者可稍作记录供以后开发查阅。<br><span style="color:#ffffff; background-color:#fb7d3f">关于PHP</span>，由于代码中的比较简单，且为了避免文章过于冗长，会放在以后的PHP分类文章中讲解。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[微信公众平台的二次开发&ensp;—&ensp;快速上手]]></title>
      <url>http://zak7.com/2016/06/30/wechat/</url>
      <content type="html"><![CDATA[<p style="background-color:#b0f4f3;padding:15px">本文为“微信公众平台二次开发”的入门教程，完成教程你就可以实现微信公众号最基本的功能“自动回复”。<br></p>

<a id="more"></a><!-- 空一行，上下间距更小 -->
<blockquote>
<p>参考链接:<br><a href="http://jingyan.baidu.com/article/1e5468f92b2d09484961b7c4.html" target="_blank" rel="external">http://jingyan.baidu.com/article/11e5468…</a></p>
</blockquote>
<h2 id="申请服务器资源"><a href="#申请服务器资源" class="headerlink" title="申请服务器资源"></a>申请服务器资源</h2><h3 id="创建新浪云计算应用"><a href="#创建新浪云计算应用" class="headerlink" title="创建新浪云计算应用"></a>创建新浪云计算应用</h3><ol>
<li><strong>申请账号</strong><br>我们使用SAE新浪云计算平台作为服务器资源，并且申请PHP环境+MySQL数据库作为程序运行环境。<br>申请地址为：<br><a href="http://t.cn/R5R2Owg" target="_blank" rel="external">http://www.sinacloud.com/</a><br>直接点击上述网址，可以看到右上角微博登录的链接。<br><img src="http://115.28.217.112/github/wechat/1.jpg" alt=""><br>点击进入之后，使用新浪微博账号登录<br><img src="http://115.28.217.112/github/wechat/2.jpg" alt=""><br>登录之后，按照提示注册个人信息即可。</li>
<li><strong>创建新应用</strong><br>回到首页，在菜单顶部选择 控制台 ，再选择 云应用SAE 。<br><img src="http://115.28.217.112/github/wechat/3.jpg" alt=""><br>进入SAE应用列表<br><img src="http://115.28.217.112/github/wechat/4.jpg" alt=""><br>点击下侧的<span style="color:#ffffff; background-color:#3366ff">创建新应用</span>，这时会弹出提示， 禁止放置违法违规内容，点击<span style="color:#ffffff; background-color:#3366ff">继续创建</span>，弹出如下窗口。<br><img src="http://115.28.217.112/github/wechat/5.jpg" alt=""><br>选择一个未使用的appname<br>填写二级域名AppID、应用名称、验证码，开发语言选择PHP5.3，全部应用和框架下面选择第一个【PHP 空应用】。然后点击左下方的<span style="color:#ffffff; background-color:#3366ff">创建应用</span><br><img src="http://115.28.217.112/github/wechat/6.jpg" alt=""><br>应用创建成功。并自动跳转到应用列表中，可以看到已经有刚才创建的应用。<br><img src="http://115.28.217.112/github/wechat/7.jpg" alt=""></li>
<li><strong>创建版本</strong><br>点击刚才创建的应用名称，进入应用主页。<br>点击左侧的<strong>应用管理</strong>下面的<strong>代码管理</strong><br>在代码管理中，选择使用<span style="color:#ffffff; background-color:#3366ff">SVN</span>托管的方式。<br><img src="http://115.28.217.112/github/wechat/8.jpg" alt=""><br>跳转到代码管理<br><img src="http://115.28.217.112/github/wechat/9.jpg" alt=""><br>点击右侧的<span style="color:#ffffff; background-color:#3366ff">+创建版本</span><br><img src="http://115.28.217.112/github/wechat/10.jpg" alt=""><br>版本号默认为1，点击创建，有时会弹出安全登录，需要输入安全密码，如果不知道或者忘记了，就点里面的找回密码，重新设置一下。<br><img src="http://115.28.217.112/github/wechat/11.jpg" alt=""><br>验证通过之后，如下所示<br><img src="http://115.28.217.112/github/wechat/12.jpg" alt=""><br>到这里，就成功创建了一个域名URL为 <a href="http://test12test.applinzi.com" target="_blank" rel="external">http://test12test.applinzi.com</a> 的应用了，记住你的这个URL（ 不是<a href="http://1.test12test.applinzi.com" target="_blank" rel="external">http://1.test12test.applinzi.com</a> ），后面将会用到。</li>
<li><strong>上传代码</strong><br>下述代码是一个微信接口文件，点击直接下载。看不懂没有关系，我们会在本文后续的章节解释。<br><strong><a href="http://115.28.217.112/github/wechat/index.zip" target="_blank" rel="external"><span style="color:red;">&gt;&gt;&gt;下载代码包</span></a></strong><br>回到SAE的代码管理界面中。<br>再选择“上传代码包”，点击上传文件，选择刚才的index.zip文件，点击上传，上传成功后中间是一个绿色的横条，如下所示<br><img src="http://115.28.217.112/github/wechat/13.jpg" alt=""><br>上传成功后，点击“编辑代码”按钮（在“上传代码包”左边）。<br>有时候需要输入自己的安全密码，如果不记得了就点击“找回密码”。<br>安全验证成功后继续之前的操作。<br>我们可以看到index.php已经上传成功，双击可以查看编辑里面的代码<br><img src="http://115.28.217.112/github/wechat/14.jpg" alt=""><br>新浪云应用的创建就成功了。</li>
</ol>
<h2 id="申请微信公众号测试账号"><a href="#申请微信公众号测试账号" class="headerlink" title="申请微信公众号测试账号"></a>申请微信公众号测试账号</h2><p>请准备带微信帐号的手机。</p>
<blockquote>
<p>这里提一下，为什么要注册测试公众号而不是正常的公众号呢，主要的原因是个人公众号的接口有较大限制，不能满足后续开发的要求。</p>
</blockquote>
<ol>
<li>点击以下链接<br><a href="http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login" target="_blank" rel="external">http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login</a><br>跳转到“微信公众平台接口测试帐号申请”界面：<br><img src="http://115.28.217.112/github/wechat/15.jpg" alt=""></li>
<li>点击登录后。用手机登录你的微信，使用微信中的“扫一扫”功能，扫描上面网页中的二维码。在手机上会出现以下界面：<br><img src="http://115.28.217.112/github/wechat/16.jpg" alt=""></li>
<li>点击“确认登录”按钮，回到电脑的网页，网页将变为：<br><img src="http://115.28.217.112/github/wechat/17.jpg" alt=""></li>
<li>网页中提供了测试的微信号，及二维码，接口等信息。填写微信帐号连接的URL网址，此处为先前新浪云应用建立完毕后获得的URL（ <a href="http://test12test.applinzi.com" target="_blank" rel="external">http://test12test.applinzi.com</a> ）。然后输入你的令牌号到Token（任意字符串，但必须与你的URL网页中的Token值相同），此处需同我们已经上传的代码包中Token一致，为“weixin”。<br>输入完毕后，点击“提交”按钮，提示连接成功即可。</li>
<li>在手机微信号扫描网页中的二维码，就可以将你的公众测试帐号添加到微信的订阅号里了！<br><img src="http://115.28.217.112/github/wechat/18.jpg" alt=""><br>在公众号内输入任意字符，将自动回复当前时间。<br>到这里，你就已经实现了一个最基本的微信公众号。</li>
</ol>
<h2 id="代码包详解"><a href="#代码包详解" class="headerlink" title="代码包详解"></a>代码包详解</h2><p>先前在新浪云应用中上传的代码包，我们将在此节中为大家做一些讲解。<br>你可以在本地解压后阅读代码，也可以通过新浪云应用的“（左侧）应用-代码管理-编辑代码”进行阅读。<br><strong>↓↓ index.php ↓↓</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(<span class="string">'Content-type:text'</span>);</span><br><span class="line"></span><br><span class="line">define(<span class="string">"TOKEN"</span>, <span class="string">"weixin"</span>);//Token,可为任意字符串，与测试号页面所填一致即可</span><br><span class="line"><span class="variable">$wechatObj</span> = new wechatCallbackapiTest();</span><br><span class="line"><span class="keyword">if</span> (isset(<span class="variable">$_GET</span>[<span class="string">'echostr'</span>])) &#123;</span><br><span class="line">    <span class="variable">$wechatObj</span>-&gt;valid();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$wechatObj</span>-&gt;responseMsg();//调用回复信息方法</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class wechatCallbackapiTest</span><br><span class="line">&#123;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">valid</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$echoStr</span> = <span class="variable">$_GET</span>[<span class="string">"echostr"</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$this</span>-&gt;checkSignature())&#123;</span><br><span class="line">            header(<span class="string">'content-type:text'</span>);</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$echoStr</span>;</span><br><span class="line">            <span class="built_in">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private <span class="keyword">function</span> <span class="function"><span class="title">checkSignature</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$signature</span> = <span class="variable">$_GET</span>[<span class="string">"signature"</span>];</span><br><span class="line">        <span class="variable">$timestamp</span> = <span class="variable">$_GET</span>[<span class="string">"timestamp"</span>];</span><br><span class="line">        <span class="variable">$nonce</span> = <span class="variable">$_GET</span>[<span class="string">"nonce"</span>];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$token</span> = TOKEN;</span><br><span class="line">        <span class="variable">$tmpArr</span> = array(<span class="variable">$token</span>, <span class="variable">$timestamp</span>, <span class="variable">$nonce</span>);</span><br><span class="line">        sort(<span class="variable">$tmpArr</span>, SORT_STRING);</span><br><span class="line">        <span class="variable">$tmpStr</span> = implode( <span class="variable">$tmpArr</span> );</span><br><span class="line">        <span class="variable">$tmpStr</span> = sha1( <span class="variable">$tmpStr</span> );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( <span class="variable">$tmpStr</span> == <span class="variable">$signature</span> )&#123;</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">responseMsg</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$postStr</span> = <span class="variable">$GLOBALS</span>[<span class="string">"HTTP_RAW_POST_DATA"</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!empty(<span class="variable">$postStr</span>))&#123;</span><br><span class="line">            <span class="variable">$postObj</span> = simplexml_load_string(<span class="variable">$postStr</span>, <span class="string">'SimpleXMLElement'</span>, LIBXML_NOCDATA);</span><br><span class="line">            <span class="variable">$fromUsername</span> = <span class="variable">$postObj</span>-&gt;FromUserName;</span><br><span class="line">            <span class="variable">$toUsername</span> = <span class="variable">$postObj</span>-&gt;ToUserName;</span><br><span class="line">            <span class="variable">$keyword</span> = trim(<span class="variable">$postObj</span>-&gt;Content);</span><br><span class="line">            <span class="variable">$time</span> = time();</span><br><span class="line">/**</span><br><span class="line">*XML格式采用的是UTF-8编码，因此中文为UTF-8编码时，</span><br><span class="line">*客户端才不会出现乱码的问题</span><br><span class="line">*/</span><br><span class="line">            <span class="variable">$textTpl</span> = <span class="string">"&lt;xml&gt;</span><br><span class="line">                        &lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">                        &lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">                        &lt;CreateTime&gt;%s&lt;/CreateTime&gt;</span><br><span class="line">                        &lt;MsgType&gt;&lt;![CDATA[%s]]&gt;&lt;/MsgType&gt;</span><br><span class="line">                        &lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;</span><br><span class="line">                        &lt;FuncFlag&gt;0&lt;/FuncFlag&gt;</span><br><span class="line">                        &lt;/xml&gt;"</span>;</span><br><span class="line">            <span class="variable">$msgType</span> = <span class="string">"text"</span>;</span><br><span class="line">			<span class="variable">$contentStr</span> = date(<span class="string">"Y-m-d H:i:s"</span>,time()).<span class="string">"\n\n"</span>.<span class="string">'&lt;a href="http://lvze1992.github.io/"&gt;教程 博客&lt;/a&gt;'</span>;</span><br><span class="line">			<span class="variable">$resultStr</span> = sprintf(<span class="variable">$textTpl</span>, <span class="variable">$fromUsername</span>, <span class="variable">$toUsername</span>, <span class="variable">$time</span>, <span class="variable">$msgType</span>, <span class="variable">$contentStr</span>);</span><br><span class="line">			<span class="built_in">echo</span> <span class="variable">$resultStr</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">""</span>;</span><br><span class="line">            <span class="built_in">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>PHP语言的细节，我们将在后续PHP分类文章中归纳，此处均是较为简单的PHP语句，读者理解即可。<br>需要值得注意的是文本消息的格式。这会在“<a href="http://zak7.com/2016/07/01/wechat-msg/"><span style="color:#ffffff; background-color:#3366ff">微信公众平台的二次开发&ensp;—&ensp;消息类型</span></a>”中做详细讲解。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ns2.35中协议实现的研究]]></title>
      <url>http://zak7.com/2016/06/26/ns2-35-protocol/</url>
      <content type="html"><![CDATA[<p style="background-color:#f2f4b0;padding:15px">ns2.35是用于网络仿真的利器。本文将探讨无线传感器网络中协议的实现。<br>ns2.35 is used for network simulation. In this paper. In this paper, the realization of wireless sensor network protocol will be discussed.<br></p>

<a id="more"></a>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p>如若不完整，请补充。</p>
<blockquote>
<p><a href="http://baike.baidu.com/link?url=DcC1lLzS4E927UzKPu9O9S2tWIjX_GOv-3kSKUO_VQ2569BhxU5oASEYFPOB4E03tNDjvyIgAfl-6QICD7R4R_" target="_blank" rel="external">AODV百度词条</a></p>
</blockquote>
<h3 id="AODV协议介绍"><a href="#AODV协议介绍" class="headerlink" title="AODV协议介绍"></a>AODV协议介绍</h3><p>AODV(Ad hoc On-demand Distance Vector Routing)是一种按需路由协议。当一个节点需要给网络中的其他节点传送信息时，如果没有到达目标节点的路由，则必须先以多播的形式发出RREQ(路由请求)报文。RREQ报文中记录着发起节点和目标节点的网络层地址，邻近节点收到RREQ，首先判断目标节点是否为自己。如果是，则向发起节点发送RREP(路由回应)；如果不是，则首先在路由表中查找是否有到达目标节点的路由，如果有，则向源节<strong>点单播RREP，否则继续转发RREQ进行查找。</strong><br>如下图所示，为AODV路由的建立过程。<br><br><img src="http://115.28.217.112/github/ns/1.jpg" alt=""></p>
<h3 id="AODV协议修改"><a href="#AODV协议修改" class="headerlink" title="AODV协议修改"></a>AODV协议修改</h3><blockquote>
<p>修改已有的基础协议，是快速上手ns2的一种方法。故在此教程中，我们将修改AODV协议，即添加节点类型和节点层数，来实现一个新的协议（<strong>暂不讨论协议的效率</strong>）。</p>
</blockquote>
<h4 id="为节点添加自定义属性"><a href="#为节点添加自定义属性" class="headerlink" title="为节点添加自定义属性"></a>为节点添加自定义属性</h4><p>如何为节点添加属性，在我的文章，<a href="http://lvze1992.github.io/2016/06/26/ns2-35/" target="_blank" rel="external">ns2.35无线节点配置及相关</a>，中有详细的介绍。你不必跳回去阅读，因为我将重新讲解以避免混乱。<br><strong>请注意：我们讨论的是无线网络下的节点情况，故如果你正在寻找有线网络的相关ns2知识，本文可能不是很适合您。</strong></p>
<ol>
<li><p>修改mobilenode文件<br>打开mobilenode.h，添加节点属性并添加相应函数。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">protected:</span><br><span class="line">	int nodetype;</span><br><span class="line">	int nodelevel;</span><br><span class="line">	int setnodetype(int typenum);</span><br><span class="line">	int setnodetype2(int <span class="built_in">type</span>);</span><br><span class="line">	int setnodelevel(int level);</span><br></pre></td></tr></table></figure>
<p> 打开mobilenode.cc，修改command函数，新增如下代码。command需要重点理解，注意本次添加的代码在<code>else if(argc == 3)</code>判断内。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">int</span><br><span class="line">MobileNode::<span class="built_in">command</span>(int argc, const char*const* argv)</span><br><span class="line">...</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(argc == 3) &#123;//notice this !</span><br><span class="line">...</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(strcmp(argv[1],<span class="string">"setnodetype"</span>) == 0)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"setnodetype call\n"</span>);</span><br><span class="line">			setnodetype(atoi(argv[2]));</span><br><span class="line">			<span class="built_in">return</span> TCL_OK;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(strcmp(argv[1],<span class="string">"setnodetype2"</span>) == 0)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"setnodetype2 call\n"</span>);</span><br><span class="line">			setnodetype2(atoi(argv[2]));</span><br><span class="line">			<span class="built_in">return</span> TCL_OK;</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(strcmp(argv[1],<span class="string">"setnodelevel"</span>) == 0)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"setnodelevel call\n"</span>);</span><br><span class="line">			setnodelevel(atoi(argv[2]));</span><br><span class="line">			<span class="built_in">return</span> TCL_OK;</span><br><span class="line">		&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (argc == 4) &#123;//notice this !</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ns2.35无线节点配置及相关]]></title>
      <url>http://zak7.com/2016/06/26/ns2-35/</url>
      <content type="html"><![CDATA[<p style="background-color:#f2f4b0;padding:15px">ns2.35是用于网络仿真的利器。本文将探讨无线传感器网络节点的配置。<br>ns2.35 is used for network simulation. In this paper, the configuration of wireless sensor network node would be discussed.<br></p>

<a id="more"></a>
<h2 id="ns2-35无线网络中的节点配置"><a href="#ns2-35无线网络中的节点配置" class="headerlink" title="ns2.35无线网络中的节点配置"></a>ns2.35无线网络中的节点配置</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul>
<li><p>如果你是刚接触ns2.35，直接阅读本文可能会有比较多的疑惑。所以，为你推荐几个不错的介绍ns2的网站:</p>
<blockquote>
<p><em>&emsp;NS by Example：<a href="http://nile.wpi.edu/NS/" target="_blank" rel="external">http://nile.wpi.edu/NS/</a></em><br>&emsp;（ps：这个算是把ns2介绍的比较浅显详细的教程了，推荐耐心看完）<br><em>&emsp;Tutorial for the Network Simulator ns：<a href="http://www.isi.edu/nsnam/ns/tutorial/" target="_blank" rel="external">http://www.isi.edu/nsnam/ns/tutorial/</a></em><br>&emsp;（ps：推荐耐心看完）<br><em>&emsp;网络仿真利器NS-2无师自通七天速成系列：<a href="http://wenku.baidu.com/link?url=b0c49_sUomOXKM-VjVRroHGoiGjk7A3jnJLT2qR4cGAiEyHxRirglIMMZncb0ex8rqKZwHsFycrLwGeR8nElzpJLTknPVvJsbcw4na01pIS" target="_blank" rel="external">百度文库链接</a></em><br>&emsp;（ps：这个是中文的，个人感觉略显啰嗦，我也是只是大概浏览了，建议粗看）</p>
</blockquote>
</li>
<li><p>如果你还停留在安装阶段，建议你立刻完成安装，以便后续的学习。如何在win7下安装NS2：</p>
<blockquote>
<p><em>&emsp;Win7+Cygwin+Ns2.35 完全安装指南：<a href="http://wenku.baidu.com/link?url=Seo_T4KY5Ii_H-Xf2L5C1whucI2hB77_pXI_suswFY8FYl3EUNCjlOPgvH344kLG9Pdo_YqveKhrnRgDN-wwOTqPeVh8RFP9MRYtWhj_KEm" target="_blank" rel="external">百度文库链接</a> </em><br>&emsp;（ps：图文教程，把过程说得很详细，一步一步来即可）</p>
</blockquote>
</li>
</ul>
<hr>
<h3 id="如何修改节点的颜色"><a href="#如何修改节点的颜色" class="headerlink" title="如何修改节点的颜色"></a>如何修改节点的颜色</h3><h4 id="TCL中"><a href="#TCL中" class="headerlink" title="TCL中"></a>TCL中</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> i 0&#125; &#123;<span class="variable">$i</span> &lt; <span class="variable">$val</span>(nn)&#125; &#123;incr i&#125; &#123;</span><br><span class="line">	<span class="variable">$n</span>(<span class="variable">$i</span>) color black</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ns</span> at 0.01 <span class="string">"<span class="variable">$n</span>(4) color #00ff00"</span></span><br></pre></td></tr></table></figure>
<p>必须先给待设置节点激活颜色属性，才可以设置该节点颜色。2者缺一不可，若有错误，请指正。</p>
<h4 id="C-中"><a href="#C-中" class="headerlink" title="C++中"></a>C++中</h4><p>这里以AODV.cc为例<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#define CURRENT_TIME Scheduler::instance().clock() //获取当前时间</span></span><br><span class="line">...</span><br><span class="line">double atTime;</span><br><span class="line"><span class="keyword">if</span>(atTime &gt; 0)</span><br><span class="line">	atTime += 0.000000001;</span><br><span class="line">TCL::instance().evalf(<span class="string">"<span class="variable">$ns</span> at %.9f \"<span class="variable">$n</span>(5) color red\""</span>,atTime);</span><br></pre></td></tr></table></figure></p>
<p>利用该方法，可以实现：收到特定数据包后，节点变成相应颜色。更加自由。</p>
<hr>
<h3 id="添加节点标签和节点标记"><a href="#添加节点标签和节点标记" class="headerlink" title="添加节点标签和节点标记"></a>添加节点标签和节点标记</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#为节点添加标签</span></span><br><span class="line"><span class="variable">$ns</span> at 0.0 <span class="string">"<span class="variable">$n</span>(7) label source_1"</span></span><br><span class="line">...</span><br><span class="line"><span class="comment">#为节点添加标记（红色的圆圈）</span></span><br><span class="line"><span class="variable">$n</span>(6) delete-mark <span class="variable">$n</span>(6)</span><br><span class="line"><span class="variable">$n</span>(6) add-mark <span class="variable">$n</span>(6) red circle</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="修改节点大小"><a href="#修改节点大小" class="headerlink" title="修改节点大小"></a>修改节点大小</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> i 0&#125; &#123;<span class="variable">$i</span>&lt;<span class="variable">$val</span>(nn)&#125; &#123;incr i&#125; &#123;</span><br><span class="line">	<span class="variable">$ns</span> initial_node_pos <span class="variable">$n</span>(<span class="variable">$i</span>) 20;<span class="comment">#20控制这节点的大小，设为10则节点变小</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="设置节点随机布局"><a href="#设置节点随机布局" class="headerlink" title="设置节点随机布局"></a>设置节点随机布局</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> i 1&#125; &#123;<span class="variable">$i</span> &lt;= 30&#125; &#123;incr i&#125; &#123;</span><br><span class="line">	<span class="built_in">set</span> xx_ [expr rand()*100+<span class="variable">$val</span>(x)-250]</span><br><span class="line">	<span class="built_in">set</span> yy_ [expr rand()*400+300]</span><br><span class="line">	<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> X_ <span class="variable">$xx_</span>  </span><br><span class="line">	<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> Y_ <span class="variable">$yy_</span>                                 ;<span class="comment"># random node position</span></span><br><span class="line">	<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> Z_ 0.0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="设置节点随机移动"><a href="#设置节点随机移动" class="headerlink" title="设置节点随机移动"></a>设置节点随机移动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> i 1&#125; &#123;<span class="variable">$i</span> &lt;= 30&#125; &#123;incr i&#125; &#123;</span><br><span class="line">	<span class="built_in">set</span> xx_ [expr rand()*100+<span class="variable">$val</span>(x)-250]</span><br><span class="line">	<span class="built_in">set</span> yy_ [expr rand()*400+300]</span><br><span class="line">	<span class="built_in">set</span> rng_time [expr rand()*<span class="variable">$val</span>(stop)]</span><br><span class="line">	<span class="variable">$ns</span> at <span class="variable">$rng_time</span> <span class="string">"<span class="variable">$n</span>(<span class="variable">$i</span>) setdest <span class="variable">$xx_</span> <span class="variable">$yy_</span> <span class="variable">$val</span>(speed)"</span>   ;<span class="comment"># random movements</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果希望节点更多的移动，则可以在外层再添加一个循环：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> j 0&#125; &#123;<span class="variable">$j</span> &lt; 10&#125; &#123;incr j&#125; &#123;</span><br><span class="line">	<span class="keyword">for</span> &#123;<span class="built_in">set</span> i 1&#125; &#123;<span class="variable">$i</span> &lt;= 30&#125; &#123;incr i&#125; &#123;</span><br><span class="line">		<span class="built_in">set</span> xx_ [expr rand()*100+<span class="variable">$val</span>(x)-250]</span><br><span class="line">		<span class="built_in">set</span> yy_ [expr rand()*400+300]</span><br><span class="line">		<span class="built_in">set</span> rng_time [expr rand()*<span class="variable">$val</span>(stop)]</span><br><span class="line">		<span class="variable">$ns</span> at <span class="variable">$rng_time</span> <span class="string">"<span class="variable">$n</span>(<span class="variable">$i</span>) setdest <span class="variable">$xx_</span> <span class="variable">$yy_</span> <span class="variable">$val</span>(speed)"</span>   ;<span class="comment"># random movements</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="设置节点网格布局"><a href="#设置节点网格布局" class="headerlink" title="设置节点网格布局"></a>设置节点网格布局</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> i 2&#125; &#123;<span class="variable">$i</span> &lt; <span class="variable">$val</span>(nn)&#125; &#123;incr i&#125; &#123;</span><br><span class="line">	<span class="built_in">set</span> mm_ [expr int(<span class="variable">$i</span>/7+1)]</span><br><span class="line">	<span class="built_in">set</span> nn_ [expr <span class="variable">$i</span>-7*(<span class="variable">$mm_</span>-1)]</span><br><span class="line">	<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> X_ [expr 140.0*<span class="variable">$mm_</span>]</span><br><span class="line">	<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> Y_ [expr 140.0*<span class="variable">$nn_</span>]</span><br><span class="line">	<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> Z_ 0.0	;<span class="comment"># grid node initial position</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="自定义节点属性的添加和设置"><a href="#自定义节点属性的添加和设置" class="headerlink" title="自定义节点属性的添加和设置"></a>自定义节点属性的添加和设置</h3><p>由于本教程主要探讨的是无线网络中移动节点的相关问题。故有线网络环境下可能有所差异。<br>如果你无法实现，可能是由于我代码输入的差错或遗漏，也有可能是你尚未理解。请留言告知<br><strong>例如：为节点添加节点类型和节点层级的属性</strong></p>
<h4 id="C-中的代码如下："><a href="#C-中的代码如下：" class="headerlink" title="C++中的代码如下："></a>C++中的代码如下：</h4><blockquote>
<p>common/mobilenode.h</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">class MobileNode : public Node </span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">public:</span><br><span class="line">	int <span class="function"><span class="title">getnodetype</span></span>()&#123;<span class="built_in">return</span> nodetype;&#125;</span><br><span class="line">	int <span class="function"><span class="title">getnodelevel</span></span>()&#123;<span class="built_in">return</span> nodelevel;&#125;</span><br><span class="line">protected:</span><br><span class="line">	int nodetype;</span><br><span class="line">	int nodelevel;</span><br><span class="line">	int setnodetype(int typenum);</span><br><span class="line">	int setnodetype2(int <span class="built_in">type</span>);</span><br><span class="line">	int setnodelevel(int level);</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<blockquote>
<p>common/mobilenode.cc</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">//add by lvze</span><br><span class="line">/*以下是我新添加的头部文件，如果已经包含，忽略即可*/</span><br><span class="line"><span class="comment">#include &lt;math.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#define randomtype(x) (rand()%(x-1))+1</span></span><br><span class="line">/*初始化节点类型和层级*/</span><br><span class="line">MobileNode::MobileNode(void) : </span><br><span class="line">	pos_handle_(this)</span><br><span class="line">&#123;</span><br><span class="line">	nodetype = 0; //add by lvze</span><br><span class="line">	nodelevel = 15;	</span><br><span class="line">&#125;</span><br><span class="line">/* <span class="built_in">command</span>函数，很简单，但对此函数的理解非常重要！！</span><br><span class="line"> * <span class="built_in">command</span>函数的介绍在本文的稍后部分也有提及</span><br><span class="line"> */</span><br><span class="line">int</span><br><span class="line">MobileNode::<span class="built_in">command</span>(int argc, const char*const* argv)</span><br><span class="line">&#123;</span><br><span class="line">	Tcl&amp; tcl = Tcl::instance();</span><br><span class="line">	<span class="keyword">if</span>(argc == 2) &#123;</span><br><span class="line">...</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span>(argc == 3) &#123;/*注意，我们是在此判断内添加的*/</span><br><span class="line">...</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span>(strcmp(argv[1],<span class="string">"setnodetype"</span>) == 0)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"setnodetype call\n"</span>);</span><br><span class="line">			setnodetype(atoi(argv[2]));</span><br><span class="line">			<span class="built_in">return</span> TCL_OK;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(strcmp(argv[1],<span class="string">"setnodetype2"</span>) == 0)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"setnodetype2 call\n"</span>);</span><br><span class="line">			setnodetype2(atoi(argv[2]));</span><br><span class="line">			<span class="built_in">return</span> TCL_OK;</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(strcmp(argv[1],<span class="string">"setnodelevel"</span>) == 0)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"setnodelevel call\n"</span>);</span><br><span class="line">			setnodelevel(atoi(argv[2]));</span><br><span class="line">			<span class="built_in">return</span> TCL_OK;</span><br><span class="line">		&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">/*函数的具体实现*/</span><br><span class="line">/*随机设置节点类型，typenum为4，则会随机设置类型1-3*/</span><br><span class="line">int MobileNode::setnodetype(int typenum)</span><br><span class="line">&#123;</span><br><span class="line">	//srand((int)time(0));//(rand()%(x-1))+1</span><br><span class="line">	nodetype=(int)((Random::uniform())*1000000)%(typenum-1)+1;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"nodetype set %d                -------%f\n"</span>,nodetype,Random::uniform());</span><br><span class="line">	<span class="built_in">return</span> nodetype;</span><br><span class="line">&#125;</span><br><span class="line">/*指定设置节点类型*/</span><br><span class="line">int MobileNode::setnodetype2(int <span class="built_in">type</span>)&#123;</span><br><span class="line">	nodetype=<span class="built_in">type</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"nodetype set %d                -------0\n"</span>,nodetype);</span><br><span class="line">	<span class="built_in">return</span> nodetype;</span><br><span class="line">&#125;</span><br><span class="line">/*指定设置节点层数*/</span><br><span class="line">int MobileNode::setnodelevel(int level)</span><br><span class="line">&#123;</span><br><span class="line">	//srand((int)time(0));//(rand()%(x-1))+1</span><br><span class="line">	nodelevel=level;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"- nodelevel set %d                -------\n"</span>,level);</span><br><span class="line">	<span class="built_in">return</span> nodelevel;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="TCL中的代码如下："><a href="#TCL中的代码如下：" class="headerlink" title="TCL中的代码如下："></a>TCL中的代码如下：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">for</span> &#123;<span class="built_in">set</span> i 0&#125; &#123;<span class="variable">$i</span> &lt; <span class="variable">$val</span>(nn) &#125; &#123; incr i &#125; &#123;</span><br><span class="line"> <span class="built_in">set</span> n(<span class="variable">$i</span>) [<span class="variable">$ns</span> node] </span><br><span class="line"> <span class="variable">$ns</span> at 0.0 <span class="string">"<span class="variable">$n</span>(<span class="variable">$i</span>) setnodetype 4"</span>;<span class="comment">#全部随机分配节点类型1-3</span></span><br><span class="line"> &#125;</span><br><span class="line"><span class="variable">$ns</span> at 0.0 <span class="string">"<span class="variable">$n</span>(0) setnodetype2 4"</span>;<span class="comment">#分配节点类型(非随机)</span></span><br><span class="line"><span class="variable">$ns</span> at 0.0 <span class="string">"<span class="variable">$n</span>(97) setnodetype2 4"</span>;<span class="comment">#分配节点类型(非随机)</span></span><br><span class="line"><span class="variable">$ns</span> at 0.0 <span class="string">"<span class="variable">$n</span>(98) setnodetype2 4"</span>;<span class="comment">#分配节点类型(非随机)</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> i 31&#125; &#123;<span class="variable">$i</span> &lt;= 60&#125; &#123;incr i&#125; &#123;</span><br><span class="line"><span class="variable">$ns</span> at 0.0 <span class="string">"<span class="variable">$n</span>(<span class="variable">$i</span>) setnodelevel 2"</span>;<span class="comment">#分配节点层级</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="修改TCP数据包的颜色"><a href="#修改TCP数据包的颜色" class="headerlink" title="修改TCP数据包的颜色"></a>修改TCP数据包的颜色</h3><p>在TCL中，我们编写如下代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="variable">$ns</span> color 1 brown</span><br><span class="line"><span class="variable">$ns</span> color 2 green</span><br><span class="line"><span class="variable">$ns</span> color 3 blue</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> tcp [new Agent/TCP/Newreno]</span><br><span class="line"><span class="variable">$tcp</span> <span class="built_in">set</span> fid_ 1</span><br><span class="line"><span class="built_in">set</span> sink [new Agent/TCPSink]</span><br><span class="line"><span class="variable">$ns</span> attach-agent <span class="variable">$n</span>(3) <span class="variable">$tcp</span></span><br><span class="line"><span class="variable">$ns</span> attach-agent <span class="variable">$n</span>(0) <span class="variable">$sink</span></span><br><span class="line"><span class="variable">$ns</span> connect <span class="variable">$tcp</span> <span class="variable">$sink</span></span><br><span class="line"><span class="built_in">set</span> ftp [new Application/FTP]</span><br><span class="line"><span class="variable">$ftp</span> attach-agent <span class="variable">$tcp</span></span><br><span class="line"><span class="variable">$ns</span> at 15.0 <span class="string">"<span class="variable">$ftp</span> start"</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> tcp [new Agent/TCP/Newreno]</span><br><span class="line"><span class="variable">$tcp</span> <span class="built_in">set</span> fid_ 2</span><br><span class="line"><span class="built_in">set</span> sink [new Agent/TCPSink]</span><br><span class="line"><span class="variable">$ns</span> attach-agent <span class="variable">$n</span>(4) <span class="variable">$tcp</span></span><br><span class="line"><span class="variable">$ns</span> attach-agent <span class="variable">$n</span>(1) <span class="variable">$sink</span></span><br><span class="line"><span class="variable">$ns</span> connect <span class="variable">$tcp</span> <span class="variable">$sink</span></span><br><span class="line"><span class="built_in">set</span> ftp [new Application/FTP]</span><br><span class="line"><span class="variable">$ftp</span> attach-agent <span class="variable">$tcp</span></span><br><span class="line"><span class="variable">$ns</span> at 15.0 <span class="string">"<span class="variable">$ftp</span> start"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> tcp [new Agent/TCP/Newreno]</span><br><span class="line"><span class="variable">$tcp</span> <span class="built_in">set</span> fid_ 3</span><br><span class="line"><span class="built_in">set</span> sink [new Agent/TCPSink]</span><br><span class="line"><span class="variable">$ns</span> attach-agent <span class="variable">$n</span>(5) <span class="variable">$tcp</span></span><br><span class="line"><span class="variable">$ns</span> attach-agent <span class="variable">$n</span>(12) <span class="variable">$sink</span></span><br><span class="line"><span class="variable">$ns</span> connect <span class="variable">$tcp</span> <span class="variable">$sink</span></span><br><span class="line"><span class="built_in">set</span> ftp [new Application/FTP]</span><br><span class="line"><span class="variable">$ftp</span> attach-agent <span class="variable">$tcp</span></span><br><span class="line"><span class="variable">$ns</span> at 15.0 <span class="string">"<span class="variable">$ftp</span> start"</span> </span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>但运行后，数据包的颜色依旧不变。可能的原因是，数据包的颜色只有在802.15.4才可控，具体的代码实现在：</p>
<blockquote>
<p>trace/cmu-trace.cc</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">	int pkt_color = 0;</span><br><span class="line">	<span class="keyword">if</span> (ch-&gt;ptype()==PT_DIFF) &#123;</span><br><span class="line">		hdr_cdiff *dfh= HDR_CDIFF(p);</span><br><span class="line">		<span class="keyword">if</span> (dfh-&gt;mess_<span class="built_in">type</span> != DATA) &#123;</span><br><span class="line">			pkt_color = 1;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">/*    add code here       */</span><br><span class="line">	//&lt;zheng: add <span class="keyword">for</span> 802.15.4&gt;</span><br><span class="line">	<span class="keyword">if</span> (Nam802_15_4::Nam_Status)</span><br><span class="line">	&#123;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>可以看到，对于802.15.4的判断。若仍要修改颜色，可在上述代码“add code here”处添加如下代码：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hdr_ip *iph=hdr_ip::access(p);</span><br><span class="line">pkt_color=iph-&gt;fid_;</span><br></pre></td></tr></table></figure>
<p>重新运行脚本，你会发现数据包已经有颜色了。</p>
<blockquote>
<p><strong><a href="http://blog.csdn.net/bennyfun79/article/details/6208105" target="_blank" rel="external"><font color="red">此节参考链接</font></a></strong></p>
</blockquote>
<hr>
<h3 id="举个栗子-含能量模型"><a href="#举个栗子-含能量模型" class="headerlink" title="举个栗子(含能量模型)"></a>举个栗子(含能量模型)</h3><blockquote>
<p>栗子中节点的level和type设置，现在并没有任何意义。故注释掉了。<br>我会在 <strong><a href="http://localhost:4000/2016/06/26/ns2-35-protocol/" target="_blank" rel="external">ns2.35中协议实现的研究</a></strong> 给大家讲解如何利用它们。</p>
<p><strong><font color="red">这是本文的最后一节，为避免篇幅过长做的拆分。请阅读后续文章，<a href="http://localhost:4000/categories/ns2-35/" target="_blank" rel="external">ns2.35分类</a></font></strong><br><strong>若文章有错误或不理解，请留言 :)</strong></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Define options</span></span><br><span class="line"><span class="built_in">set</span> val(chan) [new Channel/WirelessChannel]    ;<span class="comment"># channel model</span></span><br><span class="line"><span class="built_in">set</span> val(prop) Propagation/TwoRayGround ;<span class="comment"># radio-propagation model</span></span><br><span class="line"><span class="built_in">set</span> val(netif) Phy/WirelessPhy ;<span class="comment"># network interface type</span></span><br><span class="line"><span class="built_in">set</span> val(mac) Mac/802_11 ;<span class="comment"># MAC type</span></span><br><span class="line"><span class="built_in">set</span> val(ifq) Queue/DropTail/PriQueue ;<span class="comment"># interface queue type</span></span><br><span class="line"><span class="built_in">set</span> val(ll) LL ;<span class="comment"># link layer type</span></span><br><span class="line"><span class="built_in">set</span> val(ant) Antenna/OmniAntenna ;<span class="comment"># antenna model</span></span><br><span class="line"><span class="built_in">set</span> val(ifqlen) 50 ;<span class="comment"># max packet in ifq</span></span><br><span class="line"><span class="built_in">set</span> val(nn) 99 ;<span class="comment"># number of mobilenodes</span></span><br><span class="line"><span class="built_in">set</span> val(rp) AODV ;<span class="comment"># routing protocol</span></span><br><span class="line"><span class="built_in">set</span> val(x) 1000 ;<span class="comment"># X dimension of topography</span></span><br><span class="line"><span class="built_in">set</span> val(y) 1000 ;<span class="comment"># Y dimension of topography </span></span><br><span class="line"><span class="built_in">set</span> val(stop) 550 ;<span class="comment"># time of simulation end 150</span></span><br><span class="line"><span class="built_in">set</span> val(engmodel) EnergyModel;</span><br><span class="line"><span class="built_in">set</span> val(initeng) 50;</span><br><span class="line"><span class="built_in">set</span> val(txPower) 1.660;</span><br><span class="line"><span class="built_in">set</span> val(rxPower) 0.105;</span><br><span class="line"><span class="built_in">set</span> val(idlePower) 0.025;</span><br><span class="line"><span class="built_in">set</span> val(speed) 10;</span><br><span class="line"><span class="built_in">set</span> ns [new Simulator]</span><br><span class="line"><span class="built_in">set</span> tracefd [open test.tr w]</span><br><span class="line"><span class="built_in">set</span> namtrace [open test.nam w] </span><br><span class="line"><span class="variable">$ns</span> trace-all <span class="variable">$tracefd</span></span><br><span class="line"><span class="variable">$ns</span> namtrace-all-wireless <span class="variable">$namtrace</span> <span class="variable">$val</span>(x) <span class="variable">$val</span>(y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># set up topography object</span></span><br><span class="line"><span class="built_in">set</span> topo [new Topography]</span><br><span class="line"></span><br><span class="line"><span class="variable">$topo</span> load_flatgrid <span class="variable">$val</span>(x) <span class="variable">$val</span>(y)</span><br><span class="line"></span><br><span class="line">create-god <span class="variable">$val</span>(nn)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># configure the nodes</span></span><br><span class="line"> <span class="variable">$ns</span> node-config -adhocRouting <span class="variable">$val</span>(rp) \</span><br><span class="line"> -llType <span class="variable">$val</span>(ll) \</span><br><span class="line"> -macType <span class="variable">$val</span>(mac) \</span><br><span class="line"> -ifqType <span class="variable">$val</span>(ifq) \</span><br><span class="line"> -ifqLen <span class="variable">$val</span>(ifqlen) \</span><br><span class="line"> -antType <span class="variable">$val</span>(ant) \</span><br><span class="line"> -propType <span class="variable">$val</span>(prop) \</span><br><span class="line"> -phyType <span class="variable">$val</span>(netif) \</span><br><span class="line"> -txPower <span class="variable">$val</span>(txPower) \</span><br><span class="line"> -rxPower <span class="variable">$val</span>(rxPower) \</span><br><span class="line"> -idlePower <span class="variable">$val</span>(idlePower) \</span><br><span class="line"> -energyModel <span class="variable">$val</span>(engmodel) \</span><br><span class="line"> -initialEnergy <span class="variable">$val</span>(initeng) \</span><br><span class="line"> -channel <span class="variable">$val</span>(chan) \</span><br><span class="line"> -topoInstance <span class="variable">$topo</span> \</span><br><span class="line"> -agentTrace ON \</span><br><span class="line"> -routerTrace ON \</span><br><span class="line"> -macTrace OFF \</span><br><span class="line"> -movementTrace ON</span><br><span class="line"></span><br><span class="line"><span class="comment"># for &#123;set i 0&#125; &#123;$i &lt; $val(nn) &#125; &#123; incr i &#125; &#123;</span></span><br><span class="line"><span class="comment"># set n($i) [$ns node] </span></span><br><span class="line"><span class="comment"># $ns at 0.0 "$n($i) setnodetype 4";#分配节点类型</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="comment">#$ns at 0.0 "$n(0) setnodetype2 4";#分配节点类型(非随机)</span></span><br><span class="line"><span class="comment">#$ns at 0.0 "$n(97) setnodetype2 4";#分配节点类型(非随机)</span></span><br><span class="line"><span class="comment">#$ns at 0.0 "$n(98) setnodetype2 4";#分配节点类型(非随机)</span></span><br><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> j 0&#125; &#123;<span class="variable">$j</span> &lt; 10&#125; &#123;incr j&#125; &#123;</span><br><span class="line">	<span class="keyword">for</span> &#123;<span class="built_in">set</span> i 1&#125; &#123;<span class="variable">$i</span> &lt;= 30&#125; &#123;incr i&#125; &#123;</span><br><span class="line">		<span class="built_in">set</span> xx_ [expr rand()*100+<span class="variable">$val</span>(x)-250]</span><br><span class="line">		<span class="built_in">set</span> yy_ [expr rand()*400+300]</span><br><span class="line">		<span class="built_in">set</span> rng_time [expr rand()*<span class="variable">$val</span>(stop)]</span><br><span class="line">		<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> X_ <span class="variable">$xx_</span>  </span><br><span class="line">		<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> Y_ <span class="variable">$yy_</span>     ;<span class="comment"># random node position</span></span><br><span class="line">		<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> Z_ 0.0</span><br><span class="line">		<span class="variable">$ns</span> at <span class="variable">$rng_time</span> <span class="string">"<span class="variable">$n</span>(<span class="variable">$i</span>) setdest <span class="variable">$xx_</span> <span class="variable">$yy_</span> <span class="variable">$val</span>(speed)"</span> ;<span class="comment"># random movements</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#for &#123;set i 1&#125; &#123;$i &lt;= 30&#125; &#123;incr i&#125; &#123;</span></span><br><span class="line"><span class="comment">#$ns at 0.0 "$n($i) setnodelevel 1";</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> j 0&#125; &#123;<span class="variable">$j</span> &lt; 10&#125; &#123;incr j&#125; &#123;</span><br><span class="line">	<span class="keyword">for</span> &#123;<span class="built_in">set</span> i 31&#125; &#123;<span class="variable">$i</span> &lt;= 60&#125; &#123;incr i&#125; &#123;</span><br><span class="line">		<span class="built_in">set</span> xx_ [expr rand()*90+<span class="variable">$val</span>(x)-350]</span><br><span class="line">		<span class="built_in">set</span> yy_ [expr rand()*500+250]</span><br><span class="line">		<span class="built_in">set</span> rng_time [expr rand()*<span class="variable">$val</span>(stop)]</span><br><span class="line">		<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> X_ <span class="variable">$xx_</span>  </span><br><span class="line">		<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> Y_ <span class="variable">$yy_</span>     ;<span class="comment"># random node position</span></span><br><span class="line">		<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> Z_ 0.0</span><br><span class="line">		<span class="variable">$ns</span> at <span class="variable">$rng_time</span> <span class="string">"<span class="variable">$n</span>(<span class="variable">$i</span>) setdest <span class="variable">$xx_</span> <span class="variable">$yy_</span> <span class="variable">$val</span>(speed)"</span>   ;<span class="comment"># random movements</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#for &#123;set i 31&#125; &#123;$i &lt;= 60&#125; &#123;incr i&#125; &#123;</span></span><br><span class="line"><span class="comment">#$ns at 0.0 "$n($i) setnodelevel 2";</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> j 0&#125; &#123;<span class="variable">$j</span> &lt; 10&#125; &#123;incr j&#125; &#123;</span><br><span class="line">	<span class="keyword">for</span> &#123;<span class="built_in">set</span> i 61&#125; &#123;<span class="variable">$i</span> &lt;= 90&#125; &#123;incr i&#125; &#123;</span><br><span class="line">		<span class="built_in">set</span> xx_ [expr rand()*90+<span class="variable">$val</span>(x)-450]</span><br><span class="line">		<span class="built_in">set</span> yy_ [expr rand()*600+200]</span><br><span class="line">		<span class="built_in">set</span> rng_time [expr rand()*<span class="variable">$val</span>(stop)]</span><br><span class="line">		<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> X_ <span class="variable">$xx_</span>  </span><br><span class="line">		<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> Y_ <span class="variable">$yy_</span>    ;<span class="comment"># random node position</span></span><br><span class="line">		<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> Z_ 0.0</span><br><span class="line">		<span class="variable">$ns</span> at <span class="variable">$rng_time</span> <span class="string">"<span class="variable">$n</span>(<span class="variable">$i</span>) setdest <span class="variable">$xx_</span> <span class="variable">$yy_</span> <span class="variable">$val</span>(speed)"</span>   ;<span class="comment"># random movements</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#for &#123;set i 61&#125; &#123;$i &lt;= 90&#125; &#123;incr i&#125; &#123;</span></span><br><span class="line"><span class="comment">#$ns at 0.0 "$n($i) setnodelevel 3";</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> j 0&#125; &#123;<span class="variable">$j</span> &lt; 10&#125; &#123;incr j&#125; &#123;</span><br><span class="line">	<span class="keyword">for</span> &#123;<span class="built_in">set</span> i 91&#125; &#123;<span class="variable">$i</span> &lt;= 95&#125; &#123;incr i&#125; &#123;</span><br><span class="line">		<span class="built_in">set</span> xx_ [expr rand()*50+<span class="variable">$val</span>(x)-550]</span><br><span class="line">		<span class="built_in">set</span> yy_ [expr rand()*400+300]</span><br><span class="line">		<span class="built_in">set</span> rng_time [expr rand()*<span class="variable">$val</span>(stop)]</span><br><span class="line">		<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> X_ <span class="variable">$xx_</span>  </span><br><span class="line">		<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> Y_ <span class="variable">$yy_</span>       ;<span class="comment"># random node position</span></span><br><span class="line">		<span class="variable">$n</span>(<span class="variable">$i</span>) <span class="built_in">set</span> Z_ 0.0</span><br><span class="line">		<span class="variable">$ns</span> at <span class="variable">$rng_time</span> <span class="string">"<span class="variable">$n</span>(<span class="variable">$i</span>) setdest <span class="variable">$xx_</span> <span class="variable">$yy_</span> <span class="variable">$val</span>(speed)"</span>   ;<span class="comment"># random movements</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">		<span class="variable">$n</span>(96) <span class="built_in">set</span> X_ 470.0</span><br><span class="line">		<span class="variable">$n</span>(96) <span class="built_in">set</span> Y_ 500.0      ;<span class="comment"># random node position</span></span><br><span class="line">		<span class="variable">$n</span>(96) <span class="built_in">set</span> Z_ 0.0</span><br><span class="line"><span class="variable">$n</span>(0) <span class="built_in">set</span> X_ 950.0</span><br><span class="line"><span class="variable">$n</span>(0) <span class="built_in">set</span> Y_ 500.0</span><br><span class="line"><span class="variable">$n</span>(0) <span class="built_in">set</span> Z_ 0.0</span><br><span class="line"><span class="variable">$n</span>(97) <span class="built_in">set</span> X_ 950.0</span><br><span class="line"><span class="variable">$n</span>(97) <span class="built_in">set</span> Y_ 200.0</span><br><span class="line"><span class="variable">$n</span>(97) <span class="built_in">set</span> Z_ 0.0</span><br><span class="line"><span class="variable">$n</span>(98) <span class="built_in">set</span> X_ 950.0</span><br><span class="line"><span class="variable">$n</span>(98) <span class="built_in">set</span> Y_ 700.0</span><br><span class="line"><span class="variable">$n</span>(98) <span class="built_in">set</span> Z_ 0.0</span><br><span class="line"><span class="comment">#$ns at 0.0 "$n(0) setnodelevel 0";</span></span><br><span class="line"><span class="comment">#$ns at 0.0 "$n(97) setnodelevel 0";</span></span><br><span class="line"><span class="comment">#$ns at 0.0 "$n(98) setnodelevel 0";</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#for &#123;set i 2&#125; &#123;$i &lt; $val(nn)&#125; &#123;incr i&#125; &#123;</span></span><br><span class="line"><span class="comment">#	set mm_ [expr int($i/7+1)]</span></span><br><span class="line"><span class="comment">#	set nn_ [expr $i-7*($mm_-1)]</span></span><br><span class="line"><span class="comment">#	$n($i) set X_ [expr 140.0*$mm_]</span></span><br><span class="line"><span class="comment">#	$n($i) set Y_ [expr 140.0*$nn_]</span></span><br><span class="line"><span class="comment">#	$n($i) set Z_ 0.0		     ;# grid node initial position</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"><span class="comment">#for &#123;set i 2&#125; &#123;$i &lt; $val(nn)&#125; &#123;incr i&#125; &#123;</span></span><br><span class="line"><span class="comment">#		set xx_ [expr rand()*$val(x)]</span></span><br><span class="line"><span class="comment">#		set yy_ [expr rand()*$val(y)]</span></span><br><span class="line"><span class="comment">#		$n($i) set X_ $xx_  </span></span><br><span class="line"><span class="comment">#		$n($i) set Y_ $yy_       ;# random node position</span></span><br><span class="line"><span class="comment">#		$n($i) set Z_ 0.0</span></span><br><span class="line"><span class="comment">#	&#125;</span></span><br><span class="line"><span class="comment"># Provide initial location of mobilenodes</span></span><br><span class="line"><span class="variable">$ns</span> color 1 brown</span><br><span class="line"><span class="variable">$ns</span> color 2 green</span><br><span class="line"><span class="variable">$ns</span> color 3 blue</span><br><span class="line"><span class="variable">$ns</span> color 30 purple</span><br><span class="line"><span class="variable">$ns</span> color 31 yellow</span><br><span class="line"><span class="comment"># Set a TCP connection between n(0) and n(20)</span></span><br><span class="line"><span class="built_in">set</span> tcp [new Agent/TCP/Newreno]</span><br><span class="line"><span class="variable">$tcp</span> <span class="built_in">set</span> fid_ 1</span><br><span class="line"><span class="built_in">set</span> sink [new Agent/TCPSink]</span><br><span class="line"><span class="variable">$ns</span> attach-agent <span class="variable">$n</span>(96) <span class="variable">$tcp</span></span><br><span class="line"><span class="variable">$ns</span> attach-agent <span class="variable">$n</span>(0) <span class="variable">$sink</span></span><br><span class="line"><span class="variable">$ns</span> connect <span class="variable">$tcp</span> <span class="variable">$sink</span></span><br><span class="line"><span class="built_in">set</span> ftp [new Application/FTP]</span><br><span class="line"><span class="variable">$ftp</span> attach-agent <span class="variable">$tcp</span></span><br><span class="line"><span class="variable">$ns</span> at 15.0 <span class="string">"<span class="variable">$ftp</span> start"</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#defining heads</span></span><br><span class="line"><span class="variable">$ns</span> at 0.0 <span class="string">"<span class="variable">$n</span>(0) label SinkNode(1)"</span></span><br><span class="line"><span class="variable">$ns</span> at 0.0 <span class="string">"<span class="variable">$n</span>(96) label source_1"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#$ns at 13.0 "$n(26) setdest 700.0 20.0 5.0" </span></span><br><span class="line"><span class="comment">#$ns at 15.0 "$n(14) setdest 115.0 85.0 5.0" </span></span><br><span class="line"><span class="comment">#Colors for packets from two mcast groups</span></span><br><span class="line"><span class="comment">#$ns color 10 red</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Group 0 source</span></span><br><span class="line"><span class="comment">#$tcp0 set fid_ 10</span></span><br><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> i 0&#125; &#123;<span class="variable">$i</span> &lt; <span class="variable">$val</span>(nn)&#125; &#123; incr i &#125; &#123;</span><br><span class="line"><span class="comment"># 20 defines the node size for nam</span></span><br><span class="line"><span class="variable">$n</span>(<span class="variable">$i</span>) color black</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#$ns at 1.0 "setcolor $n(2) green"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define node initial position in nam</span></span><br><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> i 0&#125; &#123;<span class="variable">$i</span> &lt; <span class="variable">$val</span>(nn)&#125; &#123; incr i &#125; &#123;</span><br><span class="line"><span class="comment"># 20 defines the node size for nam</span></span><br><span class="line"><span class="variable">$ns</span> initial_node_pos <span class="variable">$n</span>(<span class="variable">$i</span>) 10</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Telling nodes when the simulation ends</span></span><br><span class="line"><span class="keyword">for</span> &#123;<span class="built_in">set</span> i 0&#125; &#123;<span class="variable">$i</span> &lt; <span class="variable">$val</span>(nn) &#125; &#123; incr i &#125; &#123;</span><br><span class="line"> <span class="variable">$ns</span> at <span class="variable">$val</span>(stop) <span class="string">"<span class="variable">$n</span>(<span class="variable">$i</span>) reset"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ending nam and the simulation </span></span><br><span class="line"><span class="variable">$ns</span> at <span class="variable">$val</span>(stop) <span class="string">"<span class="variable">$ns</span> nam-end-wireless <span class="variable">$val</span>(stop)"</span></span><br><span class="line"><span class="variable">$ns</span> at <span class="variable">$val</span>(stop) <span class="string">"stop"</span></span><br><span class="line"><span class="variable">$ns</span> at <span class="variable">$val</span>(stop) <span class="string">"puts \"end simulation\" ; <span class="variable">$ns</span> halt"</span></span><br><span class="line">proc stop &#123;&#125; &#123;</span><br><span class="line"> global ns tracefd namtrace</span><br><span class="line"> <span class="variable">$ns</span> flush-trace</span><br><span class="line"> close <span class="variable">$tracefd</span></span><br><span class="line"> close <span class="variable">$namtrace</span></span><br><span class="line"><span class="built_in">exec</span> nam test.nam &amp;</span><br><span class="line">&#125;</span><br><span class="line">proc setcolor &#123;node color&#125; &#123;</span><br><span class="line"><span class="variable">$node</span> delete-mark <span class="variable">$node</span></span><br><span class="line"><span class="variable">$node</span> add-mark <span class="variable">$node</span> <span class="variable">$color</span> circle</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ns</span> run</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Markdown语法]]></title>
      <url>http://zak7.com/2016/06/25/hello-world/</url>
      <content type="html"><![CDATA[<p style="background-color:#b0f4f3;padding:15px">在本文中，将收录Markdown的一些基本语法，便于以后查阅。<br>In this paper,  some basic syntax of Markdown would be included, for easily accessible.<br></p>

<a id="more"></a><!-- 空一行，上下间距更小 -->
<h2 id="Markdown-语法说明"><a href="#Markdown-语法说明" class="headerlink" title="Markdown 语法说明"></a>Markdown 语法说明</h2><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><strong>#</strong> 认识与入门 Markdown：<br>&emsp;<a href="http://sspai.com/25137l" target="_blank" rel="external">http://sspai.com/25137</a><br><strong>#</strong> Markdown 语法说明 (简体中文版)：<br>&emsp;<a href="http://wowubuntu.com/markdown/#list" target="_blank" rel="external">http://wowubuntu.com/markdown/#list</a></p>
<h3 id="Markdown基本标签"><a href="#Markdown基本标签" class="headerlink" title="Markdown基本标签"></a>Markdown基本标签</h3><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是 H1</span></span><br><span class="line"><span class="comment">## 这是 H2</span></span><br><span class="line"><span class="comment">###### 这是 H6</span></span><br></pre></td></tr></table></figure>
</blockquote>
<hr>
<h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">* 1无序列表</span><br><span class="line">* 2</span><br><span class="line">* 3</span><br><span class="line">1. 1有序列表</span><br><span class="line">2. 2</span><br><span class="line">3. 3</span><br></pre></td></tr></table></figure>
<ul>
<li>1无序列表</li>
<li>2</li>
<li>3</li>
</ul>
<ol>
<li>1有序列表</li>
<li>2</li>
<li>3</li>
</ol>
</blockquote>
<hr>
<h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;创建引用</span><br></pre></td></tr></table></figure>
<blockquote>
<p>创建引用</p>
</blockquote>
</blockquote>
<hr>
<h4 id="图片or超链接"><a href="#图片or超链接" class="headerlink" title="图片or超链接"></a>图片or超链接</h4><blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[链接](http://lvze1992.github.io)</span><br><span class="line">![图片](http://lvze1992.github.io/images/avatar.jpg)</span><br></pre></td></tr></table></figure>
<p><a href="http://lvze1992.github.io" target="_blank" rel="external">链接</a><br><img src="http://lvze1992.github.io/images/avatar.jpg" alt="图片"></p>
</blockquote>
<hr>
<h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><blockquote>
<p>``` bash<br>把中间的代码包裹起来<br>```<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">有行号的代码块。</span><br><span class="line">这是第二行</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h4 id="代码段"><a href="#代码段" class="headerlink" title="代码段"></a>代码段</h4><blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">四个空格或一个tab符</span><br></pre></td></tr></table></figure>
<pre><code>四个空格或一个tab符,无序号的代码段
</code></pre></blockquote>
<hr>
<h4 id="混合引用"><a href="#混合引用" class="headerlink" title="混合引用"></a>混合引用</h4><blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*   This is a list item with two paragraphs.</span><br><span class="line"></span><br><span class="line">*   Another item <span class="keyword">in</span> the same list.</span><br><span class="line">	&gt; This is a blockquote</span><br><span class="line">	&gt; &gt; inside a list item.</span><br></pre></td></tr></table></figure>
<ul>
<li><p>This is a list item with two paragraphs.</p>
</li>
<li><p>Another item in the same list.</p>
<blockquote>
<p>This is a blockquote</p>
<blockquote>
<p>inside a list item.</p>
</blockquote>
</blockquote>
</li>
</ul>
</blockquote>
<hr>
<h4 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h4><blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">似乎都一个样</span><br><span class="line">* * *</span><br><span class="line">***</span><br><span class="line">*****</span><br><span class="line">- - -</span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure>
</blockquote>
<hr>
<h4 id="强调字体"><a href="#强调字体" class="headerlink" title="强调字体"></a>强调字体</h4><blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*single asterisks*</span><br><span class="line">_single underscores_</span><br><span class="line">**double asterisks**</span><br><span class="line">__double underscores__</span><br></pre></td></tr></table></figure>
<p><em>single asterisks</em><br><em>single underscores</em><br><strong>double asterisks</strong><br><strong>double underscores</strong></p>
</blockquote>
<hr>
<h3 id="Markdown标签进阶"><a href="#Markdown标签进阶" class="headerlink" title="Markdown标签进阶"></a>Markdown标签进阶</h3><h4 id="背景色"><a href="#背景色" class="headerlink" title="背景色"></a>背景色</h4><blockquote>
<p><strong>颜色对照表</strong> <a href="http://blog.csdn.net/testcs_dn/article/details/45766819" target="_blank" rel="external">http://blog.csdn.net/testcs_dn/article/details/45766819</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">&lt;tr&gt;&lt;td bgcolor=<span class="comment">#7FFFD4&gt;</span></span><br><span class="line">这里的背景色是：Aquamarine，  十六进制颜色值：<span class="comment">#7FFFD4， rgb(127, 255, 212)</span></span><br><span class="line">&lt;/td&gt;&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;p style=<span class="string">"background-color:#FFD700;padding:15px"</span>&gt;段落背景色&lt;/p&gt;</span><br></pre></td></tr></table></figure></p>
<p><table><tr><td bgcolor="#7FFFD4">这里的背景色是：Aquamarine，  十六进制颜色值：#7FFFD4， rgb(127, 255, 212)</td></tr></table></p>
<p style="background-color:#FFFACD;padding:15px">段落背景色</p>

</blockquote>
<hr>
<h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| Tables        | Are           | Cool  |</span><br><span class="line">| ------------- |:-------------:| -----:|</span><br><span class="line">| col 3 is      | right-aligned | <span class="variable">$1600</span> |</span><br><span class="line">| col 2 is      | centered      |   <span class="variable">$12</span> |</span><br><span class="line">| zebra stripes | are neat      |    <span class="variable">$1</span> |</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Tables</th>
<th style="text-align:center">Are</th>
<th style="text-align:right">Cool</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 3 is</td>
<td style="text-align:center">right-aligned</td>
<td style="text-align:right">$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:right">$12</td>
</tr>
<tr>
<td>zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:right">$1</td>
</tr>
</tbody>
</table>
</blockquote>
<hr>
<h4 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h4><blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">This is the second paragraph <span class="keyword">in</span> the list item. </span><br><span class="line">&amp;emsp;This is the second paragraph <span class="keyword">in</span> the list item. </span><br><span class="line">&amp;ensp;This is the second paragraph <span class="keyword">in</span> the list item. </span><br><span class="line">&amp;nbsp;This is the second paragraph <span class="keyword">in</span> the list item.</span><br></pre></td></tr></table></figure>
<p>This is the second paragraph in the list item.<br>&emsp;This is the second paragraph in the list item.<br>&ensp;This is the second paragraph in the list item.<br>&nbsp;This is the second paragraph in the list item. </p>
</blockquote>
<hr>
<h4 id="文本居中引用"><a href="#文本居中引用" class="headerlink" title="文本居中引用"></a>文本居中引用</h4><blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span><br><span class="line">&lt;!-- 其中 class=<span class="string">"blockquote-center"</span> 是必须的 --&gt;</span><br><span class="line">  &lt;blockquote class=<span class="string">"blockquote-center"</span>&gt;blah blah blah&lt;/blockquote&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span><br><span class="line">&#123;% centerquote %&#125;blah blah blah&#123;% endcenterquote %&#125;</span><br><span class="line">  &lt;!-- 标签别名 --&gt;</span><br><span class="line">&#123;% cq %&#125; blah blah blah &#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center"><p>blah blah blah </p>
</blockquote>
</blockquote>
<hr>
<h4 id="突破容器宽度限制的图片"><a href="#突破容器宽度限制的图片" class="headerlink" title="突破容器宽度限制的图片"></a>突破容器宽度限制的图片</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span><br><span class="line">&lt;!-- 其中 class=<span class="string">"full-image"</span> 是必须的 --&gt;</span><br><span class="line">&lt;img src=<span class="string">"/image-url"</span> class=<span class="string">"full-image"</span> /&gt;</span><br><span class="line">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span><br><span class="line">&#123;% fullimage /image-url, alt, title %&#125;</span><br><span class="line">&lt;!-- 别名 --&gt;</span><br><span class="line">&#123;% <span class="keyword">fi</span> /image-url, alt, title %&#125;</span><br></pre></td></tr></table></figure>
<img src="/full-image.JPG" class="full-image" alt="alt" title="突破容器宽度限制的图片">
<h3 id="Markdown编辑工具"><a href="#Markdown编辑工具" class="headerlink" title="Markdown编辑工具"></a>Markdown编辑工具</h3><p><strong>#</strong> MarkdownPad<br>&emsp;<a href="http://www.markdownpad.com/" target="_blank" rel="external">http://www.markdownpad.com/</a></p>
]]></content>
    </entry>
    
  
  
</search>
